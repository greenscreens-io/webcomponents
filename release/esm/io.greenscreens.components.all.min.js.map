{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../../modules/base/GSVersion.mjs","../../modules/base/style.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSID.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSDynamicStyle.mjs","../../modules/base/GSCacheStyles.mjs","../../modules/base/GSAdoptedEngine.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSTemplateCache.mjs","../../modules/base/GSAttributeHandler.mjs","../../modules/base/GSBeep.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSLocalization.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSRouter.mjs","../../modules/base/GSTheme.mjs","../../modules/helpers/BinaryTree.mjs","../../modules/helpers/DoublyLinkedList.mjs","../../modules/helpers/LinkedList.mjs","../../modules/helpers/Stack.mjs","../../modules/helpers/Queue.mjs","../../modules/helpers/Tree.mjs","../../modules/data/DataSelector.mjs","../../modules/data/ReadWriteRegistry.mjs","../../modules/data/AbstractReadWrite.mjs","../../modules/data/ReadWrite.mjs","../../modules/data/CachedReadWrite.mjs","../../modules/data/TreeNode.mjs","../../modules/data/TreeReader.mjs","../../modules/lib2.mjs","../../modules/directives/dataset.mjs","../../modules/directives/literal.mjs","../../modules/directives/css-map.mjs","../../modules/properties/verificator.mjs","../../modules/properties/autocapitalize.mjs","../../modules/properties/autocomplete.mjs","../../modules/properties/autocorrect.mjs","../../modules/properties/buttonType.mjs","../../modules/properties/color.mjs","../../modules/properties/environment.mjs","../../modules/properties/inputType.mjs","../../modules/properties/nav.mjs","../../modules/properties/orientation.mjs","../../modules/properties/placement.mjs","../../modules/properties/position.mjs","../../modules/properties/protocol.mjs","../../modules/properties/size.mjs","../../modules/properties/arrayConverter.mjs","../../modules/controllers/AdoptedController.mjs","../../modules/controllers/AttributeController.mjs","../../modules/controllers/ContentController.mjs","../../modules/controllers/DataController.mjs","../../modules/controllers/ElementMoveController.mjs","../../modules/controllers/LocalizationController.mjs","../../modules/controllers/OrientationController.mjs","../../modules/controllers/TemplateController.mjs","../../modules/controllers/ThemeController.mjs","../../modules/controllers/SlotController.mjs","../../modules/GSElement.mjs","../../modules/controllers/ElementNavigationController.mjs","../../modules/controllers/GroupController.mjs","../../modules/components/Router.mjs","../../modules/components/Accordion.mjs","../../modules/components/AccordionItem.mjs","../../modules/components/Alert.mjs","../../modules/components/Button.mjs","../../modules/components/Calendar.mjs","../../modules/components/Card.mjs","../../modules/components/Center.mjs","../../modules/components/Menu.mjs","../../modules/components/Context.mjs","../../modules/components/Compare.mjs","../../modules/components/Controller.mjs","../../modules/components/Copyright.mjs","../../modules/components/DataHandler.mjs","../../modules/components/Dialog.mjs","../../modules/components/Drawer.mjs","../../modules/components/Dropdown.mjs","../../modules/components/Email.mjs","../../modules/components/Form.mjs","../../modules/components/FormGroup.mjs","../../modules/components/FormPanel.mjs","../../modules/components/Group.mjs","../../modules/components/Icon.mjs","../../modules/components/Indent.mjs","../../modules/components/Image.mjs","../../modules/components/Layout.mjs","../../modules/components/Link.mjs","../../modules/components/List.mjs","../../modules/components/ListItem.mjs","../../modules/components/Mouse.mjs","../../modules/components/Movable.mjs","../../modules/components/Nav.mjs","../../modules/components/NavItem.mjs","../../modules/components/Overlay.mjs","../../modules/components/Pager.mjs","../../modules/components/Popup.mjs","../../modules/components/Popover.mjs","../../modules/components/Progress.mjs","../../modules/components/Spinner.mjs","../../modules/components/Splitter.mjs","../../modules/components/tab/Tab.mjs","../../modules/components/tab/TabPanel.mjs","../../modules/components/tab/TabGroup.mjs","../../modules/components/Table.mjs","../../modules/components/Tag.mjs","../../modules/components/Text.mjs","../../modules/components/Tooltip.mjs","../../modules/components/Template.mjs","../../modules/components/ext/controllers/CopySelectController.mjs","../../modules/components/ext/controllers/MaskController.mjs","../../modules/components/ext/controllers/MultipatternController.mjs","../../modules/components/ext/controllers/NumberController.mjs","../../modules/components/ext/controllers/PasswordController.mjs","../../modules/components/ext/controllers/TextController.mjs","../../modules/components/ext/controllers/InteractiveController.mjs","../../modules/components/ext/controllers/ComboController.mjs","../../modules/components/ext/controllers/ListController.mjs","../../modules/components/ext/controllers/ValidityController.mjs","../../modules/components/ext/EventsMixin.mjs","../../modules/components/ext/controllers/FormController.mjs","../../modules/components/ext/ControllerHandler.mjs","../../modules/components/ext/GSButtonElement.mjs","../../modules/components/ext/GSInputElement.mjs","../../modules/components/ext/GSTextAreaElement.mjs","../../modules/components/ext/GSSelectElement.mjs","../../modules/components/ext/GSDataListElement.mjs","../../modules/components/ext/GSFormElement.mjs","../../modules/components/breadcrumb/Breadcrumb.mjs","../../modules/components/breadcrumb/BreadcrumbItem.mjs","../../modules/components/filebox/Attachment.mjs","../../modules/components/filebox/FileBox.mjs","../../modules/components/intl/TimeFormat.mjs","../../modules/components/intl/DateFormat.mjs","../../modules/components/intl/YearFormat.mjs","../../modules/components/intl/CurrencyFormat.mjs","../../modules/components/steps/StepStyle.mjs","../../modules/components/steps/Step.mjs","../../modules/components/steps/Steps.mjs","../../modules/components/toast/Notification.mjs","../../modules/components/toast/Toast.mjs","../../modules/components/tree/controllers/AbstractTreeController.mjs","../../modules/components/tree/controllers/TreeController.mjs","../../modules/components/tree/TreeItem.mjs","../../modules/components/tree/Tree.mjs","../../modules/components/ServiceWorkker.mjs","../../modules/extra/Chart.mjs","../../modules/extra/Highlight.mjs","../../modules/extra/Markdown.mjs","../../modules/extra/Monaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport class GSVersion {\r\n\r\n    static get version() {\r\n        return '2.0.0';\r\n    }\r\n\r\n    static get build() {\r\n        return 2025.0131;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Required CSS Styles for WebCompoents, regardless Bootstrap CSS.\r\n */\r\nexport const gsstyles = `.z-10k{z-index:10000 !important;}\r\n.gs-hide,gs-item{display:none !important;}\r\ngs-popover,gs-tooltip{position:fixed;top:0px;left:0px;},\r\n.d-contents{display:contents;}';\r\ngs-button-group::part(.btn-group){box-shadow:rgba(72, 72, 72, 0.4) 0px 0.125rem 0.25rem;}\r\ngs-group>gs-button::part(button) {box-shadow: none;}\r\ngs-group>gs-button:not(:last-child)::part(button) {border-top-right-radius: 0;border-bottom-right-radius: 0;}\r\ngs-group>gs-button:not(:first-child)::part(button) {margin-left: calc(var(--bs-border-width) * -5);border-top-left-radius: 0;border-bottom-left-radius: 0;}\r\ngs-layout {width: 100%;height: 100%;}\r\ngs-split-panel{flex: 1 1 auto !important;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]:before {content: attr(data-value);display: inline-block;position: absolute;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-datetime-edit, input::-webkit-inner-spin-button, input::-webkit-clear-button {visibility: hidden;display: inline-block;}\r\ninput[is=\"gs-ext-input\"][type=\"date\"]::-webkit-calendar-picker-indicator {position: relative;top: 0px;right: 0;color: black;opacity: 0.5;}\r\n`;","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => {\r\n\t\tconst v = GSUtil.normalize(val).toLowerCase();\r\n\t\treturn v === 'true' || v === '1';\r\n\t};\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic isPrimitive = (o) => !Array.isArray(o) && (this.isBool(o) || this.isDate(o) || this.isNumber(o) || this.isString(o));\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic nonNull = value => !GSUtil.isNull(value);\r\n\r\n\tstatic asArray(val) {\r\n\t\treturn Array.isArray(val) ? val : [val];\r\n\t}\r\n\r\n\tstatic asNum(val, dft = 0, language) {\r\n\t\tlanguage = language || GSUtil.language;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(language);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default language\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get language() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(language) {\r\n\t\treturn Intl.NumberFormat(language).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on language\r\n\t * @param {string} language \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(language = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(language).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\t\t\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\t\t\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() === right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tif (time <= 0) return;\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type generator function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunctionGenerator(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const GeneratorFunction = (function*(){}).constructor;\r\n        return fn instanceof GeneratorFunction;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\nconst isProxy = Symbol(\"isProxy\")\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribute name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.asBool(val)) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return val;\r\n\t\tconst v = el.getAttribute(name) ?? val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '{}') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.toJson(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\t//GSAttr.toggle(el, name, GSUtil.asBool(val));\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string} val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '{}') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {})\r\n\t\t.filter(kv => kv[0] != 'items')\r\n\t\t.filter(kv => kv[0][0] != '#')\r\n\t\t.filter(kv => kv[0][0] != '$')\r\n\t\t.map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @param {HTMLElement} host The host element to proxify\r\n\t * @param {Object} [opt={}] Options object describing attribute mapping and types\r\n\t * @param {String} [recursive='items'] Property name for recursive proxification of children\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop] = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (typeof prop === 'symbol') return target[prop];\r\n\t\t\t\tif (prop === 'isProxy') return isProxy;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\t\t\t\t\r\n\t\t\t\tconst tmp = opt; // Object.hasOwn(opt, prop) ? opt : target;\r\n\t\t\t\t\r\n\t\t\t\tconst type = tmp[prop]?.type;\r\n\t\t\t\tconst safe = tmp[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = tmp[prop]?.default;\r\n\t\t\t\tconst multi = tmp[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = tmp[prop]?.attribute || prop;\r\n\t\t\t\tlet val = target.hasAttribute(prop) ? GSAttr.get(target, prop) : target[prop];\r\n\r\n\t\t\t\tif (GSFunction.isFunction(val)) return val.bind(target);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computedStyleMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        if (GSCSSMap.#modern) return GSUtil.asNum(val?.value);\r\n        const num = val?.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift();\r\n        return GSUtil.asNum(num);\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyleMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #language = navigator.language;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, language) {\r\n        const me = this;\r\n        if (language) me.language = language;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const dayOffset = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + dayOffset).split(' ');\r\n        /*\r\n        const emptyDays =  first === 0 ? 0 : first + dayOffset;\r\n        const days = Array.from({ length: emptyDays }, () => '');\r\n        */\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get language() {\r\n        return this.#language;\r\n    }\r\n\r\n    set language(val) {\r\n        this.#language = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, language = navigator.language, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.language = language;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#language)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#language, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, language) {\r\n        format = format || GSUtil.getDateFormat(language);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    /**\r\n     * Check if a year is a leap year\r\n     * @param {number} year \r\n     * @returns {Boolean}\r\n     */\r\n    static isLeapYear(year) {\r\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, language: {}, extract: {}, key: { type: Boolean } };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static unique(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * TODO: improve https://www.geeksforgeeks.org/how-to-convert-array-of-objects-into-unique-array-of-objects-in-javascript/\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @param {Boolean} advanced Used when data is Object instead of string\r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = [], advanced = false) {\r\n        if (advanced) {\r\n            return [...new Set([...first, ...second].map(JSON.stringify))].map(JSON.parse);\r\n        }\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', language:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const language = cfg.language || GSUtil.language;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        // intercept overrides; used b GS-TABLE cell Ui remapping\r\n        if (cfg.childElementCount > 0) {\r\n            const el = cfg.querySelector(`gs-item[value=\"${val}\"]`);\r\n            return GSAttr.get(el, \"map\", val);\r\n        }\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                if (GSUtil.isNumber(val)) return new GSDate(val).format(cfg.format, language);\r\n                if (cfg.format) return GSDate.parse(val, cfg.format, language);\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, language);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, language) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(language);\r\n                    return new GSDate(val).format(fmt, language);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, language);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(language, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [data];\r\n        filter = Array.isArray(filter) ? filter : [filter];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = GSUtil.isPrimitive(filter);\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter, fields);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter, fields) {\r\n\r\n        let primitive = false;\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            primitive = GSUtil.isPrimitive(flt);\r\n            if (primitive) {\r\n                found = found && GSData.filterSimple(rec, flt, fields);\r\n            } else {\r\n                value = rec[flt.name];\r\n                if (flt.name) {\r\n                    found = found && GSData.filterValue(value, flt)\r\n                } else {\r\n                    found = found && GSData.filterSimple(rec, flt.value, fields);\r\n                }\r\n            }\r\n\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        const toCheck = GSUtil.isPrimitive(filter) ? filter : filter.value;\r\n        if (GSUtil.isDate(value)) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (GSUtil.isNumber(value)) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(toCheck, null), filter.op);\r\n        } else {\r\n            return (GSUtil.normalize(value)).toLocaleLowerCase().includes(GSUtil.normalize(toCheck).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, language) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(language);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.language);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToObject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToObject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToObject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToObject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name, partial = false) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj[n][i] : null;\r\n        } else if (obj.hasOwnProperty(n)) {\r\n            obj = partial ? obj[n] || obj : obj[n];\r\n        } else {\r\n            obj = null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n\tstatic readFromObject(obj, name) {\r\n        if (obj?.hasOwnProperty(name)) return GSData.readFromProperty(obj, name);\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    /**\r\n     * Create a deep clone of an object\r\n     * @param {Object} obj \r\n     * @returns {Object}\r\n     */\r\n    static deepClone(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Recursevly clean child elements. Helper for GC\r\n\t * @param {*} owner \r\n\t */\r\n\tstatic cleanup(owner) {\r\n\t\tArray.from(GSDOM.walk(owner, false, true, false))\r\n\t\t.forEach(el => {\r\n\t\t\tif (GSDOM.isTemplateElement(el)) GSDOM.cleanup(el.content);\r\n\t\t\tel.remove?.();\r\n\t\t\tel.innerHTML = '';\r\n\t\t\tel.nodeValue = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} shadow \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el, shadow = false) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()), shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is inside shadowDom\r\n\t * @param {*} el \r\n\t */\r\n\tstatic isShadowed(el) {\r\n\t\treturn GSDOM.parentAll(el).filter(e => e instanceof ShadowRoot).next()?.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @param {Number} level How many levels to walk, 0 = all\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry, levels = 0) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tlevels = GSUtil.asNum(levels, 0);\r\n\t\tconst limit = levels > 0;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t\tif (limit && --levels == 0) return null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\t// if (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false, noEmpty = false) {\r\n\t\tif (el?.name) {\r\n\t\t\tif (noEmpty && GSUtil.isStringEmpty(el.value)) return obj;\r\n\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t} else if (el.checked) {\r\n\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\tGSData.writeToObject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn('Skipping element, name not defined!', el);\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive, plain, definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (obj[\"#def\"]) {\r\n\t\t\tel[Symbol.for(\"#def\")] = obj[\"#def\"];\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj)\r\n\t\t\t.filter(v => v != 'items')\r\n\t\t\t.filter(v => v[0] != '#')\r\n\t\t\t.filter(v => v[0] != '$')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tgroup = GSUtil.capitalizeAttr(group);\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', '');\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif (GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Extract and merge all static properties definition from WebComponent instance\r\n\t * @param {GSElement} obj \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic allProperties(obj) {\r\n\t\tconst list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n\t\tlist.push(obj.constructor?.properties || obj.properties);\r\n\t\treturn GSData.mergeObjects(list);\r\n\t}\r\n\r\n\t/**\r\n\t * Return element template ref\r\n\t * @param {GSElement} host \r\n\t * @returns \r\n\t */\r\n\tstatic templateRef(host) {\r\n\t\tif (!host) return;\r\n\t\tif (host.tagName === 'GS-TEMPLATE') return host.src;\r\n\t\treturn host.template || host.query?.('template', false);\r\n\t}\r\n\r\n\tstatic #globalDispatch(name, opt) {\r\n\t\tqueueMicrotask(() => {\r\n\t\t\tglobalThis.dispatchEvent?.(new CustomEvent(name, opt));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Register class as WebComponent to the browser\r\n\t * @param {String} name \r\n\t * @param {class} clazz Optional, if not set, use self\r\n\t * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (!customElements.get(name)) {\r\n\t\t\tcustomElements.define(name, clazz, opt);\r\n\t\t\tGSDOM.#globalDispatch(name, { detail: { customElements: true } });\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tGSDOM.#globalDispatch('gs-base-ready', {\r\n\t\t\tdetail: {\r\n\t\t\t\tmessage: 'GS Base is ready',\r\n\t\t\t\ttime: new Date(),\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #suspended = 0; // Corrected typo\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 0, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('Error waiting for page load:', e); // Improved error handling\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (GSEvents.#loaded) {\r\n\t\t\tawait GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.sendSuspended(target, name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#suspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#suspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#suspended > 0) GSEvents.#suspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, evt => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', reject);\r\n\t\t\t\t\tcallback?.(evt);\r\n\t\t\t\t\tresolve(evt);\r\n\t\t\t\t}, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event\r\n\t *  default - prevent system default event handling\r\n\t *  propagation - prevent all bubbling\r\n\t *  immedate - prevent all bubbling + this element \r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, defaults = true, propagate = true, immediate = true) {\r\n\t\tif (e) {\r\n\t\t\tif (defaults) e.preventDefault?.();\r\n\t\t\tif (propagate) e.stopPropagation?.();\r\n\t\t\tif (immediate) e.stopImmediatePropagation?.();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!GSUtil.isString(name) || name.length === 0) return false;\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner (used to store event handler for later release by element destruction )\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic detachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if available.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = GSUtil.isString(data) ? data : data.action || data.data?.action;\r\n\t\t\tGSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t\tGSEvents.waitPageLoad();\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {Boolean} A status of successful observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @param {Object} opt A JSON configuration object\r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el, opt) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el, opt);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {Boolean} forRemove If \"true\", return injection filter functions, else removal functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {Boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {Boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {Boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {Boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {Boolean} forRemove - call on node remove or add\r\n     * @param {HTMLElement} target - element to monitor\r\n     * @returns {Boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {Boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {Boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = (style || '').toString();\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\nimport { gsstyles } from \"./style.mjs\";\r\n\r\n/**\r\n * Cache for dynamically loaded styles.\r\n * Used to share styles among GS-* WebComponents\r\n * @class\r\n */\r\nexport class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Create a new CSSStyleSheet\r\n\t * @param {String} id Unique ID\r\n\t * @returns {CSSStyleSheet} Created instance\r\n\t */\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {String} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {String} id \r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\t\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\t\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {String} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {String} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id, style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/**\r\n\t * Inject CSS used by framework across all shadows\r\n\t * @param {string} css CSS string to inject\r\n\t * @param {number} [hash=0] Optional hash for the style\r\n\t */\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSID.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(gsstyles);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSDOM } from './GSDOM.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSDOMObserver } from './GSDOMObserver.mjs';\r\nimport { GSCacheStyles } from './GSCacheStyles.mjs';\r\n\r\nconst adoptedId = Symbol();\r\nconst observer = Symbol();\r\n\r\n/**\r\n * Monitor HTMLStyleElement & HTMLLinkElement (of type stylesheet) for changes.\r\n * Every such element marked with data-adoptable=\"true\" will be cached and\r\n * will trigger gs-adopted event to notify component controller to update adoptableStyleSheet list\r\n */\r\nexport class GSAdoptedEngine {\r\n\r\n  static timeout = 1000; // Default timeout for adopting stylesheets\r\n  static #timerID = 0;\r\n  static #ID = Date.now();\r\n  static #scheduled = false;\r\n\r\n  static #init() {\r\n    const me = GSAdoptedEngine;\r\n    me.observe(document.head);\r\n    me.#preload();\r\n    me.#timerID = setInterval(() => me.#adopt(), me.timeout);\r\n  }\r\n\r\n  static #clear() {\r\n    const me = GSAdoptedEngine;\r\n    clearInterval(me.#timerID);\r\n    me.#timerID = undefined;\r\n  }\r\n\r\n  static #adopt() {\r\n    const me = GSAdoptedEngine;\r\n    const sheets = me.#adoptable;\r\n    if (sheets.length == 0) return me.#clear();\r\n    sheets.map(s => me.#adoptSheet(s));\r\n    me.update();\r\n  }\r\n\r\n  static update() {\r\n    const me = GSAdoptedEngine;\r\n    if (me.#scheduled) return;\r\n    me.#scheduled = true;\r\n    queueMicrotask(() => {\r\n      requestAnimationFrame(() => {\r\n        try {\r\n          document.adoptedStyleSheets = me.#sorted;\r\n          document.adoptedStyleSheets.id = ++me.#ID;\r\n        } finally {\r\n          me.#scheduled = false;\r\n          globalThis.dispatchEvent(new CustomEvent('gs-adopted'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  static #asText(sheet) {\r\n    return Object.values(sheet.cssRules).map(o => o.cssText).join('');\r\n  }\r\n\r\n  static #adoptLink(el) {\r\n    const me = GSAdoptedEngine;\r\n    GSAdoptedEngine.#monitorAttributes(el);\r\n    Array.from(document.styleSheets).filter(s => s.ownerNode === el).map(s => me.#adoptSheet(s));\r\n  }\r\n\r\n  static #adoptSheet(sheet) {\r\n    const me = GSAdoptedEngine;\r\n    const style = me.#asText(sheet);\r\n    return me.#adoptStyle(sheet.ownerNode, style);\r\n  }\r\n\r\n  static #adoptStyle(ownerNode, style) {\r\n    const me = GSAdoptedEngine;\r\n    const sheet = new CSSStyleSheet();\r\n    sheet.replaceSync(style);\r\n    sheet.id = ++me.#ID;\r\n    ownerNode[adoptedId] = sheet.id;\r\n    me.#store(ownerNode, sheet);\r\n    return sheet;\r\n  }\r\n\r\n  static #store(ownerNode, sheet) {\r\n    GSCacheStyles.set(sheet.id, sheet);\r\n  }\r\n\r\n  static #remove(ownerNode, sheet) {\r\n    GSCacheStyles.remove(sheet.id);\r\n    ownerNode[observer]?.disconnect?.();\r\n    ownerNode[observer] = undefined;\r\n  }\r\n\r\n  static get #sorted() {\r\n    return GSCacheStyles.styles;\r\n  }\r\n\r\n  /**\r\n   * List of adoptable styles or links. Filter only those with dataset.adoptable=true\r\n   * @returns {HTMLStyleElement|HTMLLinkElement}\r\n   */\r\n  static get #adoptable() {\r\n    return Object.values(document.styleSheets)\r\n      .filter(o => o.ownerNode)\r\n      .filter(o => o.ownerNode.dataset.adoptable)\r\n      .filter(o => !o.ownerNode[adoptedId]);\r\n  }\r\n\r\n  static #preload() {\r\n    GSDOM.queryAll(document.head, 'link[rel=\"preload\"][as=\"style\"]')\r\n    .forEach(el => {\r\n      el.remove();\r\n      document.head.appendChild(el);\r\n    });\r\n  }\r\n\r\n  static #onAttributeChange(mutationList) {\r\n    mutationList.forEach((mutation) => {\r\n       const id = mutation.target[adoptedId];\r\n       const style = GSCacheStyles.get(id);\r\n       if(style) style.disabled = mutation.target.hasAttribute('disabled');\r\n    });\r\n    GSAdoptedEngine.update();\r\n  }\r\n  \r\n  static #monitorAttributes(element) {\r\n    const me = GSAdoptedEngine;\r\n    const callback = me.#onAttributeChange.bind(me);\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(element, {\r\n      attributeFilter: [\"disabled\"],\r\n      attributeOldValue: true,\r\n      subtree: false,\r\n    });\r\n    return observer;\r\n  }\r\n  \r\n  /**\r\n   * Filter style and link(css) elements which will be shared\r\n   * with all web components. Filter only those marked with data-adoptable\r\n   * @param {HTMLElement} el \r\n   * @returns {Boolean} Return true if monitored element is selected for further processing\r\n   */\r\n  static #onMonitorFilter(el) {\r\n    return (Boolean(el.dataset?.adoptable))\r\n      && (\r\n        (el instanceof HTMLLinkElement && (el.rel === 'stylesheet' || el.as === \"style\"))\r\n        || el instanceof HTMLStyleElement\r\n      );\r\n  }\r\n\r\n  /**\r\n   * When style added to the HTML page, attach it to the WebComponents\r\n   * @param {HTMLStyleElement|HTMLLinkElement} el \r\n   */\r\n  static #onMonitorConnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    if (el instanceof HTMLStyleElement) {\r\n      me.#adoptStyle(el, el.innerText);\r\n      me.update();\r\n    } else if (el instanceof HTMLLinkElement) {\r\n      GSEvents.wait(el, 'load', 0, false).then(e => {\r\n        if (el.rel === 'preload') return el.rel = \"stylesheet\";\r\n        me.#adoptLink(e.target);\r\n        me.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When style removed, remove from adoptable and update\r\n   * @param {HTMLElement} el \r\n   */\r\n  static #onMonitorDisconnect(el) {\r\n    const me = GSAdoptedEngine;\r\n    me.#sorted.filter(o => o.id === el[adoptedId])\r\n          .forEach(o => me.#remove(el, o));\r\n    me.update();\r\n  }\r\n\r\n  /**\r\n   * Observe DOM tree for mutations\r\n   * @param {HTMLElement} owner Root element to watch DOM tree from \r\n   */\r\n  static observe(owner) {\r\n    const me = GSAdoptedEngine;\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorConnect, false, owner);\r\n    GSDOMObserver.registerFilter(me.#onMonitorFilter, me.#onMonitorDisconnect, true, owner);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSVersion } from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static ROUTER_URL = globalThis.GS_ROUTER_URL || location.origin;\r\n\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        const rootURL = GSLoader.#defaultURL;\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            GSLoader.TEMPLATE_URL = rootURL;\r\n            globalThis.GS_TEMPLATE_URL = rootURL;\r\n        }\r\n\r\n        if (!globalThis.GS_ROUTER_URL) {\r\n            GSLoader.ROUTER_URL = rootURL;\r\n            globalThis.GS_ROUTER_URL = rootURL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n\r\n    static get #defaultURL() {\r\n        const url = location.href.split('?').pop();\r\n        const seg = url.split('/');\r\n        return url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n    }\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        //if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        }\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used to load router definition from virtual path\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getRouter(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? GSUtil.toJson(el.innerHTML) : {};\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getRouterURL(def);\r\n        return GSLoader.loadSafe(def, 'GET', null, true);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getRouterURL(url = '') {\r\n        url = url.startsWith('//') ? GSLoader.#routerURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #routerURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#routerPath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #routerPath() {\r\n        return GSLoader.ROUTER_URL ? GSLoader.ROUTER_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP method get|put|post\r\n     * @param {Object} headers HTTP request headers in JSON key/value pairs\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @param {} body Data to send in a request \r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            // TODO - detect if binary\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t static clear() {\r\n\t\tGSTemplateCache.#store.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by its name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve already existing template by name,\r\n\t * or inject a new one if it does not exist already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} tpl Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t// return document.getElementById(tpl.slice(1));\r\n\t\t\treturn GSDOM.query(`template[id=\"${tpl.slice(1)}\"]`, true);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-attribute - toggle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-call - calls a function on a given target (multiple functions supported)\r\n * - data-gs-event - emit event (can bubble or compose)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: \r\n * data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * \r\n * data-gs-target determine element on which to execute,\r\n * if not specified, it means current element\r\n * \r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        \r\n        event: { attribute: 'data-gs-event' },\r\n        bubbles: { attribute: 'data-gs-bubbles', type: Boolean },\r\n        composed: { attribute: 'data-gs-composed', type: Boolean },\r\n\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        hashed: { attribute: 'data-gs-hashed', type: Boolean },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host =  el.isProxy ? el.self : el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = el.isProxy ? el : GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    /**\r\n     * Main function to process element data-gs-* attributes\r\n     * @param {Event} e \r\n     */\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    /**\r\n     * Process each individual data-gs-* attribute\r\n     * @param {GSElement} host \r\n     * @param {String|HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleSwap(host, target);\r\n        me.#handleInject(host, target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleEvent(host, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    /**\r\n     * Bind provided value to the form or form element\r\n     * @param {HTMLFormElement|HTMLInputElement} target \r\n     * @param {Event} evt \r\n     * @returns \r\n     */\r\n    #handleBinding(target, evt) {\r\n        const source = evt?.target?.field || evt?.target?.form || evt?.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (!(isField || isForm)) return;\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trigger 'action' event on target to execute specific function\r\n     * @param {GSElement} target \r\n     */\r\n    #handleAction(target) {\r\n        if (this.action) GSEvents.send(target, 'action', this.action, true, true);\r\n    }\r\n\r\n    /**\r\n     * Set target attribute value\r\n     * @param {HTMLElement} target \r\n     * @returns \r\n     */\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    /**\r\n     * Set value to target propery\r\n     * @param {GSElement} target \r\n     * @returns \r\n     */\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.inject) target = GSDOM.query(target, me.inject);\r\n        if (me.swap) target = GSDOM.query(target, me.swap);\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle target css class\r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.slice().reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    /**\r\n     * Calls a function on a target\r\n     * @param {*} host \r\n     * @param {*} target \r\n     * @param {*} evt \r\n     * @returns \r\n     */\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)(evt);\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send an event to a target\r\n     * @param {HTMLElement} target \r\n     * @param {Event} evt \r\n     */\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleEvent(host, evt) {\r\n        //host.emit?.(this.event, evt, this.bubbles, this.composed, true);\r\n        GSEvents.send(host, this.event, evt, this.bubbles, this.composed, true);\r\n    }\r\n\r\n    #handleContent(host, target, value, clean = false) {\r\n        const me = this;\r\n        if (value) {\r\n            let src = '';\r\n            const useDef = GSUtil.asBool(value);\r\n            if (useDef) {\r\n                src = GSDOM.fromJsonAsString(me.definition);\r\n            } else {                \r\n                src = me.#toHTML(value);                \r\n            }\r\n\r\n            const content = GSDOM.parse(src, true);\r\n\r\n            if (!useDef) {\r\n                GSAttr.jsonToAttr(me.definition, content);\r\n            }\r\n\r\n            if (clean) { \r\n                //target.innerHTML = '';\r\n                GSDOM.cleanup(target);\r\n            }\r\n\r\n            content.dataset.gsHashed = me.hashed;\r\n            me.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Inject HTML to target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleInject(host, target) {\r\n        this.#handleContent(host, target, this.inject, false);\r\n    }\r\n\r\n    /**\r\n     * Swap inner HTML on a target\r\n     * @param {HTMLElement} target \r\n     */\r\n    #handleSwap(host, target) {\r\n        this.#handleContent(host, target, this.swap, true);\r\n    }\r\n\r\n    /**\r\n     * Convert value as URL to a tempalte or as a component name to inject\r\n     * @param {String} value \r\n     * @returns {String}\r\n     */\r\n    #toHTML(value = '') {\r\n        return value.indexOf('/') < 0 ? `<${value}></${value}>` : `<gs-template flat src=\"${value}\"></gs-template>`;\r\n    }\r\n\r\n    /**\r\n     * Load HTML template and apply to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     */\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    /**\r\n     * Apply htmltemplate to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} template \r\n     */    \r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    /**\r\n     * Apply html template to a target\r\n     * @param {GSElement} host \r\n     * @param {HTMLElement} target \r\n     * @param {HTMLTemplateElement} content \r\n     */    \r\n    #applyContent(host, target, content) {\r\n        if (host?.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    detach(name = 'click') {\r\n        //GSEvents.detachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                //return [GSDOM.root(me.#host)];\r\n                return [me.#host.parentComponent];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        const list = GSDOM.queryAll(document.body, me.target, false, true).filter(el => el.tagName !== 'GS-ITEM'); \r\n        if (list.length === 0) list.push(me.#host);\r\n        return list;\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get definition() { return this.#proxy[Symbol.for('#def')]; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get event() { return this.#proxy.event; }\r\n    get bubbles() { return this.#proxy.bubbles; }\r\n    get composed() { return this.#proxy.composed; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n    get hashed() { return this.#proxy.hashed; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v[0]));\r\n    }\r\n\r\n    /**\r\n     * Is property value JSON\r\n     */\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    /**\r\n     * Is element attribute value JSON\r\n     */\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    /**\r\n     * Wrap any element into data-gs-* handler\r\n     * @param {HTMLElement} el \r\n     * @returns {Proxy}\r\n     */\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    /**\r\n     * Process data-gs-* attributes on a element\r\n     * @param {HTMLElement} el \r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('data-gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    /**\r\n     * Create a new attribute handler instance\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     * @param {boolean} override If 'false' will skip existing attributes\r\n     */\r\n    static clone(from, to, override = true) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .filter(o => override || !to.hasAttribute(o.attribute))          \r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    /**\r\n     * Check if component is bindable to events\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n    static isBindable(el) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        return Object.values(def)\r\n            .filter(o => el.hasAttribute(o.attribute))\r\n            .length > 0;\r\n\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBeep class\r\n * @module base/GSBeep\r\n */\r\n\r\n\r\n/**\r\n * A helper class to use browser AudiContext to make tones\r\n * @class\r\n */\r\nexport class GSBeep {\r\n\r\n    static audioCtx = globalThis.AudioContext || globalThis.webkitAudioContext || globalThis.audioContext;\r\n\r\n    /**\r\n     * Helper function to emit a beep sound in the browser using the Web Audio API.\r\n     * \r\n     * @param {number} duration - The duration of the beep sound in milliseconds.\r\n     * @param {number} frequency - The frequency of the beep sound.\r\n     * @param {number} volume - The volume of the beep sound.\r\n     * @param {string} tyoe - The sound type (sine, square, sawtooth, triangle, custom)\r\n     * \r\n     * @returns {Promise} - A promise that resolves when the beep sound is finished.\r\n     */\r\n    static beep(duration = 200, frequency = 440, volume = 1, type = 'sine') {\r\n        return new Promise((resolve, reject) => {\r\n            try{\r\n                if (!GSBeep.isAvailable) return resolve();\r\n                const context = new GSBeep.audioCtx();\r\n                const oscillatorNode = context.createOscillator();\r\n                const gainNode = context.createGain();\r\n                oscillatorNode.connect(gainNode);\r\n\r\n                // Set the oscillator frequency in hertz\r\n                oscillatorNode.frequency.value = frequency;\r\n\r\n                // Set the type of oscillator\r\n                oscillatorNode.type = type;\r\n                gainNode.connect(context.destination);\r\n\r\n                // Set the gain to the volume\r\n                gainNode.gain.value = volume * 0.01;\r\n\r\n                // Start audio with the desired duration\r\n                oscillatorNode.start(context.currentTime);\r\n                oscillatorNode.stop(context.currentTime + duration * 0.001);\r\n\r\n                // Resolve the promise when the sound is finished\r\n                oscillatorNode.onended = () => resolve();                \r\n            }catch(error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    static get isAvailable() {\r\n        const {isActive, hasBeenActive } =  navigator.userActivation;\r\n        return isActive || hasBeenActive;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promises sequentially\r\n\t * @param {Array<Promise>} ps \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        wrap.controller = abortable instanceof AbortController ? abortable : (abortable ? new GSAbortController(timeout) : null);\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n            me.#listeners.delete(o);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport { GSEvent } from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport class GSEventBus {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {String} name EventBus name\r\n     * @param {String} type Event name\r\n     * @param {Object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {String} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {String} name unique buss name\r\n     * @returns {Boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constructor to attach Gesture featuer to an HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {Boolean} swipe Monitor swipe gesture\r\n     * @param {Boolean} tap Monitor tap gesture\r\n     * @param {Boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move: me.#handleTouchMove.bind(me),\r\n            start: me.#handleTouchStart.bind(me),\r\n            end: me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) {\r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 && Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {Number}\r\n     */\r\n    static fingers(e) {\r\n        return e.detail.touches?.length;\r\n    }\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns {GSGesture}\r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport class GSItem extends HTMLElement {\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic properties = {\r\n\t\tactive: { type: Boolean },\r\n\t\tdisabled: { type: Boolean },\r\n\t\tselected: { type: Boolean },\r\n\t\tautofocus: { type: Boolean },\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return template content of GS-ITEM element (if exists)\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tget body() {\r\n\t\tlet tpl = GSAttr.get(this, 'template');\r\n\t\tif (tpl) return `<gs-template flat src=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = this.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item elements\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tget items() {\r\n\t\treturn Array.from(this.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSAttr.get(this, 'name', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent GS-* component\r\n\t */\r\n\tget parentComponent() {\r\n\t\treturn GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n\t}\r\n\t\t\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n\r\n\t/**\r\n\t * Validate that parent element contains only specific childrens\r\n\t * @param {*} own \r\n\t * @param {*} tagName \r\n\t * @returns \r\n\t */\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic collect(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Convert GS-ITEM list to JSON\r\n\t * @param {HTMLElement} root Element containing GS-ITEM childs \r\n\t * @returns {Array} Arary of JSON objects\r\n\t */\r\n\tstatic toJSON(root) {\r\n\t\treturn GSItem.collect(root).map(el => el.asJSON(true));\r\n\t}\r\n\r\n\t/**\r\n\t * Make GS-ITEM attributes JSON compatible \r\n\t * @param {*} root \r\n\t * @param {*} definition \r\n\t * @returns \r\n\t */\r\n    static proxify(root, definition) {        \r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, definition));\r\n    }\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSDynamicStyle } from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport class GSPopper {\r\n\r\n\t/**\r\n\t * A simple wrapper to get element DOMRect\r\n\t * @param {HTMLElement} el \r\n\t * @returns {DOMRect}\r\n\t */\r\n\tstatic asRect(el) {\r\n\t\treturn el.getBoundingClientRect();\r\n\t}\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = GSPopper.asRect(el);\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = GSPopper.asRect(element);\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tif (!style) return;\r\n\r\n\t\tconst css = {\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\tmargin: '0px',\r\n\t\t\tpadding: '0px',\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.translate = `${obj.x}px ${obj.y}px`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {String} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {Boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = GSDynamicStyle.dynamicStyle(source);\r\n\t\tconst astyle = GSDynamicStyle.dynamicStyle(arrow);\r\n\t\tif (!style) return;\r\n\t\t\r\n\t\tconst css = {\r\n\t\t\tinset: GSPopper.#inset(pos),\r\n\t\t\tposition: 'absolute',\r\n\t\t\tmargin: '0px',\r\n\t\t\ttop: '0px',\r\n\t\t\tleft: '0px',\r\n\t\t\twidth: 'max-content',\r\n\t\t\theight: 'max-content',\t\t\t\r\n\t\t\ttransform: '',\r\n\t\t\ttranslate: ''\r\n\t\t};\r\n\r\n\t\tObject.assign(style, css);\r\n\t\tastyle.position = 'absolute';\r\n\r\n\t\tconst srect = GSPopper.asRect(source);\r\n\t\tconst arect = GSPopper.asRect(arrow);\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tconst aopt = {\r\n\t\t\ttranslate: `${arr.x}px ${arr.y}px`,\r\n\t\t\ttop: arr.top ? arr.top : '',\r\n\t\t\tleft: arr.left ? arr.left : ''\r\n\t\t}\r\n\r\n\t\tconst opt = {\r\n\t\t\ttranslate : `${obj.x}px ${obj.y}px`\r\n\t\t};\r\n\r\n\t\tObject.assign(style, opt);\r\n\t\tObject.assign(astyle, aopt);\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst opt = {};\r\n\r\n\t\topt.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\topt.left = '';\r\n\t\t\topt.top = '0px';\r\n\t\t\tshift = 0; //pos.isStart ? size : -1 * size;\r\n\t\t\topt.translate = `${shift}px ${arrowPosH / 2}px`;\r\n\t\t} else {\r\n\t\t\topt.top = '';\r\n\t\t\topt.left = '0px';\r\n\t\t\tshift = 0; //pos.isTop ? size : -1 * size;\r\n\t\t\topt.translate = `${arrowPosW}px ${shift}px`;\r\n\t\t}\r\n\r\n\t\tGSDynamicStyle.applyDynamicStyle(arrow, opt);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {\r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSQueryCSS } from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value);\r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n\r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSRouter class\r\n * @module base/GSRouter\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSAttributeHandler } from \"./GSAttributeHandler.mjs\";\r\n\r\n/**\r\n * Class for handling hash based routing.\r\n * Class uses GSAttributeHandler and optional JSON definition to handle routing.\r\n * \r\n * Use globalThis.GS_ROUTER_URL before loading this module to define JSON definition file location\r\n * @Class\r\n */\r\nexport class GSRouter {\r\n\r\n    #logging = true;\r\n    #enabled = false;\r\n    #hashCallback = null;\r\n    #definition = {};\r\n\r\n    constructor() {\r\n        this.#hashCallback = this.#onHashChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Loda JSON definition for routing from JSON document.\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async loadDefinition(url) {\r\n        return GSLoader.getRouter(url);\r\n    }\r\n\r\n    /**\r\n     * Initialize routing from provided URL\r\n     * @param {string} url \r\n     * @param {number} wait in ms\r\n     */\r\n    async initialize(url, wait = 0) {\r\n        const me = this;\r\n        if (GSUtil.isStringNonEmpty(url)) {\r\n            me.#definition = await me.loadDefinition(url);\r\n        }\r\n        if (wait > 0) {\r\n            await GSEvents.waitPageLoad(null, null, null, wait);\r\n        }\r\n        me.enable();\r\n        me.#onHashChange();        \r\n    }\r\n\r\n    /**\r\n     * Enable routing\r\n     */\r\n    enable() {\r\n        if (this.#enabled) return;\r\n        GSEvents.on(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable routing\r\n     */\r\n    disable() {\r\n        GSEvents.off(globalThis, null, 'hashchange', this.#hashCallback);\r\n        this.#enabled = false;\r\n    }\r\n\r\n    /**\r\n     * Register a single route with options\r\n     * @param {string} route Abstract url for a route\r\n     * @param {Object} options \r\n     */\r\n    register(route, options) {\r\n        this.#definition[route] = options;\r\n    }\r\n\r\n    /**\r\n     * Unregister a single route\r\n     * @param {string} route \r\n     */\r\n    unregister(route) {\r\n        delete this.#definition[route];\r\n    }\r\n\r\n    /**\r\n     * Get URL hashbang without hash\r\n     */\r\n    get hash() {\r\n        return location.hash.slice(1);\r\n    }\r\n\r\n    /**\r\n     * Return routing definition object\r\n     */\r\n    get definition() {\r\n        return GSData.deepClone(this.#definition);\r\n    }\r\n\r\n    get log() {\r\n        return this.#logging;\r\n    }\r\n\r\n    set log(val) {\r\n        this.#logging = GSUtil.asBool(val);\r\n    }\r\n\r\n    #onHashChange() {\r\n        const me = this;\r\n        const def = me.#definition[\"#def\"] || {};\r\n        const defaults = me.#definition[\"#defaults\"] || {};\r\n        const route = me.#definition[me.hash];\r\n        if (route) {\r\n            const el = GSDOM.fromJson(Object.assign({}, route, def, defaults));\r\n            el.dataset.gsHashed = true;\r\n            const px = GSAttributeHandler.proxify(el);\r\n            GSAttributeHandler.process(px);\r\n        } else if (me.#logging) {\r\n            GSLog.warn(null, `No routing definition found for: ${me.hash}`);\r\n        }\r\n    }\r\n\r\n    static {\r\n        if (globalThis.GS_DEFINITION_URL) {\r\n            new GSRouter().initialize(globalThis.GS_DEFINITION_URL, globalThis.GS_ROUTER_WAIT);\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTheme class\r\n * @module base/GSTheme\r\n */\r\n\r\n/**\r\n * Switch between dark and light mode\r\n * @Class\r\n */\r\nexport class GSTheme {\r\n\r\n    static #STORAGE = 'gs-theme-mode';\r\n\r\n    /**\r\n     * Changes the theme to 'dark mode' and save settings to local stroage.\r\n     * Basically, replaces/toggles every CSS class that has '-light' class with '-dark'\r\n     * @param {HTMLElement} el \r\n     */\r\n    static darkMode(el) {\r\n        GSTheme.#switch(el, 'light', 'dark');\r\n    }\r\n\r\n    /**\r\n     * Changes the theme to 'light mode' and save settings to local stroage.\r\n     * @param {HTMLElement} el \r\n     */\r\n    static lightMode(el) {\r\n        GSTheme.#switch(el, 'dark', 'light');\r\n    }\r\n\r\n    static #switch(el, from = 'light', to = 'dark') {\r\n\r\n        const root = el || document.body;\r\n\r\n        // TODO  switch dark/light mode ?!??!? \r\n\r\n        // save last state\r\n        GSTheme.theme = to;\r\n    }\r\n\r\n    static get theme() {\r\n        return localStorage.getItem(GSTheme.#STORAGE);\r\n    }\r\n\r\n    static set theme(val) {\r\n        localStorage.setItem(GSTheme.#STORAGE, val);\r\n        window.dispatchEvent(new CustomEvent('gs-theme', { detail: val }));\r\n        const htmlEl = document.head.parentElement;\r\n        if (val) {\r\n            htmlEl.dataset.bsTheme = val;\r\n        } else {\r\n            delete htmlEl.dataset.bsTheme;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get system default theme by media query\r\n     * @returns {String} dark|light \r\n     */\r\n    static getSystemDefaultTheme() {\r\n        const darkThemeMq = window.matchMedia('(prefers-color-scheme: dark)');\r\n        return darkThemeMq.matches ? 'dark' : 'light';\r\n    }\r\n\r\n    static #onTheme(e) {\r\n        const q = new URLSearchParams(location.hash.slice(1));\r\n        GSTheme.theme = q.get('theme');\r\n    }\r\n\r\n    static #setup() {\r\n        window.addEventListener('hashchange', GSTheme.#onTheme)\r\n        let settings = localStorage.getItem(GSTheme.#STORAGE);\r\n        if (settings == null) {\r\n            settings = GSTheme.getSystemDefaultTheme();\r\n        }\r\n\r\n\r\n        if (settings == 'dark') return GSTheme.darkMode();\r\n        if (settings == 'light') return GSTheme.lightMode();\r\n        // TODO switch\r\n\r\n    }\r\n\r\n    static {\r\n        GSTheme.#setup();\r\n        globalThis.GSTheme = GSTheme;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst tree = new BinaryTree(1, 'AB');\r\n\r\ntree.insert(1, 11, 'AC');\r\ntree.insert(1, 12, 'BC');\r\ntree.insert(12, 121, 'BG', { right: true });\r\n\r\n[...tree.preOrderTraversal()].map(x => x.value);\r\n// ['AB', 'AC', 'BC', 'BCG']\r\n\r\n[...tree.inOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB', 'BC', 'BG']\r\n\r\ntree.value;                // 'AB'\r\ntree.hasChildren;          // true\r\n\r\ntree.find(12).isLeaf;           // false\r\ntree.find(121).isLeaf;          // true\r\ntree.find(121).parent.value;    // 'BC'\r\ntree.find(12).left;             // null\r\ntree.find(12).right.value;      // 'BG'\r\n\r\ntree.remove(12);\r\n\r\n[...tree.postOrderTraversal()].map(x => x.value);\r\n// ['AC', 'AB']\r\n*/\r\n\r\n/**\r\n * Binary Tree Node data holder\r\n */\r\nexport class BinaryTreeNode {\r\n\r\n    constructor(key, value = key, parent = null) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.parent = parent;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n\r\n    /**\r\n     * Check if both left and right are empty.\r\n     */\r\n    get isLeaf() {\r\n        return this.left === null && this.right === null;\r\n    }\r\n\r\n    /**\r\n     * Check if node has children\r\n     */\r\n    get hasChildren() {\r\n        return !this.isLeaf;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Binary tree implementation\r\n */\r\nexport class BinaryTree extends BinaryTreeNode {\r\n\r\n    constructor(key, value = key) {\r\n        super(key, value);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in in-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *inOrderTraversal(node = this) {\r\n        if (node.left) yield* this.inOrderTraversal(node.left);\r\n        yield node;\r\n        if (node.right) yield* this.inOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in post-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *postOrderTraversal(node = this) {\r\n        if (node.left) yield* this.postOrderTraversal(node.left);\r\n        if (node.right) yield* this.postOrderTraversal(node.right);\r\n        yield node;\r\n    }\r\n\r\n    /**\r\n     * Generator method that traverses the binary tree in pre-order, \r\n     * using the yield* syntax to recursively delegate traversal to itself.\r\n     * @param {BinaryTreeNode} node \r\n     */\r\n    *preOrderTraversal(node = this) {\r\n        yield node;\r\n        if (node.left) yield* this.preOrderTraversal(node.left);\r\n        if (node.right) yield* this.preOrderTraversal(node.right);\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to find the given parent node and \r\n     * insert a new child BinaryTreeNode either as the left or right child, \r\n     * depending on the passed options object.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @param {*} options \r\n     * @returns {boolean} Return true if data inserted\r\n     */\r\n    insert(\r\n        parentNodeKey,\r\n        key,\r\n        value = key,\r\n        { left, right } = { left: true, right: true }\r\n    ) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === parentNodeKey) {\r\n                const canInsertLeft = left && node.left === null;\r\n                const canInsertRight = right && node.right === null;\r\n                if (!canInsertLeft && !canInsertRight) return false;\r\n                if (canInsertLeft) {\r\n                    node.left = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n                if (canInsertRight) {\r\n                    node.right = new BinaryTreeNode(key, value, node);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to remove a BinaryTreeNode from the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.left.key === key) {\r\n                node.left = null;\r\n                return true;\r\n            }\r\n            if (node.right.key === key) {\r\n                node.right = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the preOrderTraversal() method to retrieve the given node in the binary tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    find(key) {\r\n        for (let node of this.preOrderTraversal()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new DoublyLinkedList();\r\n\r\nlist.insertFirst(1);\r\nlist.insertFirst(2);\r\nlist.insertFirst(3);\r\nlist.insertLast(4);\r\nlist.insertAt(3, 5);\r\n\r\nlist.size;                      // 5\r\nlist.head.value;                // 3\r\nlist.head.next.value;           // 2\r\nlist.tail.value;                // 4\r\nlist.tail.previous.value;       // 5\r\n[...list].map(e => e.value);    // [3, 2, 1, 5, 4]\r\n\r\nlist.removeAt(1);               // 2\r\nlist.getAt(1).value;            // 1\r\nlist.head.next.value;           // 1\r\n[...list].map(e => e.value);    // [3, 1, 5, 4]\r\n\r\nlist.reverse();\r\n[...list].map(e => e.value);    // [4, 5, 1, 3]\r\n\r\nlist.clear();\r\nlist.size;                      // 0\r\n*/\r\n\r\n/**\r\n *  Linear data structure following doubly linked list order of operations.\r\n */\r\nexport class Node {\r\n\r\n    value = null;\r\n    next = null;\r\n    previous = null;\r\n\r\n    constructor(value, next = null, previous = null) {\r\n        this.value = value;\r\n        this.next = next;\r\n        this.previous = previous;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    release() {\r\n        this.value = undefined;\r\n        this.next = undefined;\r\n        this.previous = undefined;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DoublyLinkedList {\r\n\r\n    #nodes = [];\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     */\r\n    get size() {\r\n        return this.#nodes.length;\r\n    }\r\n\r\n    /**\r\n     * First element in the list\r\n     */\r\n    get head() {\r\n        return this.size ? this.#nodes[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Last elemet in the list\r\n     */\r\n    get tail() {\r\n        return this.size ? this.#nodes[this.size - 1] : null;\r\n    }\r\n\r\n    /**\r\n     * Create new linked node\r\n     * @param {*} value \r\n     * @param {*} nextNode \r\n     * @param {*} previousNode \r\n     * @returns \r\n     */\r\n    create(value, nextNode, previousNode) {\r\n        return new Node(value, nextNode, previousNode);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the given position in the list\r\n     * @param {*} index \r\n     * @param {*} value \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    insertAt(index, value, safe) {\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index] || null;\r\n        const node = this.create(value, nextNode, previousNode);\r\n\r\n        if (previousNode) previousNode.next = node;\r\n        if (nextNode) nextNode.previous = node;\r\n        this.#nodes.splice(index, 0, node);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the beginning of the list\r\n     * @param {*} value \r\n     */\r\n    insertFirst(value) {\r\n        this.insertAt(0, value);\r\n    }\r\n\r\n    /**\r\n     * Insert data to the end of the list\r\n     * @param {*} value \r\n     */\r\n    insertLast(value) {\r\n        this.insertAt(this.size, value);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data in the given index\r\n     * @param {Number} index \r\n     * @returns \r\n     */\r\n    getAt(index) {\r\n        return this.#nodes[index];\r\n    }\r\n\r\n    indexOf(val) {\r\n        return this.#nodes.indexOf(val);\r\n    }\r\n\r\n    /**\r\n     * Remove the data at the given index\r\n     * @param {*} index \r\n     * @param {*} safe \r\n     * @returns \r\n     */\r\n    removeAt(index, safe) {\r\n\r\n        if (!this.#validate(index, safe)) return false;\r\n\r\n        const previousNode = this.#nodes[index - 1] || null;\r\n        const nextNode = this.#nodes[index + 1] || null;\r\n\r\n        if (previousNode) previousNode.next = nextNode;\r\n        if (nextNode) nextNode.previous = previousNode;\r\n\r\n        return this.#nodes.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Clear list\r\n     */\r\n    clear(full = true) {\r\n        if (full) this.#nodes.forEach(o => o.release());\r\n        this.#nodes = [];\r\n    }\r\n\r\n    /**\r\n     * Reverse data order\r\n     */\r\n    reverse() {\r\n        this.#nodes = this.#nodes.reduce((acc, { value }) => {\r\n            const nextNode = acc[0] || null;\r\n            const node = new Node(value, nextNode, null);\r\n            if (nextNode) nextNode.previous = node;\r\n            return [node, ...acc];\r\n        }, []);\r\n    }\r\n\r\n    toArray() {\r\n        return this.#nodes.map(e => e.value);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.#nodes;\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield* this.#nodes;\r\n    }\r\n\r\n    #validate(index, safe = false) {\r\n        const isInvalid = this.#isInvalidIndex(index);\r\n        if (isInvalid) {\r\n            if (safe) {\r\n                console.log(this.#error());\r\n            } else {\r\n                throw new Error(this.#error());\r\n            }\r\n        }\r\n        return !isInvalid;\r\n    }\r\n\r\n    #isInvalidIndex(index) {\r\n        return !Number.isInteger(index) || index < 0 || index > this.size;\r\n    }\r\n\r\n    #error() {\r\n        return `Invalid index. Current length is ${this.size}.`;\r\n    }\r\n\r\n    /**\r\n     * Convert array to linked list\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(data) {\r\n        const list = new DoublyLinkedList();\r\n        if (Array.isArray(data)) data.forEach(v => list.insertLast(v));\r\n        return list;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/*\r\nconst list = new LinkedList(1);\r\n\r\nlist.append(2).append(3).append(4);\r\n\r\n*/\r\n\r\n/**\r\n * Node data holder\r\n */\r\nexport class LinkedList {\r\n\r\n    #value = null;\r\n    #next = null;\r\n    #previous = null;\r\n\r\n    constructor(value) {\r\n        this.#value = value;\r\n    }\r\n\r\n    [Symbol.for('gs-next')](val) {\r\n        this.#next = val;\r\n    }\r\n\r\n    [Symbol.for('gs-prev')](val) {\r\n        this.#previous = val;\r\n    }\r\n\r\n    remove() {\r\n        const me = this;\r\n        me.#previous?.[Symbol.for('gs-next')](me.#next);\r\n        me.#next?.[Symbol.for('gs-prev')](me.#previous);\r\n        return me.#release();\r\n    }\r\n\r\n    delete() {\r\n        return this.remove();\r\n    }\r\n    \r\n    /**\r\n     * Append node after \r\n     * @param {*} node \r\n     */\r\n    append(node) {\r\n\r\n        node = LinkedList.wrap(node);\r\n        node.#next = this.#next;\r\n        node.#previous = this;\r\n        this.#next = node;\r\n        return node;\r\n    }\r\n\r\n    add(node) {\r\n        return this.append(node);\r\n    }\r\n\r\n    /**\r\n     * Insert node before\r\n     * @param {*} node \r\n     */\r\n    insert(node) {\r\n        node = LinkedList.wrap(node);\r\n        node.#previous = this.#previous;\r\n        node.#next = this;\r\n        this.#previous = node;\r\n        return node;\r\n    }\r\n\r\n    update(val) {\r\n        this.#value = val;\r\n        return this;\r\n    }\r\n\r\n    find(cb) {\r\n        return this.iterator.find(cb);\r\n    }\r\n\r\n    filter(cb) {\r\n        return this.iterator.filter(cb);\r\n    }\r\n\r\n    map(cb) {\r\n        return this.iterator.map(cb);\r\n    }\r\n\r\n    forEach(cb) {\r\n        for (let n of this.iterator) {\r\n            cb(n, -1, this);\r\n        }\r\n    }\r\n    \r\n    every(cb) {\r\n        let result = undefined;\r\n        for (let n of this.iterator) {\r\n            result = cb(n, -1, this);\r\n            if (result) break;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    toArray(values = true) {\r\n        return values ? this.asValues : this.asNodes;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Use internally only or make sure node is deatached\r\n     */\r\n    #release() {\r\n        this.#value = undefined;\r\n        this.#next = undefined;\r\n        this.#previous = undefined;\r\n        return this;\r\n    }\r\n        \r\n    get head() {\r\n        return this.previous?.head || this;\r\n    }\r\n\r\n    get tail() {\r\n        return this.next?.tail || this;\r\n    }\r\n\r\n    get next() {\r\n        return this.#next;\r\n    }\r\n\r\n    get previous() {\r\n        return this.#previous;\r\n    }\r\n\r\n    get value() {\r\n        return this.#value;\r\n    }\r\n\r\n    set value(val) {\r\n        this.#value = val;\r\n    }    \r\n\r\n    get asValues() {\r\n        return [...this].map(v => v.value);\r\n    }\r\n\r\n    get asNodes() {\r\n        return [...this];\r\n    }\r\n    \r\n    get iterator() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n\r\n    *[Symbol.iterator]() {\r\n        yield this;\r\n        if (this.#next) yield* this.#next.iterator;        \r\n    }\r\n\r\n    static wrap(node) {\r\n        return node instanceof LinkedList ? node : new LinkedList(node);\r\n    }\r\n    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following last in, first out (LIFO) order of operations.\r\n */\r\nexport class Stack extends Array {\r\n    \r\n    push(item) {\r\n        this.unshift(item);\r\n    }\r\n\r\n    pop() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n *  Linear data structure following first in, first out (FIFO) order of operations.\r\n */\r\nexport class Queue extends Array {\r\n    \r\n    enqueue(item) {\r\n        this.push(item);\r\n    }\r\n\r\n    dequeue() {\r\n        return this.shift();\r\n    }\r\n\r\n    peek() {\r\n        return this[0];\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.length === 0;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Tree Node data holder\r\n */\r\nexport class Tree {\r\n\r\n    value;\r\n\r\n    #key = null;\r\n    #parent = null;\r\n    #children;\r\n\r\n    #folder = false;\r\n    #level = 0;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        this.#key = key;\r\n        this.#parent = parent;\r\n        this.#folder = value?.leaf === false;\r\n        this.#level = parent ? parent.level + 1 : level;\r\n        this.#children = this.#folder ? [] : undefined;\r\n        this.value = value;\r\n    }\r\n\r\n    /**\r\n     * Return tree list from root to this node.\r\n     */\r\n    get subtree() {\r\n        return Array.from(this.up(undefined, false, true, true));\r\n    }\r\n\r\n    get levelID() {\r\n        return this.subtree.map(o => o.level).join('.');\r\n    }\r\n\r\n    /**\r\n     * Unique node canonical form\r\n     */\r\n    get nodeID() {\r\n        //if (this.parent?.level < 0) return this.index;\r\n        return this.subtree.map(o => o.index).join('.');\r\n    }\r\n\r\n    get path() {\r\n        return this.subtree.map(o => o.key).join('/');\r\n    }\r\n\r\n    get index() {\r\n        return this.parent?.nodes.indexOf(this) || 0;\r\n    }\r\n\r\n    get size() {\r\n        return this.#children?.length || -1;\r\n    }\r\n\r\n    get level() {\r\n        return this.#level;\r\n    }\r\n\r\n    /**\r\n     * Check if node is main root node \r\n     */\r\n    get isRoot() {\r\n        return this.parent ? false : true;\r\n    }\r\n\r\n    /**\r\n     * Check if #children is empty\r\n     */\r\n    get isLeaf() {\r\n        return !this.#folder;\r\n    }\r\n\r\n    get isFolder() {\r\n        return this.#folder;\r\n    }\r\n\r\n    /**\r\n     * Check if has #childrens\r\n     */\r\n    get hasChildren() {\r\n        return this.#folder && this.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get key() {\r\n        this.#key ??= this.nodeID;\r\n        return this.#key;\r\n    }\r\n\r\n    get nodes() {\r\n        return this.#children;\r\n    }\r\n\r\n    /**\r\n     * Get parent node, readonly\r\n     */\r\n    get parent() {\r\n        return this.#parent;\r\n    }\r\n\r\n    /**\r\n     * Get main root node\r\n     */\r\n    get root() {\r\n        return this.parent?.root || this;\r\n    }\r\n\r\n    /**\r\n     * Check if there are more siblings \r\n     */\r\n    get hasMore() {\r\n        return this.#parent?.size > this.index + 1;\r\n    }\r\n\r\n    get firstChild() {\r\n        return this.hasMore ? this.#children[0] : undefined;\r\n    }\r\n\r\n    get lastChild() {\r\n        return this.hasMore ? this.#children[this.#children.length - 1] : undefined;\r\n    }\r\n\r\n    get next() {\r\n        return this.down(this, false, false).next().value || this.nextSibling || this.parent?.nextSibling;\r\n    }\r\n\r\n    get previous() {\r\n        const node = this.previousSibling;\r\n        return (node?.hasChildren) ? node.lastChild : node || this.up(this, false, false).next().value;\r\n    }\r\n\r\n    get nextSibling() {\r\n        return this.hasMore ? this.#parent.#children[this.index + 1] : undefined;\r\n    }\r\n\r\n    get previousSibling() {\r\n        return this.index > 0 ? this.#parent.#children[this.index - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Clear all #children\r\n     */\r\n    clear() {\r\n        if (this.#children) {\r\n            this.#children.forEach(o => o.release?.());\r\n            this.#children = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally, if called externally, \r\n     * make sure node is removed from parent \r\n     */\r\n    release() {\r\n        this.clear();\r\n        this.#key = null;\r\n        this.value = null;\r\n        this.#parent = null;\r\n    }\r\n\r\n    /**\r\n     * Walk down the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     * @param {Boolean} flat Navigate all nodes out of subtree\r\n     */\r\n    *down(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (node.#children?.length) {\r\n            for (let child of node.#children) {\r\n                yield* this.down(child, values, true, reverse, flat);\r\n            }\r\n        }\r\n        if (flat) {\r\n            const item = node.nextSibling || node.parent.nextSibling;\r\n            if (item) yield* this.down(item, values, true, reverse, flat);\r\n        }\r\n        /*\r\n        */\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk up the tree\r\n     * @param {Tree} node starting node\r\n     * @param {Boolean} values yield values instead nodes\r\n     * @param {Boolean} inclusive include self\r\n     * @param {Boolean} reverse Order direction\r\n     */\r\n    *up(node = this, values = false, inclusive = true, reverse = false, flat = false) {\r\n        const o = values ? node.value : node;\r\n        if (inclusive && !reverse && node.level > -1) yield o;\r\n        if (flat) {\r\n            let item = node.previousSibling;\r\n            item = item?.isFolder ? item.lastChild : item;\r\n            if (item) yield* this.up(item, values, true, reverse, flat);\r\n        }        \r\n        if (node.parent) {\r\n            yield* this.up(node.parent, values, true, reverse, flat);\r\n        }\r\n        if (inclusive && reverse && node.level > -1) yield o;\r\n    }\r\n\r\n    /**\r\n     * Walk through all nodes\r\n     * @param {*} node \r\n     */\r\n    walk = this.down;\r\n\r\n    /**\r\n     * Simulate array function \"forEach\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */\r\n    forEach(callback, flat = false, reverse = false) {\r\n        this.every((node, index) => {\r\n            callback(node, index);\r\n            return true;\r\n        }, flat, reverse);\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"every\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    every(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let sts = true;\r\n        let i = 0;\r\n        for (let node of it) {\r\n            sts = callback(node, i++);\r\n            if (!sts) break;\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"find\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    find(callback, flat = false, reverse = false) {\r\n        const it = this.iterate(flat, reverse);\r\n        let i = 0;\r\n        for (let node of it) {\r\n            if (callback(node, i++)) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Simulate array function \"filter\"\r\n     * @param {*} callback \r\n     * @param {*} flat If set, will iterate all nodes, otherwise only childrens and subtrees\r\n     * @param {*} reverse If set, will iterate up the tree\r\n     * @returns \r\n     */    \r\n    filter(callback, flat, reverse) {\r\n        return [...this.#filtered(callback, flat, reverse)];\r\n    }\r\n\r\n    *#filtered(callback, flat, reverse) {\r\n        const it = this.iterate(flat, reverse);\r\n        for (let node of it) {\r\n            let res = callback(node);\r\n            if (res) yield node;\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Iterate all nodes\r\n     * @param {boolean} flat If set, will iterate all nodes, otherwise only cildrens and subtrees\r\n     * @param {boolean} reverse If set, will iterate up the tree\r\n     */\r\n    *iterate(flat, reverse) {\r\n        reverse ? yield* this.up(this, false, false, false, flat) : yield* this.down(this, false, false,  false, flat);\r\n    }\r\n\r\n    /**\r\n     * Add a new Tree to the tree.\r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    append(key, value = key) {\r\n        let newOne = undefined;\r\n        if (key instanceof Tree) {\r\n            key.#parent = this;\r\n            key.#level = this.#level + 1;\r\n            newOne = key;\r\n        } else {\r\n            newOne = new Tree(key, value, this);\r\n        }\r\n        this.#folder = true;\r\n        this.#children ??= [];\r\n        this.#children.push(newOne);\r\n        return newOne;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method and Array.prototype.push() \r\n     * to add a new Tree to the tree.\r\n     * @param {*} parentNodeKey \r\n     * @param {*} key \r\n     * @param {*} value \r\n     * @returns \r\n     */\r\n    insert(parentNodeKey, key, value = key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === parentNodeKey) {\r\n                const newOne = new Tree(key, value, node);\r\n                this.#folder = true;\r\n                this.#children ??= [];\r\n                node.#children.push(newOne);\r\n                return newOne;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Remove node from tree. If key is set, will search for first node with matching key.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    remove(key) {\r\n\r\n        const me = this;\r\n\r\n        if (key) {\r\n            const node = me.findByKey(key);\r\n            node?.remove();\r\n            return node;\r\n        }\r\n\r\n        if (me.isRoot) throw new Error('Root node can\\'t be removed!');\r\n        const node = me.parent;\r\n        const filtered = node.#children.filter(c => c !== me);\r\n        if (filtered.length !== node.#children.length) {\r\n            node.#children = filtered;\r\n            return me;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Uses the walk() method to retrieve the given node in the tree.\r\n     * @param {*} key \r\n     * @returns \r\n     */\r\n    findByKey(key) {\r\n        for (let node of this.walk()) {\r\n            if (node.key === key) return node;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convert tree into array list\r\n     * @returns \r\n     */\r\n    flatten(values, inclusive, reverse) {\r\n        return [...this.down(this, values, inclusive, reverse)];\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) Tree.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.#children?.map(o => o.toJSON()) || {};\r\n        return this.isLeaf ? { key: this.key, value: this.value } :\r\n            {\r\n                key: this.key,\r\n                value: this.value,\r\n                items: this.#children.map(o => o.toJSON())\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Make node iterable\r\n     */\r\n    *[Symbol.iterator]() {\r\n        yield* this.down();\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof Tree;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) throw new Error('Parent required when data is array');\r\n            raw.forEach(o => Tree.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        const tree = new Tree(obj.key, obj, data ? parent : undefined);\r\n        if (hasParent) parent.append(tree);\r\n        if (items) Tree.from(tree, items);\r\n        return tree;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class DataSelector  {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static addSelected(val) {\r\n        if (!val) return false;\r\n\r\n        if (Array.isArray(val)) {\r\n            val[DataSelector.#SELECT] = true;\r\n        } else {\r\n            GSUtil.asArray(val).forEach(o => o[DataSelector.#SELECT] = true);\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    static removeSelected(val) {\r\n        if (!val) return false;\r\n        delete val[DataSelector.#SELECT];\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    static clearSelected(data) {\r\n        const me = this;\r\n        GSUtil.asArray(data).forEach(o => me.removeSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    static getSelected(data = []) {\r\n        const me = this;        \r\n        return me.isSelected(data) || GSUtil.asArray(data).filter(o => me.isSelected(o));\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static isSelected(val) {\r\n        return val ? val[DataSelector.#SELECT] === true : false;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    /**\r\n     * Reset the registry\r\n     */\r\n    resetRegistry() {\r\n        this.#handlers.clear();\r\n        this.#map.clear();\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from \"../base/GSID.mjs\";\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { DataSelector } from \"./DataSelector.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynamic menu etc.\r\n * @Class\r\n */\r\nexport class GSAbstractReadWrite extends GSEvent {\r\n\r\n    static #SELECT = Symbol('select');\r\n\r\n    #id = null;\r\n    #processors = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to register\r\n     * @param {object} processor\r\n     */\r\n    addProcessor(processor) {\r\n        if (!processor) return;\r\n        this.#processors ??= new Set();\r\n        this.#processors.add(processor);\r\n    }\r\n\r\n    /**\r\n     * Data preprocessor to remove\r\n     * @param {object} processor \r\n     */    \r\n    removeProcessor(processor) {\r\n        if (processor) this.#processors?.delete(processor);\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Generic event dispatcher, can be overriden to controll when to fire event\r\n     * @param {*} owner \r\n     * @param {*} type \r\n     * @param {*} data \r\n     * @param {*} error \r\n     */\r\n    notify(owner, type, data, error) {\r\n        this.emit(error ? 'error' : type, { type: type, error: error, owner: owner, data: data }, true);\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.#processors?.forEach(c => c.postRead?.(data));\r\n            if (data) me.notify(owner, 'read', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'read', data, e);\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.#processors?.forEach(c => c.postWrite?.(data));\r\n            if (result) me.notify(owner, 'write', data);\r\n        } catch (e) {\r\n            me.notify(owner, 'write', data, e);\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.addSelected(val);\r\n        const me = this;\r\n        me.emit('selection-add', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        if (!val) return false;\r\n        DataSelector.removeSelected(val);\r\n        const me = this;\r\n        me.emit('selection-remove', val);\r\n        me.emit('select');\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        DataSelector.clearSelected(data);\r\n        const me = this;\r\n        me.emit('selection-clear');\r\n        me.emit('select');\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    getSelected(data = []) {\r\n        return DataSelector.getSelected(data);\r\n    }\r\n\r\n    /**\r\n     * Check if record id is in list of selected records\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    isSelected(val) {\r\n        return DataSelector.isSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Get list of selected records.\r\n     * Override in inherited class\r\n     */\r\n    get selected() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n    /**\r\n     * Reset the abstract read/write handler\r\n     */\r\n    reset() {\r\n        this.#processors = null;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSFunction } from \"../base/GSFunction.mjs\";\r\nimport { GSLoader } from \"../base/GSLoader.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSAbstractReadWrite } from \"./AbstractReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #TYPE = \"remote\";\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #key = null;\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically register in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */\r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */\r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return { ...this.#headers };\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = { ...val };\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get key() {\r\n        return this.#key;\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     * @var {String} \r\n     */\r\n    set key(val) {\r\n        this.#key = val;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */\r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#filter = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        val = val || [];\r\n        val = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.#sort = Array.isArray(val) ? val : [val];\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest', 'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#writer);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Reset the read/write handler\r\n     */\r\n    reset() {\r\n        this.#src = '';\r\n        this.#headers = {};\r\n        this.#reader = 'GET';\r\n        this.#writer = 'POST';\r\n        this.#action = '';\r\n        this.#mode = '';\r\n        this.#key = null;\r\n        this.#skip = 0;\r\n        this.#limit = 0;\r\n        this.#sort = [];\r\n        this.#filter = [];\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSReadWrite.#TYPE, GSReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSData } from \"../base/GSData.mjs\";\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSCachedReadWrite class\r\n * @module base/GSCachedReadWrite\r\n */\r\n\r\n/**\r\n * ReadWrite with cached memory data. \r\n * @Class\r\n */\r\nexport class GSCachedReadWrite extends GSReadWrite {\r\n\r\n    static #TYPE = 'cached';\r\n\r\n    #data = [];\r\n\r\n    #reformat(data = []) {\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        return records;\r\n    }\r\n\r\n    #postFilter(data) {\r\n        const me = this;\r\n        data = GSData.sortData(data, me.sort);        \r\n        let limit = me.limit === 0 ? data.length : me.limit;\r\n        data = data.slice(me.skip, me.skip + limit);\r\n        return data;\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelected(this.#data);\r\n        this.#data = [];\r\n    }\r\n\r\n    append(data) {\r\n        if(!data) return false;\r\n        const me = this;\r\n        data = me.#reformat(data);\r\n        me.#data = me.#data.concat(data);\r\n        return me.#data;\r\n    }\r\n\r\n    remove(data) {\r\n        const me = this;\r\n        me.removeSelected(data);\r\n        me.#data = me.#data.filter(o => o =! data);\r\n        return me.#data;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n\r\n        if (me.#data.length === 0) {\r\n            const data = await super.onRead();\r\n            me.#data = me.#reformat(data);\r\n        }\r\n\r\n        let data = GSData.filterData(me.#data, me.filter, me.fields, me.limit);\r\n        data = me.#postFilter(data);\r\n        return data;\r\n    }\r\n\r\n    async onWrite(owner, data) {\r\n        return this.append(data);        \r\n    }\r\n\r\n    disable() {\r\n        this.#data = [];\r\n        super.disable();\r\n    }\r\n\r\n    set search(val) {\r\n        const me = this;\r\n        me.filter = val ? [{value : val}] : [];\r\n        me.read();\r\n        /*\r\n        let data = GSData.filterData(me.#data, [{value : val}]);\r\n        data = me.#postFilter(data);\r\n        me.notify(me, 'read', data);\r\n        */\r\n    }\r\n\r\n    clearSelected() {\r\n        return super.clearSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return super.getSelected(this.#data);\r\n    }\r\n\r\n    /**\r\n     * Handler type\r\n     */\r\n    get type() {\r\n        return GSCachedReadWrite.#TYPE;\r\n    }\r\n\r\n    /**\r\n     * Reset the cached read/write handler\r\n     */\r\n    reset() {\r\n        this.clear();\r\n        super.reset();\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSCachedReadWrite(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler(GSCachedReadWrite.#TYPE, GSCachedReadWrite);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { Tree } from \"../helpers/Tree.mjs\";\r\n\r\n/**\r\n * A module loading TreeNode class\r\n * @module data/TreeNode\r\n */\r\n\r\n/**\r\n * UI mediator between Tree linked nodes and WebComponents\r\n * @Class\r\n */\r\nexport class TreeNode extends Tree {\r\n\r\n    #multi = false;\r\n    #opened = false;\r\n    #focused = false;\r\n    #selected = false;\r\n    \r\n    #focusedNode = undefined;\r\n    #selectedNode = undefined;\r\n    #controllers = undefined;\r\n\r\n    constructor(key, value = key, parent = null, level = 0) {\r\n        super(key, value, parent, level);\r\n\r\n        if (value?.select === true || (this.multi && parent?.selected)) this.selected = true;\r\n        if (value?.focus === true) this.focused = true;\r\n        if (value?.open === true) this.opened = true;\r\n    }\r\n\r\n    addController(controller) {\r\n        const root = this.root;\r\n        (root.#controllers ??= new Set()).add(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.root.#controllers?.delete(controller);\r\n    }\r\n\r\n    /**\r\n     * Is multi selection available\r\n     */\r\n    get multi() {\r\n        return this.root.#multi === true;\r\n    }\r\n\r\n    set multi(val) {\r\n        this.root.#multi = val === true;\r\n    }\r\n\r\n    get visible() {\r\n        if (this.level < 0) return true;\r\n        return this.parent?.opened;\r\n    }\r\n\r\n    /**\r\n     * select single node, removing seelction flag from all other nodes\r\n     */\r\n    get opened() {\r\n        if (this.level < 0) return true;\r\n        return this.isLeaf ? this.parent?.opened : this.#opened;\r\n    }\r\n\r\n    set opened(val) {\r\n        val = val === true;\r\n        if (val) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus single node, removing focus flag from all other nodes\r\n     */\r\n    get focused() {\r\n        return this.#focused;\r\n    }\r\n\r\n    set focused(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const changed = this.#focused != val;\r\n        const focusedNode = root.focusedNode();\r\n        \r\n        root.#focusedNode = undefined;        \r\n        this.#focused = val;\r\n        if (focusedNode && focusedNode !== this) {\r\n            focusedNode.focused = false;\r\n        }\r\n\r\n        if (val) root.#focusedNode = this;\r\n        if (changed) root.#controllers?.forEach((c) => c.onFocusChanged?.(this));\r\n    }\r\n\r\n    /**\r\n     * Select single or multi node, depending on multi selection flag\r\n     * If single, remove selection flag from all other nodes\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    set selected(val) {\r\n        val = val === true;\r\n        const root = this.root;\r\n        const selectedNode = root.selectedNode();\r\n        const changed = this.#selected != val;\r\n        this.#selected = val;\r\n        if (val) {\r\n            if (selectedNode && selectedNode !== this && !root.multi) {\r\n                selectedNode.selected = false;\r\n            }\r\n            root.#selectedNode = this;\r\n        }\r\n        if (changed) {\r\n            root.#controllers?.forEach((c) => c.onSelectionChanged?.(this, selectedNode));\r\n            if (root.multi) root.#controllers?.forEach((c) => c.onSelectionChanged?.(this.parent, selectedNode));\r\n        } \r\n    }\r\n\r\n    get isPartialySelected() {\r\n        return this.selected && this.hasChildren && this.nodes.length > this.nodes.filter(n => n.selected).length;\r\n    }\r\n\r\n    /* hide from public\r\n    get host() {\r\n        return this[Symbol.for('gs-element')];\r\n    }\r\n\r\n    set host(el) {\r\n        this[Symbol.for('gs-element')] = el;\r\n    }\r\n    */\r\n\r\n    selectAll() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            this.deselectAll();\r\n            this.selected = true;\r\n            return\r\n        }\r\n        this.#selectionFlag(true);\r\n        root.#selectedNode = this;\r\n        root.#controllers?.forEach((c) => c.onSelectAll?.(root));\r\n    }\r\n\r\n    deselectAll() {\r\n        const root = this.root;\r\n        this.#selectionFlag(false);\r\n        root.#selectedNode = undefined;\r\n        root.#controllers?.forEach((c) => c.onDeselectAll?.(root));\r\n    }\r\n\r\n    /**\r\n     * Return last focused node\r\n     * @returns \r\n     */\r\n    focusedNode() {\r\n        const node = this.root.#focusedNode;\r\n        return node?.focused ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * Return last selected node\r\n     * @returns \r\n     */\r\n    selectedNode() {\r\n        const node = this.root.#selectedNode;\r\n        return node?.selected ? node : undefined;\r\n    }\r\n\r\n    /**\r\n     * List all selected nodes.\r\n     * @returns \r\n     */\r\n    selectedNodes() {\r\n        const root = this.root;\r\n        if (!root.multi) {\r\n            const node = root.selectedNode()\r\n            return node?.selected ? [node] : [];\r\n        }\r\n        return Array.from(root.walk().filter(o => o.selected));\r\n    }\r\n\r\n    /**\r\n     * Call from external controller data must be refresshed (to notify UI optionally)\r\n     * @param {*} root \r\n     */\r\n    refresh(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onRefresh?.(this));\r\n    }\r\n\r\n    /**\r\n     * Notify controllers about data loading (from async controller)\r\n     * @param {*} root \r\n     */\r\n    loading(root) {\r\n        root = root || this.root;\r\n        root.#controllers?.forEach((c) => c.onLoad?.(this));\r\n    }\r\n\r\n    expandAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.expand(root);\r\n        }\r\n    }\r\n\r\n    collapseAll(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        for (let node of this.walk()) {\r\n            if (!node.isLeaf) node.collapse(root);\r\n        }\r\n    }\r\n\r\n    expand(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        if (!me.parent?.opened) {\r\n            me.parent?.expand(root);\r\n        }\r\n        const update = !me.opened;\r\n        me.#opened = true;\r\n        if (update) me.#expanded(root);\r\n        //me.nodes?.filter( n => !n.opened).forEach(c => c.refresh(root));\r\n        me.nodes?.forEach(c => c.refresh(root));\r\n    }\r\n\r\n    collapse(root) {\r\n        const me = this;\r\n        root = root || me.root;\r\n        const update = me.#opened || me.parent.#opened;\r\n        me.nodes?.filter(n => n.opened || n.parent.opened).forEach(o => o.collapse(root));\r\n        //me.nodes?.forEach(o => o.collapse(root));\r\n        me.#opened = false;\r\n        if (update) me.#collapsed(root);\r\n    }\r\n\r\n    select(val = true) {\r\n        this.selected = val === true;\r\n    }\r\n\r\n    #expanded(root) {\r\n        root.#controllers?.forEach((c) => c.onExpand?.(this));\r\n    }\r\n\r\n    #collapsed(root) {\r\n        root.#controllers?.forEach((c) => c.onCollapse?.(this));\r\n    }\r\n\r\n    release() {\r\n        if (this.#selected) this.selected = false;\r\n        super.release();\r\n    }\r\n\r\n    append(key, value = key) {\r\n        const me = this;\r\n        const node = super.append(key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onAppend?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    insert(parentNodeKey, key, value = key) {\r\n        const me = this;\r\n        const node = super.insert(parentNodeKey, key, value);\r\n        if (node) me.root.#controllers?.forEach((c) => c.onInsert?.(me, node));\r\n        return node;\r\n    }\r\n\r\n    remove() {\r\n        const node = super.remove();\r\n        if (node) this.root.#controllers?.forEach((c) => c.onInsert?.(node));\r\n        return node;\r\n    }\r\n\r\n    #selectionFlag(val = false) {\r\n        val = val === true\r\n        for (let node of this.walk()) {\r\n            node.selected = val;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load JSON data into tree\r\n     * @param {*} data \r\n     */\r\n    fromJSON(data) {\r\n        if (data) TreeNode.from(this, data);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used by JSON.stringify to properly export as JSON\r\n     * @returns \r\n     */\r\n    toJSON() {\r\n        if (this.level < 0) return this.nodes?.map(o => o.toJSON()) || {};\r\n        const obj = Object.assign({\r\n            key: this.key,\r\n            opened: this.#opened,\r\n            focused: this.#focused,\r\n            selected: this.#selected,\r\n            items: undefined\r\n        }, this.value);\r\n        obj.items = this.nodes?.map(o => o.toJSON());\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree node\r\n     */\r\n    reset() {\r\n        this.#multi = false;\r\n        this.#opened = false;\r\n        this.#focused = false;\r\n        this.#selected = false;\r\n        this.#focusedNode = undefined;\r\n        this.#selectedNode = undefined;\r\n        this.#controllers = undefined;\r\n    }\r\n\r\n    static get root() {\r\n        return new TreeNode(null, null, null, -1);\r\n    }\r\n\r\n    /**\r\n     * Convert JSON tree into Linked Tree \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static from(parent, data) {\r\n        const raw = data || parent;\r\n        const hasParent = parent instanceof TreeNode;\r\n        if (Array.isArray(raw)) {\r\n            if (!hasParent) return TreeNode.from(TreeNode.root, raw);\r\n            raw.forEach(o => TreeNode.from(parent, o));\r\n            return parent;\r\n        }\r\n        const { items, ...obj } = raw;\r\n        obj.leaf = !Array.isArray(items);\r\n        const tree = new TreeNode(obj.key, obj, data ? parent : undefined);\r\n        if (items) TreeNode.from(tree, items);\r\n        if (hasParent) parent.append(tree);\r\n        return tree;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSReadWrite } from \"./ReadWrite.mjs\";\r\nimport { GSReadWriteRegistry } from \"./ReadWriteRegistry.mjs\";\r\nimport { TreeNode } from \"./TreeNode.mjs\";\r\n\r\n/**\r\n * A module loading GSTreeReader class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for reading Tree nodes\r\n * @Class\r\n */\r\nexport class GSTreeReader extends GSReadWrite {\r\n\r\n    #data = TreeNode.root;\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    async write(val) {\r\n        throw new Error('Writer not available for TreeReader')\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let node = undefined;\r\n        const data = await super.read(owner);\r\n        if (!this.#data) {\r\n            node = TreeNode.from(data);\r\n            this.#data = node;\r\n        } else {\r\n            const parent = me.filter?.length > 0 ? me.#data.findByKey(me.filter[0]) : me.#data;\r\n            parent.clear();\r\n            node = parent.fromJSON(data);\r\n        }\r\n        me.filter = undefined;\r\n        me.notify(owner, 'read', node);\r\n        return node;\r\n    }\r\n\r\n    disable() {\r\n        super.disable();\r\n        this.#data?.release();\r\n    }\r\n\r\n    notify(owner, type, data, error) {\r\n        const isNode = data instanceof TreeNode;\r\n        if (!error && !isNode && type === 'read') return;\r\n        super.notify(owner, type, data, error);\r\n    }\r\n\r\n    /**\r\n     * Called from Tree when node is expanded \r\n     * @param {*} node \r\n     */\r\n    async onExpand(node) {\r\n        if (node.hasChildren) return;\r\n        node.loading();\r\n        this.filter = node.key;\r\n        return await this.read();\r\n    }\r\n\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    /**\r\n     * Reset the tree data\r\n     */\r\n    resetData() {\r\n        this.#data = TreeNode.root;\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSTreeReader} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSTreeReader(name, true);\r\n    }\r\n\r\n    static {\r\n        GSReadWriteRegistry.addHandler('tree', GSTreeReader);\r\n    }\r\n\r\n}","// vanilla-lit \r\n\r\nconst litUrl = globalThis.GS_LIT_URL || '/bootstrap-lit/assets/lib/vanilla-lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const AttributeConverter = litModule.AttributeConverter;\r\nexport const AttributePart = litModule.AttributePart;\r\nexport const BasePart = litModule.BasePart;\r\nexport const BooleanAttributePart = litModule.BooleanAttributePart;\r\nexport const CSS = litModule.CSS;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const ChildPart = litModule.ChildPart;\r\nexport const ContextConsumer = litModule.ContextConsumer;\r\nexport const ContextProvider = litModule.ContextProvider;\r\nexport const ContextProviderEvent = litModule.ContextProviderEvent;\r\nexport const ContextRequestEvent = litModule.ContextRequestEvent;\r\nexport const ContextRoot = litModule.ContextRoot;\r\nexport const Directive = litModule.Directive;\r\nexport const DynamicHTML = litModule.DynamicHTML;\r\nexport const ENABLE_EXTRA_SECURITY_HOOKS = litModule.ENABLE_EXTRA_SECURITY_HOOKS;\r\nexport const ElementPart = litModule.ElementPart;\r\nexport const EventPart = litModule.EventPart;\r\nexport const PartType = litModule.PartType;\r\nexport const Pauser = litModule.Pauser;\r\nexport const PropertyPart = litModule.PropertyPart;\r\nexport const PseudoWeakRef = litModule.PseudoWeakRef;\r\nexport const ReactiveComponent = litModule.ReactiveComponent;\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveControllerHost = litModule.ReactiveControllerHost;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const ResultType = litModule.ResultType;\r\nexport const StaticHTML = litModule.StaticHTML;\r\nexport const Task = litModule.Task;\r\nexport const TaskStatus = litModule.TaskStatus;\r\nexport const Template = litModule.Template;\r\nexport const TemplateInstance = litModule.TemplateInstance;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const ValueNotifier = litModule.ValueNotifier;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const boundAttributeSuffix = litModule.boundAttributeSuffix;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const constructionToken = litModule.constructionToken;\r\nexport const createMarker = litModule.createMarker;\r\nexport const createRef = litModule.createRef;\r\nexport const createSanitizer = litModule.createSanitizer;\r\nexport const deepArrayEquals = litModule.deepArrayEquals;\r\nexport const deepEquals = litModule.deepEquals;\r\nexport const directive = litModule.directive;\r\nexport const directiveSymbol = litModule.directiveSymbol;\r\nexport const forAwaitOf = litModule.forAwaitOf;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const getTemplateHtml = litModule.getTemplateHtml;\r\nexport const guard = litModule.guard;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const initialState = litModule.initialState;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isArray = litModule.isArray;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isIterable = litModule.isIterable;\r\nexport const isNoOp = litModule.isNoOp;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const marker = litModule.marker;\r\nexport const markerMatch = litModule.markerMatch;\r\nexport const noChange = litModule.noChange;\r\nexport const nodeMarker = litModule.nodeMarker;\r\nexport const nothing = litModule.nothing;\r\nexport const notifySymbol = litModule.notifySymbol;\r\nexport const partSymbol = litModule.partSymbol;\r\nexport const range = litModule.range;\r\nexport const rawTextElement = litModule.rawTextElement;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const repeat = litModule.repeat;\r\nexport const sanityze = litModule.sanityze;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const setSanitizer = litModule.setSanitizer;\r\nexport const shallowArrayEquals = litModule.shallowArrayEquals;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const symbolResult = litModule.symbolResult;\r\nexport const templateContent = litModule.templateContent;\r\nexport const trustFromTemplateString = litModule.trustFromTemplateString;\r\nexport const typeSymbol = litModule.typeSymbol;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const until = litModule.until;\r\nexport const walker = litModule.walker;\r\nexport const when = litModule.when;\r\n\r\n//------------------------ Lit compatibility\r\nexport const LitElement = litModule.LitElement;\r\n\r\nexport const html = litModule.html;\r\nexport const svg = litModule.svg;\r\nexport const render = litModule.render;\r\n\r\nexport const staticHtml = litModule.html;\r\nexport const staticSvg = litModule.svg;\r\n\r\nexport const unsafeStatic = litModule.unsafeStatic\r\nexport const withStatic = litModule.withStatic;\r\nexport const literal = litModule.literal;\r\n\r\nexport const css =  litModule.css;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const adoptStyles = litModule.adoptStyles;\r\n\r\nexport const notEqual = litModule.notEqual;\r\n\r\n//--------------------- Not added \r\n\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const isServer = litModule.isServer;","import { Directive, directive, nothing } from \"../lib.mjs\";\r\n\r\nconst definition = {\r\n    'action': 'gsAction',\r\n    'anchor': 'gsAnchor',\r\n    'attribute': 'gsAttribute',\r\n    'call': 'gsCall',\r\n    'exec': 'gsExec',\r\n    'inject': 'gsInject',\r\n    'property': 'gsProperty',\r\n    'swap': 'gsSwap',\r\n    'target': 'gsTarget',\r\n    'template': 'gsTemplate',\r\n    'toggle': 'gsToggle',\r\n    'trigger': 'gsTrigger',\r\n    'value': 'gsValue',\r\n    'calls':'gsCall',\r\n    'toggles':'gsToggle',\r\n    'timeout':'gsTimeout',\r\n    'triggers':'gsTrigger'\r\n};\r\n\r\nconst template = {\r\n    'gsAction': undefined,\r\n    'gsAnchor': undefined,\r\n    'gsAttribute': undefined,\r\n    'gsCall': undefined,\r\n    'gsExec': undefined,\r\n    'gsInject': undefined,\r\n    'gsProperty': undefined,\r\n    'gsSwap': undefined,\r\n    'gsTarget': undefined,\r\n    'gsTemplate': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTrigger': undefined,\r\n    'gsValue': undefined,\r\n    'gsCall': undefined,\r\n    'gsToggle': undefined,\r\n    'gsTimeout': undefined,\r\n    'gsTrigger': undefined\r\n};\r\n\r\nclass DatasetDirective extends Directive {\r\n\r\n    render(obj) {\r\n        console.log(obj);\r\n        return nothing;\r\n    }\r\n\r\n    update(part, [obj, flat = true]) {\r\n\r\n        if (!obj) return nothing;\r\n        const dataset = part.element.dataset;\r\n        const srcset = obj.dataset || obj;\r\n        const isDataset = srcset instanceof DOMStringMap;\r\n\r\n        if (isDataset) {\r\n            Object.assign(dataset, srcset);\r\n        } \r\n        \r\n        if (flat) this.#remap(dataset, obj);\r\n\r\n        return nothing;\r\n    }\r\n\r\n    #remap(dataset, obj) {\r\n        const opt = Object.assign({}, template);\r\n        const list = Object.entries(obj).filter(v => Object.hasOwn(definition, v[0]));\r\n        if (list.length > 0) {\r\n            list.forEach(kv => opt[definition[kv[0]]] = kv[1]);\r\n            Object.keys(opt)\r\n            .filter(k => opt[k] !== undefined)\r\n            .forEach(k => dataset[k] = opt[k]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const dataset = directive(DatasetDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\n\r\n/**\r\n * Generic object property descriptor getter\r\n * @param {Object} instance \r\n * @returns {PropertyDescriptor}\r\n */\r\nfunction descriptors(instance) {\r\n  return Object.entries(Object.getOwnPropertyDescriptors(instance));\r\n}\r\n\r\n/**\r\n * List of all object property descriptors \r\n * @param {Object} instance Object instance \r\n * @returns {Array<PropertyDescriptor>}\r\n */\r\nfunction listProperties(instance) {\r\n  return descriptors(instance)\r\n    .filter(e => typeof e[1].value !== 'function')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List all object property getters\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGetters(instance) {\r\n  return descriptors(Reflect.getPrototypeOf(instance))\r\n    .filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\r\n    .map(e => e[0]);\r\n}\r\n\r\n/**\r\n * List of all gettable properties from an object\r\n * @param {Object} instance \r\n * @returns {Array}\r\n */\r\nfunction listGettable(instance) {\r\n  return new Set([...listGetters(instance), ...listProperties(instance)]);\r\n}\r\n\r\n/**\r\n * Parse string literal template into Lit html instance\r\n * @param {*} tpl \r\n * @param {*} params \r\n * @returns {function}\r\n */\r\nexport function literalTemplate(tpl, params) {\r\n  const names = Array.from(listGettable(params));\r\n  const vals = names.map(v => params[v]);\r\n  names.push('html');\r\n  vals.push(html);\r\n  return new Function(...names, `return html\\`${tpl}\\`;`)(...vals);\r\n}","/**\r\n * A clone of classMap directive to support CSS directive.\r\n * Lit classs is not expoed, so we have to clone it and create our own.\r\n */\r\n\r\nimport { Directive, PartType, directive, noChange } from \"../lib.mjs\";\r\n\r\nclass CssMapDirective extends Directive {\r\n\r\n    constructor(partInfo) {\r\n        super(partInfo);\r\n        if (partInfo.type !== PartType.ATTRIBUTE ||\r\n            partInfo.name !== 'css' ||\r\n            partInfo.strings?.length > 2) {\r\n            throw new Error('`classMap()` can only be used in the `css` attribute ' +\r\n                'and must be the only part in the attribute.');\r\n        }\r\n    }\r\n\r\n    render(classInfo) {\r\n        // Add spaces to ensure separation from static classes\r\n        return (' ' +\r\n            Object.keys(classInfo)\r\n                .filter((key) => classInfo[key])\r\n                .join(' ') +\r\n            ' ');\r\n    }\r\n\r\n    update(part, [classInfo]) {\r\n\r\n        // Remember dynamic classes on the first render\r\n        if (this._previousClasses === undefined) {\r\n            this._previousClasses = new Set();\r\n            if (part.strings !== undefined) {\r\n                this._staticClasses = new Set(part.strings\r\n                    .join(' ')\r\n                    .split(/\\s/)\r\n                    .filter((s) => s !== ''));\r\n            }\r\n\r\n            for (const name in classInfo) {\r\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\r\n                    this._previousClasses.add(name);\r\n                }\r\n            }\r\n            return this.render(classInfo);\r\n        }\r\n\r\n        const classList = part.element.classList;\r\n\r\n        // Remove old classes that no longer apply\r\n        for (const name of this._previousClasses) {\r\n            if (!(name in classInfo)) {\r\n                classList.remove(name);\r\n                this._previousClasses.delete(name);\r\n            }\r\n        }\r\n\r\n        // Add or remove classes based on their classMap value\r\n        for (const name in classInfo) {\r\n            // We explicitly want a loose truthy check of `value` because it seems\r\n            // more convenient that '' and 0 are skipped.\r\n            const value = !!classInfo[name];\r\n            if (value !== this._previousClasses.has(name) &&\r\n                !this._staticClasses?.has(name)) {\r\n                if (value) {\r\n                    classList.add(name);\r\n                    this._previousClasses.add(name);\r\n                } else {\r\n                    classList.remove(name);\r\n                    this._previousClasses.delete(name);\r\n                }\r\n            }\r\n        }\r\n        return noChange;\r\n    }\r\n}\r\n\r\n/**\r\n * A directive that applies dynamic CSS classes.\r\n *\r\n * This must be used in the `css` attribute and must be the only part used in\r\n * the attribute. It takes each property in the `classInfo` argument and adds\r\n * the property name to the element's `classList` if the property value is\r\n * truthy; if the property value is falsey, the property name is removed from\r\n * the element's `css`.\r\n *\r\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\r\n * truthy.\r\n *\r\n * @param classInfo\r\n */\r\nexport const cssMap = directive(CssMapDirective);\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocapitalizeTypes = ['', 'none', 'off', 'on', 'sentences', 'words', 'characters'];\r\n\r\nexport const autocapitalize = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocapitalizeTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocompleteTypes = ['', 'off', 'on'];\r\n\r\nexport const autocomplete = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocompleteTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const AutocorrectTypes = ['', 'on', 'off'];\r\n\r\nexport const autocorrect = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && AutocorrectTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\nexport class ButtonTypes {\r\n\r\n    static values = ['button', 'reset', 'submit'];\r\n\r\n    static is(val) {\r\n        return ButtonTypes.values.includes(val);\r\n    }\r\n\r\n    static isReset(val) {\r\n        return  ButtonTypes.isType(val, 'reset');\r\n    }\r\n\r\n    static isSubmit(val) {\r\n        return  ButtonTypes.isType(val, 'submit');\r\n    }\r\n\r\n    /**\r\n     * Check button type, by spec, if not set, default is 'submit'\r\n     * @param {*} type - button type\r\n     * @param {*} value - matching value\r\n     * @returns \r\n     */\r\n    static isType(type, value) {\r\n        return ButtonTypes.#normalize(type) === value;\r\n    }\r\n\r\n    static #normalize(type) {\r\n        return GSUtil.normalize(type, 'submit').toLowerCase();\r\n    }\r\n} \r\n\r\nexport const buttonType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ButtonTypes.is(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ColorTypes = ['', 'primary', 'secondary', 'dark', 'light', 'info', 'warning', 'danger', 'alert', 'link', 'success'];\r\n\r\nexport const color = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ColorTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'desktop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const InputTypes = [\r\n   { type: 'checkbox', ignore: true},\r\n   { type: 'radio', ignore: true},\r\n   { type: 'switch', ignore: true},\r\n   { type: 'range', ignore: true},\r\n   { type: 'number', native: true},\r\n   { type: 'email', native: true},\r\n   { type: 'url',  native: true},\r\n   { type: 'file', native: true}, \r\n   { type: 'text'},\r\n   { type: 'password'}\r\n];\r\n\r\nexport const inputType = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && InputTypes.filter(o => o.type === newVal).length === 1;\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const NavTypes = ['', 'pills', 'tabs', 'underline'];\r\n\r\nexport const nav = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && NavTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val);\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PlacementTypes {\r\n\r\n    static values = ['center', 'left', 'right', 'start', 'end', 'top', 'bottom'];\r\n\r\n    static includes(val) {\r\n        return PlacementTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        return PlacementTypes.values.indexOf(val) > 4;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = PlacementTypes.values.indexOf(val)\r\n        return idx > 0 && idx < 5;\r\n    }\r\n\r\n    static isCenter(val) {\r\n        return PlacementTypes.values.indexOf(val) === 0;\r\n    }\r\n\r\n    static isBefore(val) {\r\n        return ['left', 'start', 'top'].includes(val);\r\n    }\r\n\r\n    static isAfter(val) {\r\n        return ['right', 'end', 'bottom'].includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const placement = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PlacementTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class PositionTypes {\r\n\r\n    static values = ['absolute', 'fixed', 'relative', 'sticky', 'static'];\r\n\r\n    static includes(val) {\r\n        return PositionTypes.values.includes(val);\r\n    }\r\n}\r\n\r\n\r\nexport const position = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && PositionTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport const SizeTypes = { 'default' : '', 'normal': '',  'medium': '', 'small': 'sm', 'large': 'lg', 'big' : 'lg', 'extra' : 'xl' };\r\n\r\nexport const size = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && Object.hasOwn(SizeTypes, newVal);\r\n    }\r\n\r\n};","export const stringArrayConverter = {\r\n    fromAttribute: (value, type) => {\r\n        return (value || '').split(',');\r\n    },\r\n    toAttribute: (value, type) => {\r\n        return (value || []).join(',');\r\n    }\r\n};","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCacheStyles } from '../base/GSCacheStyles.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#dynamic = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values, isGlobal = false) {\r\n    const me = this;\r\n    let style = null;\r\n    if (isGlobal) {\r\n      style = GSCacheStyles.dynamic;\r\n    } else {\r\n      me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');      \r\n      style = me.#dynamic;\r\n    }    \r\n    if (values === null && style.rules.length > 0 ) return style.removeRule(name);\r\n    return style.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host?.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.detach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  // called only once, before host.firstUpdate\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf() && me.#target) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs)\r\n        .filter(el => el ? true : false)\r\n        .forEach(el => GSDOM.cleanup(el));\r\n    }\r\n    me.#refs?.clear();\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { DataSelector } from \"../data/DataSelector.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n  #selectCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#selectCallback = me.#onSelect.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get selected() {\r\n    return this.store?.selected;\r\n  }\r\n\r\n  isSelected(val) {\r\n    return this.#selector.isSelected(val);\r\n  }\r\n\r\n  addSelected(val) {\r\n    return this.#selector.addSelected(val);\r\n  }\r\n  \r\n  removeSelected(val) {\r\n    return this.#selector.removeSelected(val);\r\n  }\r\n\r\n  clearSelected(data) {\r\n    return this.#selector.clearSelected(data);\r\n  }\r\n\r\n  getSelected(data) {\r\n    return GSUtil.asArray(data).filter(o => DataSelector.isSelected(o));\r\n  }\r\n\r\n  get #selector() {\r\n    return this.store || DataSelector;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    if (storage) {\r\n      storage.on('read', me.#readCallback);\r\n      storage.on('write', me.#writeCallback);\r\n      storage.on('error', me.#errorCallback);\r\n      storage.on('select', me.#selectCallback);\r\n      if (read) storage.read(me.#host);\r\n    }\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    if (storage) {\r\n      storage.off('read', me.#readCallback);\r\n      storage.off('write', me.#writeCallback);\r\n      storage.off('error', me.#errorCallback);\r\n      storage.off('select', me.#selectCallback);\r\n    }\r\n  }\r\n\r\n  #onSelect(e) {\r\n    this.#host.requestUpdate?.();\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller for elment move events, properly handling mouse events.\r\n */\r\nexport class ElementMoveController {\r\n\r\n  #host;\r\n  #element;\r\n  #attached = false;\r\n\r\n  #cursorX = 0;\r\n  #cursorY = 0;\r\n\r\n  #mouseUpCallback;\r\n  #mouseDownCallback;\r\n  #mouseMoveCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n    me.#mouseUpCallback = me.#onMouseUp.bind(me);\r\n    me.#mouseDownCallback = me.#onMouseDown.bind(me);\r\n    me.#mouseMoveCallback = me.#onMouseMove.bind(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  attach(element) {\r\n    const me = this;\r\n    if (!me.#attached) {\r\n      me.#element = element;\r\n      me.#attached = true;\r\n      me.#host.attachEvent(me.#element, 'mousedown', me.#mouseDownCallback);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.#cursorX = 0;\r\n    me.#cursorY = 0;\r\n    me.#host.removeEvent(document, 'mouseup', me.#mouseUpCallback);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n  * Call host onStartMove function\r\n  * @param {MouseEvent} e \r\n  */\r\n  #onMouseDown(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n    me.#host.onStartMove?.(e, me.#cursorX, me.#cursorY);\r\n    me.#host.attachEvent(document, 'mouseup', me.#mouseUpCallback, true);\r\n    me.#host.attachEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n  }\r\n\r\n  /**\r\n   * Remove mousemove listener and call host onEndMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseUp(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n    me.#host.removeEvent(document, 'mousemove', me.#mouseMoveCallback);\r\n    return me.#host.onEndMove?.(e, me.#cursorX, me.#cursorY);\r\n  }\r\n\r\n  /**\r\n   * Call host onMouseMove function\r\n   * @param {MouseEvent} e \r\n   */\r\n  #onMouseMove(e) {\r\n    const me = this;\r\n    me.#host.prevent(e);\r\n\r\n    me.#host.onMouseMove?.(e, me.#cursorX, me.#cursorY);\r\n\r\n    if (me.#cursorX < e.clientX) {\r\n      me.#host.onCursorRight?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorX > e.clientX) {\r\n      me.#host.onCursorLeft?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    if (me.#cursorY < e.clientY) {\r\n      me.#host.onCursorUp?.(e, me.#cursorX, me.#cursorY);\r\n    } else if (me.#cursorY > e.clientY) {\r\n      me.#host.onCursorDown?.(e, me.#cursorX, me.#cursorY);\r\n    }\r\n\r\n    me.#cursorX = e.clientX;\r\n    me.#cursorY = e.clientY;\r\n\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #language;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#language = host.language;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#language = null;\r\n  }\r\n\r\n  // called every time host is updated\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#language !== me.#host?.language) {\r\n      me.#language === me.#host?.language;\r\n      me.updateLanguage(me.#language);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#language) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n// internal hidden flag to prevent double injection\r\nconst RENDER_SYMBOL = Symbol.for(\"GS-TEMPLATE-RENDER\");\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n  static #cache = new Map();\r\n  static #refs = new Set();\r\n\r\n  static get isPrefetch() {\r\n    return globalThis.GS_TEMPLATE_PREFETCH || false;\r\n  }\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host[RENDER_SYMBOL] = false;\r\n    host.addController(this);\r\n  }\r\n\r\n  // inherited\r\n  hostConnected() {\r\n    const me = this;\r\n    /* \r\n    if(TemplateController.isPrefetch) {\r\n      me.hostUpdate();\r\n    }\r\n    */\r\n  }\r\n\r\n  // inherited\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    delete me.#host[RENDER_SYMBOL];\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  // inherited\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#template) return;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      const template = TemplateController.#cache.get(me.#toKey(ref));\r\n      if (GSUtil.isJsonType(template)) me.#applyTemplate(template);\r\n      me.#lastRef = ref;\r\n      if (ref && !me.#template) {\r\n        TemplateController.#schedule(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  // inherited\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (me.#template) {\r\n      const host = me.#host;\r\n      //me.hostDisconnected();\r\n      host.removeController(me);\r\n      host.templateInjected?.();\r\n      queueMicrotask(()=> me.hostDisconnected());\r\n    }\r\n\r\n  }\r\n\r\n  #toKey(ref) {\r\n    const me = this;\r\n    return GSUtil.isString(ref) ? `${ref}@${me.#host?.tagName || ''}` : ref;\r\n  }\r\n\r\n  #hasKey(key) {\r\n    return TemplateController.#refs.has(key) || TemplateController.#cache.has(key);\r\n  }\r\n\r\n  // applly template opts {simple, slots}\r\n  #applyTemplate({ simple, slots }) {\r\n\r\n    // is template does not contain slots\r\n    const me = this;\r\n    if (!me.#host) return;\r\n\r\n    const hasSlots = GSDOM.isTemplateElement(slots);\r\n    const hasSimple = GSDOM.isTemplateElement(simple);\r\n\r\n    let signal = true;\r\n\r\n    if (hasSlots) {\r\n      // slot elements must be added only once \r\n      if (me.#host[RENDER_SYMBOL] === false) {\r\n        me.#host[RENDER_SYMBOL] = true;\r\n        const clone = slots.cloneNode(true);\r\n        Array.from(clone.content.children).forEach(el => me.#host.appendChild(el));\r\n      }\r\n    }\r\n\r\n    if (hasSimple) {\r\n      if (simple.content.childElementCount > 0) {\r\n        signal = false;\r\n        me.#template = simple.cloneNode(true);\r\n        me.#host.requestUpdate();\r\n      }\r\n    }\r\n\r\n    if (signal) me.#host.templateInjected?.();\r\n\r\n  }\r\n\r\n  // separate first level nodes into sloted nodes and plain shadow injectable node \r\n  #preprocessTemplate(template) {\r\n    let templateSimple = null;\r\n    let templateSlots = null;\r\n    const slots = Array.from(template.content.children).filter(el => el.hasAttribute('slot'));\r\n    const hasSlots = slots.length > 0;\r\n    const hasSimple = template.content.childElementCount > slots.length;\r\n    if (hasSlots) {\r\n      if (hasSimple) {\r\n        templateSlots = document.createElement('template');\r\n        slots.forEach(el => templateSlots.content.appendChild(el));\r\n      } else {\r\n        templateSlots = template;\r\n      }\r\n    }\r\n    templateSimple = hasSimple && template?.content.childElementCount > 0 ? template : null;\r\n    templateSlots = hasSlots && templateSlots?.content.childElementCount > 0 ? templateSlots : null;\r\n    // cache copy for page inejcted tempkates as they might be cleared elswhere\r\n    templateSimple = templateSimple?.isConnected ? templateSimple.cloneNode(true) : templateSimple;\r\n    return { simple: templateSimple, slots: templateSlots };\r\n  }\r\n\r\n  async #load() {\r\n\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    \r\n    if (!ref) return;\r\n    const key = me.#toKey(ref);\r\n\r\n    // prevents double load\r\n    if (me.#hasKey(key)) {\r\n      // already scheduled\r\n      return;\r\n    }\r\n    TemplateController.#refs.add(key);\r\n\r\n    let templates = null;\r\n\r\n    const isTplEl = GSDOM.isTemplateElement(ref);\r\n    const cacheable = GSUtil.isString(ref);\r\n    if (cacheable) {\r\n      templates = TemplateController.#cache.get(key);\r\n    }\r\n\r\n    if (!templates) {\r\n      \r\n      try {\r\n        const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n        templates = me.#preprocessTemplate(template);\r\n      } catch (err) {\r\n        TemplateController.#refs.delete(key);\r\n        throw err;\r\n      }\r\n\r\n      if (cacheable) {\r\n        if (templates.simple) templates.simple.dataset.gsCache = true;\r\n        TemplateController.#cache.set(key, templates);\r\n      }\r\n    }\r\n    \r\n    TemplateController.#refs.delete(key);\r\n    me.#applyTemplate(templates);\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    return GSDOM.templateRef(this.#host);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n  static clear() {\r\n    GSTemplateCache.clear();\r\n    TemplateController.#tasks.clear();\r\n    TemplateController.#cache.clear();\r\n    TemplateController.#refs.clear();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#theme = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle event when template slot changes\r\n */\r\nexport class SlotController {\r\n\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      const me = this;\r\n      const target = me.#host.renderRoot || me.#host;\r\n      me.#host.attachEvent(target, 'slotchange', me.#onSlotChanged.bind(me));\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    #onSlotChanged(e) {\r\n      if (typeof e.target.assignedElements === 'function') {\r\n        e.target.assignedElements().forEach(el => {\r\n          el.onSlotInjected?.(e.target);\r\n        });\r\n      }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement, CSSResult } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\nimport { SlotController } from './controllers/SlotController.mjs';\r\nimport { GSAttributeHandler } from './base/GSAttributeHandler.mjs';\r\nimport { GSDOMObserver } from './base/GSDOMObserver.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    language: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted = undefined;\r\n  #uiHandler = undefined;\r\n  #orientation = undefined;\r\n  #localization = undefined;\r\n  #dataController = undefined;\r\n  #slotController = undefined;\r\n  #themes = undefined;\r\n  #template = undefined;\r\n  #content = undefined;\r\n  \r\n  #ref = undefined;\r\n  #refs = undefined;\r\n  #refx = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.language = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    //me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n    me.#slotController = new SlotController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const tpl = GSDOM.templateRef(me);\r\n    if (tpl) me.#template = new TemplateController(me);\r\n    if (me.isBindable) me.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(this);\r\n    super.disconnectedCallback();\r\n    me.#ref?.clear();\r\n    me.#refs?.clear();\r\n    me.#refx?.clear();\r\n    me.#ref = null;\r\n    me.#refs = null;\r\n    me.#refx = null;\r\n    me.#adopted = null;\r\n    me.#uiHandler = null;\r\n    me.#orientation = null;\r\n    me.#localization = null;\r\n    me.#dataController = null;\r\n    me.#slotController = null;\r\n    me.#themes = null;\r\n    me.#template = null;\r\n    me.#content = null;\r\n    //me.renderOptions = null;\r\n    me.adoptedStyleSheets = [];\r\n    const shadow = this.shadowRoot;\r\n    if (shadow) {\r\n      //if (shadow._$litPart$) shadow._$litPart$ = null;\r\n      shadow.adoptedStyleSheets = [];\r\n      // shadow.innerHTML = '';\r\n      //GSDOM.cleanup(shadow);\r\n      queueMicrotask(() => GSDOM.cleanup(shadow));\r\n    }\r\n    queueMicrotask(() => GSDOM.cleanup(me));\r\n    // GSDOM.cleanup(me);\r\n    // console.log('removed', me);\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.isConnected; // && this.isAllowRender;\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      me.#dataController?.hostDisconnected();\r\n      me.#dataController = undefined;\r\n      if (me.storage) {\r\n        me.#dataController = new DataController(me);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when this element injected in some slot\r\n   * @param {*} slot \r\n   */\r\n  onSlotInjected(slot) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return this.renderTemplate();\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : noChange;\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Called when asynchronnous template is injected into component\r\n   */\r\n  templateInjected() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @param {boolean} isGlobal \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value, isGlobal = false) {\r\n    return this.#adopted?.style(id, value, isGlobal);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @param {Number} levels - walk limit\r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '', levels = -1, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refx?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refx?.delete(query);\r\n    }\r\n    result ??= GSDOM.closest(this, query, levels);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#refx ??= new Map();\r\n      me.#refx.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.query(this, query, false, shadow);\r\n    \r\n    if (result && cached && !me.#ref?.has(query)) {\r\n      me.#ref ??= new Map();\r\n      me.#ref.set(query, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false, cached = false) {\r\n    const me = this;\r\n    let result = me.#refs?.get(query);\r\n    if (result && !result.isConnected) {\r\n      result = undefined;\r\n      me.#refs?.delete(query);\r\n    }\r\n    result ??= GSDOM.queryAll(this, query, false, shadow);\r\n    if (result && cached && !me.#refs?.has(query)) {\r\n      me.#refs ??= new Map();\r\n      me.#refs.set(query, result);\r\n    } \r\n    return result;        \r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults, propagate, immediate) {\r\n    return GSEvents.prevent(e, defaults, propagate, immediate);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.language, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    //return this.dataset.gsTarget;\r\n    return GSAttributeHandler.isBindable(this);\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template?.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content?.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    // this.isConnected &&\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment ?? '');\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser ?? '');\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol ?? '');\r\n  }\r\n\r\n  /**\r\n   * Internal attribute set if component is genrated by other components\r\n   */\r\n  get isGenerated() {\r\n    return this.hasAttribute('generated');\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Get instance of internal styles\r\n   */\r\n  get elementStyles() {\r\n    return this.constructor.elementStyles\r\n        .filter(o => o instanceof CSSStyleSheet || o.styleSheet instanceof CSSStyleSheet)\r\n        .map(o => o.styleSheet || o)\r\n        .pop();    \r\n    /*\r\n    .map(s => {\r\n       Object.values(s)\r\n        .filter(o => o instanceof CSSStyleSheet || o instanceof CSSResult)\r\n        .map(o => o.styleSheet || o)\r\n        .pop()\r\n    }).pop();\r\n    */\r\n  }\r\n\r\n  /**\r\n   * Internal shadow styles rule\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  cssRule(name) {\r\n    return Array.from(this.elementStyles?.rules ?? []).filter(r => r.selectorText === name).pop();\r\n  }\r\n\r\n  /**\r\n   * Set dynamic CSS rule \r\n   * See GSIcon hot it is done\r\n   * @param {*} rule \r\n   * @param {*} name \r\n   * @param {*} value \r\n   */\r\n  setCSSProperty(rule, name, value) {\r\n    this.cssRule(rule)?.style?.setProperty(name, value);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    return GSDOM.allProperties(obj);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    return GSDOM.define(name, clazz || this, opt);\r\n  }\r\n\r\n  static {\r\n    GSElement.define('gs-element', GSElement);\r\n    // global document element removal monitor, help GS cleanup\r\n    GSDOMObserver.registerFilter(el => true, el => { GSDOM.cleanup(el) }, true, document.body);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from \"../GSElement.mjs\";\r\n\r\n/**\r\n * Controller for child element navigation / selection / focusing\r\n */\r\nexport class ElementNavigationController {\r\n\r\n  #host;\r\n  #attached;\r\n  #focused;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#attached = false;\r\n  }\r\n\r\n  get circular() {\r\n    return this.#host?.circular === true;\r\n  }\r\n\r\n  get multiple() {\r\n    return this.#host?.multiple === true;\r\n  }\r\n\r\n  get focused() {\r\n    return this.#focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host.active;\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */\r\n  init() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Called on first update from host component\r\n   */  \r\n  attach(el) {\r\n    const me = this;\r\n    if (me.#attached) return;\r\n    me.#attached = true;\r\n    if (me.#host) {\r\n      me.#host.attachEvent(el, 'keydown', e => me.onKeyDown(e));\r\n      me.#host.attachEvent(el, 'keyup', e => me.onKeyUp(e));\r\n      me.#host.attachEvent(el, 'click', e => me.onClick(e));\r\n      me.#host.attachEvent(el, 'focusin', e => me.onFocusIn(e));\r\n      me.#host.attachEvent(el, 'focusout', e => me.onFocusOut(e));\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    const me = this;\r\n    let el = me.#focused?.previousElementSibling;\r\n    while (el?.disabled) el = el.previousElementSibling;\r\n    if (me.circular && !el) el = me.lastElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  next() {\r\n    const me = this;\r\n    let el = me.#focused?.nextElementSibling;\r\n    while (el?.disabled) el = el.nextElementSibling;\r\n    if (me.circular && !el) el = me.firstElementChild;\r\n    el?.focus();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    const me = this;\r\n    const active = me.selected;\r\n    if (me.multiple) {\r\n      active.forEach(el => {\r\n        el.active = false;\r\n        el.blur();\r\n      });\r\n    } else if (active) {\r\n      active.active = false;\r\n      active.blur();\r\n    }\r\n    me.#focused = undefined;\r\n    me.#host?.emit('group-reset', undefined, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element selected\r\n   * @param {*} el \r\n   */\r\n  #onSelected(el) {\r\n    const me = this;\r\n    me.#host?.onSelected?.(el);\r\n    me.#host?.emit('group-selected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element deselected\r\n   * @param {*} el \r\n   */\r\n  #onDeselected(el) {\r\n    this.#host?.onDeselected?.(el);\r\n    this.#host?.emit('group-deselected', el, true);\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  #onFocused(el) {\r\n    this.#host?.onFocused?.(el);\r\n    this.#host?.emit('group-focused', el, true);\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  #isNavigable(el) {\r\n    return this.#host?.isNavigable ? this.#host?.isNavigable(el) : true;\r\n  }\r\n\r\n  #focus(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    me.#focused = el;\r\n    if (el) {\r\n      me.#onFocused(me.#focused);\r\n    }\r\n  }\r\n\r\n  #toggle(el) {\r\n    if (!el) return;\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n    if (el.active) {\r\n      me.#onSelected(el);\r\n    } else {\r\n      me.#onDeselected(el);\r\n    }\r\n  }\r\n\r\n  #select(el) {\r\n    const me = this;\r\n    if (!me.#isNavigable(el)) return;\r\n\r\n    const active = me.selected;\r\n    if (active && !me.multiple) {\r\n      active.active = false;\r\n      me.#toggle(active);\r\n    }\r\n\r\n    if (me.multiple) {\r\n      el.active = !el.active;\r\n    } else {\r\n      el.active = true;\r\n    }\r\n    me.#toggle(el);\r\n  }\r\n\r\n  onFocusOut(e) {\r\n    const me = this;\r\n    //if (me.#focused === e.target) me.#focused = undefined;\r\n  }\r\n\r\n  onFocusIn(e) {\r\n    if (!e.target.isNav) return;\r\n    const me = this;\r\n    if(e.relatedTarget?.isNav) {\r\n      me.#focus(e.target)\r\n    } else {\r\n      me.selected?.focus();\r\n    }\r\n\r\n  }\r\n\r\n  onClick(e) {\r\n    const me = this;\r\n    const el = e.composedPath()\r\n    .filter(el => el instanceof GSElement)\r\n    .filter(el => el.parentComponent === me.#host).pop();\r\n    if (!me.#isNavigable(el)) return;\r\n    if (e.ctrlKey) me.reset();\r\n    me.#onDeselected(me.selected);\r\n    me.#select(el);\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        me.next();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (!e.target.isNav) return;\r\n    switch (e.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        me.#focused?.click();\r\n        break;\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEventBus } from \"../base/GSEventBus.mjs\";\r\n\r\n/**\r\n * Controller for multiple elements groups\r\n */\r\nexport class GroupController {\r\n\r\n  #host;\r\n\r\n  #busEvent;\r\n  #busCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    if (me.#host.group) {\r\n      me.#busCallback = me.#onBusEvent.bind(me);\r\n      me.#busEvent = GSEventBus.register(me.#host.clazzName);\r\n      me.#busEvent.on(me.#host.group, me.#busCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#busEvent?.off(me.#host.group, me.#busCallback);\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n  }\r\n\r\n  #onBusEvent(e) {\r\n    this.#host.onBusEvent?.(e);\r\n  }\r\n\r\n  notify(data) {\r\n    const me = this;\r\n    me.#busEvent?.emit(me.#host.group, {owner: me.#host, item:data}); \t\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSRouter } from '../base/GSRouter.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSRouterElement extends GSElement {\r\n\r\n  #router = null;\r\n\r\n  static properties = {\r\n    url: {},\r\n    disabled: { type: Boolean },\r\n    logging: { type: Boolean }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.logging = false;\r\n    this.#router = new GSRouter();\r\n    this.#router.log = false;\r\n  }\r\n\r\n  renderUI() {\r\n    return '';\r\n  }\r\n\r\n  updated(changed) {\r\n    this.#router.log = this.logging;\r\n    if (changed.has('url')) {\r\n      this.#router.initialize(this.url);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.#router?.disable();\r\n    this.#router = null;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-router');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\n\r\nexport class GSAccordionElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    autoclose: { type: Boolean },\r\n    cssItem: { reflect: true, attribute: 'css-item' },\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    data: { type: Array }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.settings;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n       @notify=\"${me.#onNotify.bind(me)}\"\r\n       @click=\"${me.#onClick}\" \r\n       @keyup=\"${me.#onKeyUp}\" \r\n       class=\"accordion ${classMap(me.renderClass())}\">\r\n       ${this.#renderItems()}\r\n       <slot></slot></div>`\r\n  }\r\n\r\n  get items() {\r\n    return this.queryAll('gs-accordion-item', false, true);\r\n  }\r\n\r\n  get settings() {\r\n    const cfg = this.constructor.properties;\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, cfg));\r\n  }\r\n\r\n  close() {\r\n    this.#state(false);\r\n  }\r\n\r\n  open() {\r\n    this.#state(true);\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-accordion-item generated\r\n        .opened=\"${ifDefined(o.disabled === true)}\" \r\n        message=\"${ifDefined(o.message)}\" \r\n        template=\"${ifDefined(o.template)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-accordion-item>`;\r\n    });\r\n  }\r\n\r\n  #state(val = false) {\r\n    this.items.forEach(el => el.opened = val);\r\n    this.notify();\r\n  }\r\n\r\n  #onNotify(e) {\r\n    const me = this;\r\n    if (me.autoclose && e.target.opened) {\r\n      me.items.filter(el => el != e.target).forEach(el => el.opened = false);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const isItemCloser = e?.composedPath()[0]?.matches('.accordion-button');\r\n    if(isItemCloser) e.target.toggle?.();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        e.target.close?.();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.target.open?.();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSAccordionItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    cssHeader: { reflect: true, attribute: 'css-header' },\r\n    cssBody: { reflect: true, attribute: 'css-body' },\r\n    message: { reflect: true, },\r\n    title: { reflect: true, },\r\n    opened: { type: Boolean, reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.owner?.tagName === 'GS-ACCORDION';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const owner = me.owner;\r\n    const cssHeader = me.cssHeader || owner?.cssHeader;\r\n    const cssBody = me.cssBody || owner?.cssBody;\r\n    return html`<div class=\"accordion-item ${me.css}\">\r\n             <h2 class=\"accordion-header\">\r\n               <button type=\"button\" \r\n                class=\"accordion-button  ${cssHeader} ${me.opened ? '' : 'collapsed'}\"> \r\n                 ${me.translate(me.title)}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse  ${cssBody} ${me.opened ? 'show' : ''}\">\r\n               <div class=\"accordion-body\">\r\n                   ${me.translate(me.message)}\r\n                   ${me.renderTemplate()}\r\n                   <slot></slot>\r\n               </div>\r\n             </div>      \r\n     </div>`\r\n  }\r\n\r\n  open() {\r\n    this.notify(true);\r\n  }\r\n  \r\n  close() {\r\n    this.notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.notify(!this.opened);\r\n  }\r\n\r\n  notify(val = false) {\r\n    const me = this;\r\n    me.opened = val;\r\n    super.notify();\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-accordion') || GSDOM.component(this);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-accordion-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, ifDefined } from '../lib.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\nexport class GSAlertElement extends GSElement {\r\n\r\n    static properties = {\r\n        message: { reflect: true },\r\n        color: { ...color },\r\n        closed: { reflect: true, type: Boolean },\r\n        closable: { reflect: true, type: Boolean },\r\n        delay: { reflect: true, type: Number },\r\n    }\r\n\r\n    #ref;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.delay = 1;\r\n        this.#ref = createRef();\r\n        this.#data = this.#proxify(this);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div role=\"alert\" dir=\"${ifDefined(me.direction)}\" ${ref(me.#ref)} \r\n            @mouseover=\"${() => me.#pause = true}\"\r\n            @mouseout=\"${() => me.#pause = false}\"\r\n            class=\"alert fade ${classMap(me.renderClass())}\" >\r\n            ${me.#first}\r\n            ${me.renderTemplate()}\r\n            <slot></slot>\r\n            ${me.#second}\r\n        </div>`;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#handleBillboard();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        if (!changed.has('opened')) return;\r\n        this.#handleBillboard();\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': !me.closed,\r\n            'alert-dismissible': me.closable,\r\n            [`alert-${me.color}`]: me.color,\r\n\r\n        }\r\n        return css;\r\n    }\r\n\r\n    open() {\r\n        this.notify(false);\r\n    }\r\n\r\n    close() {\r\n        this.notify(true);\r\n    }\r\n\r\n    toggle() {\r\n        this.notify(!this.closed);\r\n    }\r\n\r\n    notify(val = false) {\r\n        const me = this;\r\n        me.closed = val;\r\n        if (me.closed) setTimeout(() => { me.#ref.value.classList.toggle('d-none', true) }, 250);\r\n        super.notify();\r\n    }\r\n\r\n    get isBillboard() {\r\n        return this.#data?.length > 0;\r\n    }\r\n\r\n    get #message() {\r\n        return this.translate(this.message);\r\n    }\r\n\r\n    get #first() { return this.rtl ? this.#button : this.#message; };\r\n\r\n    get #second() { return this.rtl ? this.#message : this.#button; };\r\n\r\n    get #button() {\r\n        return this.closable ? html`<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"${this.close}\"></button>` : '';\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, {message:{}}));\r\n    }\r\n\r\n    #handleBillboard() {\r\n        const me = this;\r\n        if (me.closed) {\r\n            clearInterval(me.#interval);\r\n            me.#interval = 0;\r\n        } else {\r\n            me.#billboard();\r\n        }        \r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        if (!me.isBillboard) return;\r\n        const items = me.#data;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].message;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].message;\r\n        }, me.delay * 1000);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-alert');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { color, size, buttonType, ButtonTypes, SizeTypes } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSButtonElement extends GSElement {\r\n\r\n  static properties = {\r\n    type: { ...buttonType }, // reset, submit\r\n    size: { ...size }, // small, large, normal\r\n    color: { ...color },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    toggleColor: { ...color, attribute : 'toggle-color' },\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    outline: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true },\r\n    toggling: { type: Boolean },\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    text: {},\r\n    url: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.type = 'button';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<button is=\"gs-ext-button\" part=\"button\" role=\"button\" \r\n        ${ref(me.#refEl)}\r\n        dir=\"${ifDefined(me.direction)}\"\r\n        type=\"${ifDefined(me.type)}\" \r\n        class=\"btn ${classMap(me.renderClass())}\" \r\n        title=\"${ifDefined(me.#tooltip)}\"\r\n        ?disabled=${me.disabled}\r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"\r\n        @disabled=\"${me.#onDisabled}\"\r\n        @click=\"${me.#onClick}\">\r\n          ${me.#first} ${me.#second}</button>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n      'focus-ring': document.activeElement === me,\r\n      [`text-${me.text}`]: me.text,\r\n      [`btn-${size}`]: size,\r\n      [`btn-outline-${me.color}`]: me.outline,\r\n      [`btn-${me.color}`]: !me.outline && me.color,\r\n      [`btn-${me.toggleColor}`]: me.active && me.toggleColor,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    if(me.toggling) me.toggle();\r\n    me.iconEl?.animate?.();\r\n    me.#onHref(e)\r\n    if (me.dataset.event) return me.emit(me.dataset.event, null, me.dataset.bubbles, me.dataset.composed, true);\r\n    if (me.isReset) return me.form?.reset();\r\n    if (me.isSubmit) return me.form?.submit();\r\n    me.notify();\r\n  }\r\n\r\n  #onDisabled(e) {\r\n    this.disabled = this.buttonEl.disabled;\r\n  }\r\n\r\n  #onHref(e) {\r\n    const me = this;\r\n    if (!me.url) return;\r\n    if (me.url.startsWith('#')) {\r\n      location.hash = me.url;\r\n    } else {\r\n      location.href = me.url;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover?.(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover?.(false);\r\n  }\r\n\r\n  get isReset() {\r\n    return ButtonTypes.isReset(this.type);\r\n  }\r\n\r\n  get isSubmit() {\r\n    return ButtonTypes.isSubmit(this.type);\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  get buttonEl() {\r\n    return this.#refEl.value;\r\n  }\r\n  \r\n\r\n  get form() {\r\n    return this.closest('gs-form, form');\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #tooltip() {\r\n    return this.translate(this.tooltip);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-button');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { unsafeHTML, classMap, html, ifDefined, css } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDate } from '../base/GSDate.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCalendarElement extends GSElement {\r\n\r\n  static styles = css`.year::-webkit-outer-spin-button,.year::-webkit-inner-spin-button {-webkit-appearance: none;margin: 0;} .year {-moz-appearance: textfield;} .day:focus{font-weight: bold;}`\r\n\r\n  static properties = {\r\n    date: {},\r\n    target: {},\r\n    format: { hasChanged: notEmpty },\r\n    editable: { type: Boolean },\r\n    range: { type: Number },\r\n    year: { type: Number },\r\n    month: { type: Number, hasChanged: numGE0 },\r\n    day: { type: Number, hasChanged: numGE0 },\r\n    minYear: { attribute: 'year-min', type: Number },\r\n    maxYear: { attribute: 'year-max', type: Number },\r\n    arrovPrev: { attribute: 'arrow-prev' },\r\n    arrowNext: { attribute: 'arrow-next' },\r\n    cssDays: { attribute: 'css-days' },\r\n    cssToday: { attribute: 'css-today' },\r\n    cssWeeks: { attribute: 'css-weeks' },\r\n    cssMonth: { attribute: 'css-month' },\r\n    cssYear: { attribute: 'css-year' },\r\n    cssNav: { attribute: 'css-nav' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n  }\r\n\r\n  #date;\r\n  #selected;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.#date = new GSDate();\r\n    me.#date.day = 1;\r\n    me.#selected = new GSDate();\r\n    me.#date.language = GSUtil.language;\r\n    me.#selected.language = GSUtil.language;\r\n    \r\n    me.language = GSUtil.language;\r\n    me.day = me.#selected.day;\r\n    me.month = me.#selected.month;\r\n    me.year = me.#selected.year;\r\n    \r\n    me.editable = false;\r\n    me.range = 5;\r\n    me.minYear = 1900;\r\n    me.maxYear = 2100;\r\n    me.arrowPrev = '&#10094;';\r\n    me.arrowNext = '&#10095;';\r\n    me.cssNav = 'btn-light';\r\n    me.cssToday = 'btn-secondary';\r\n    me.cssSelected = 'btn-primary';\r\n    me.cssWeeks = 'fw-bold text-bg-dark';\r\n    me.cssYear = 'form-control fs-5 fw-bold border-0 text-center m-1 p-0';\r\n    me.cssMonth = 'form-control fs-3 fw-bold border-0 text-center m-1 p-0';\r\n  }\r\n\r\n  get date() {\r\n    const me = this;\r\n    //return this.#date.toISOString();\r\n    return new Proxy(this.#date, {\r\n      set(target, prop, value) {\r\n        if (typeof target[prop] != 'function') {\r\n          target[prop] = value;\r\n          me.#update();\r\n        }\r\n        return true;\r\n      },\r\n      get(target, prop, receiver) {\r\n        const value = target[prop];\r\n        if (value instanceof Function) {\r\n          return function (...args) {\r\n            try {\r\n              return value.apply(this === receiver ? target : this, args);\r\n            } finally {\r\n              me.#update();\r\n            }\r\n          };\r\n        }\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  previousMonth() {\r\n    const me = this;\r\n    if (me.month == 0) {\r\n      me.month = 11;\r\n      me.year--;\r\n    } else {\r\n      me.month--;\r\n    }\r\n  }\r\n\r\n  nextMonth() {\r\n    const me = this;\r\n    if (me.month == 11) {\r\n      me.month = 0;\r\n      me.year++;\r\n    } else {\r\n      me.month++;\r\n    }\r\n  }\r\n\r\n  previousYear() {\r\n    this.year--;\r\n  }\r\n\r\n  nextYear() {\r\n    this.year++;\r\n  }\r\n\r\n  formatted(date) {\r\n    const me = this;\r\n    return (date || me.#date).format(me.format, me.language);\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    const date = new GSDate(me.#date);\r\n    me.#updateTarget(date);\r\n    me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#date.day = 1;\r\n    me.#date.month = me.month;\r\n    me.#date.year = me.year;\r\n    me.#date.day = me.day;\r\n    me.#date.language = me.language;\r\n\r\n    const week = GSDate.dayList(true, me.language).map(v => html`<div class=\"col\">${v}</div>`);\r\n    const months = me.#monthsHTML();\r\n    const year = me.#yearHTML();\r\n\r\n    return html`\r\n          <div class=\"container-fluid text-center ${classMap(me.renderClass())}\"\r\n          dir=\"${ifDefined(me.direction)}\"\r\n          @keydown=\"${me.#onKey}\"\r\n          @click=\"${me.#onDay}\">\r\n          <div class=\"row align-items-center ${me.cssHeader} header\">\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.previousMonth}\" class=\"btn ${me.cssNav} arrow prev\">${unsafeHTML(me.arrowPrev)}</a>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  ${months}\r\n                  ${year}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col-auto\">\r\n                  <a href=\"#\" @click=\"${me.nextMonth}\" class=\"btn ${me.cssNav} arrow next\">${unsafeHTML(me.arrowNext)}</a>\r\n              </div>\r\n          </div>\r\n          <div class=\"row weeks ${me.cssWeeks}\">${week}</div>\r\n          ${unsafeHTML(me.#daysHTML())}\r\n      </div>`;\r\n  }\r\n\r\n  #updateTarget(date) {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    const tgt = GSDOM.query(document.documentElement, me.target);\r\n    if (!tgt) return;\r\n\r\n    if (tgt instanceof HTMLInputElement) {\r\n      if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n      return tgt.value = me.formatted(date);\r\n    }\r\n    GSDOM.setHTML(tgt, me.formatted(date));\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.#date.month;\r\n    me.#selected.year = me.#date.year;\r\n    me.#selected.day = me.#date.day;\r\n    me.#selected.language = me.#date.language;\r\n\r\n    me.day = me.#date.day;\r\n    me.month = me.#date.month;\r\n    me.year = me.#date.year;\r\n    me.language = me.#date.language;\r\n  }\r\n\r\n  #isToday(v, date) {\r\n    const me = this;\r\n    return v && GSUtil.asNum(v) === date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n  }\r\n\r\n  #daysHTML() {\r\n    const me = this;\r\n    const today = new GSDate();\r\n    today.language = me.language;\r\n    const list = me.#date.build(me.language);\r\n    const result = list\r\n      .map(v => {\r\n        const c1 = me.#isToday(v, today) ? me.cssToday : '';\r\n        const c2 = me.#isToday(v, me.#selected) ? me.cssSelected : '';\r\n\r\n        const d = v ? `<a tabindex=\"0\" href=\"#\" class=\"btn shadow-none ${c2} ${c1} day\" data-day=\"${v}\">${v}</a>` : ''\r\n        return `<div class=\"col p-0\">${d}</div>`;\r\n      })\r\n      .map((v, i) => {\r\n        if (i === 0) return `<div class=\"row days\">${v}`;\r\n        const isBreak = i % 7 == 0;\r\n        return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n      });\r\n    result.push('</div>');\r\n    return result.join('');\r\n  }\r\n\r\n  #monthsHTML() {\r\n    const me = this;\r\n    const current = me.#date.MMMM;\r\n    const months = GSDate.monthList(false, me.language);\r\n    const list = months.map((v, i) => html`<option value=\"${i}\" selected=${ifDefined(current == v ? true : undefined)}>${v}</option>`);\r\n    return html`<select @change=\"${me.#onMonth}\" name=\"month\" class=\"month ${me.cssMonth}\" value=\"${months.indexOf(current)}\">${list}</select>`;\r\n  }\r\n\r\n  #yearHTML() {\r\n\r\n    const me = this;\r\n\r\n    const options = [];\r\n    let minYear = me.minYear;\r\n    let maxYear = me.maxYear;\r\n\r\n    if (me.range > 0) {\r\n      const year = new GSDate().year;\r\n      minYear = year - me.range;\r\n      maxYear = year + me.range;\r\n      me.#optionsHTML(options, minYear, maxYear);\r\n    }\r\n\r\n    if (!me.editable) {\r\n      return html`<select @change=\"${me.#onYear}\" name=\"year\" class=\"year ${me.cssYear}\" data-gs-min=\"${minYear}\" data-gs-max=\"${maxYear}\">${options}</select>`;\r\n    }\r\n\r\n    const isList = me.editable && me.range && options.length > 0;\r\n    const listID = isList ? GSID.next : null;\r\n    const list = isList ? html`<datalist id=\"${listID}\">${options}</datalist>` : '';\r\n\r\n    return html`<input name=\"year\" \r\n      type=\"number\" \r\n      list=\"${ifDefined(listID)}\"\r\n      class=\"year ${me.cssYear}\" \r\n      @change=\"${me.#onYear}\" \r\n      min=\"${minYear}\" \r\n      max=\"${maxYear}\"\r\n      value=\"${me.#date.getFullYear()}\">\r\n      ${list}`;\r\n  }\r\n\r\n  #optionsHTML(options, minYear = 0, maxYear = 0) {\r\n    const me = this;\r\n    let val = minYear;\r\n    while (val <= maxYear) {\r\n      if (me.editable) {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>`);\r\n      } else {\r\n        options.push(html`<option value=\"${val}\" selected=${ifDefined(val == me.year ? true : undefined)}>${val}</option>`);\r\n      }\r\n      val++;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  #onDay(e) {\r\n    GSEvents.prevent(e);\r\n    if (!e.target.classList.contains('day')) return;\r\n    const me = this;\r\n    const day = GSUtil.asNum(e.target.dataset.day, me.day);\r\n\r\n    me.#selected.day = 1;\r\n    me.#selected.month = me.month;\r\n    me.#selected.year = me.year;\r\n    me.#selected.day = day;\r\n\r\n    me.day = day;\r\n  }\r\n\r\n  #onMonth(e) {\r\n    this.month = e.target.selectedIndex;\r\n  }\r\n\r\n  #onYear(e) {\r\n    const yearEl = e?.target;\r\n    if (yearEl?.validity.valid) {\r\n      this.year = yearEl.value;\r\n    }\r\n  }\r\n\r\n  #onKey(e) {\r\n    // console.log(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-calendar');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSCardElement extends GSElement {\r\n\r\n  static styles = css`.card-header, .card-footer{ background-color: inherit; color: inherit;}`;\r\n\r\n  static properties = {\r\n\r\n    imageStyle: { type: Object, attribute: 'image-style', reflect : true },\r\n\r\n    overlay: { type: Boolean },\r\n    placement: { ...placement },\r\n    align: { ...placement },\r\n\r\n    image: {},\r\n    title: {},\r\n    subtitle: {},\r\n    text: {},\r\n    footer: {},\r\n    header: {},\r\n\r\n    colorText: { attribute: 'color-text' },\r\n    colorBack: { attribute: 'color-back' },\r\n    colorBorder: { attribute: 'color-border' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssSubtitle: { attribute: 'css-subtitle' },\r\n    cssText: { attribute: 'css-text' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssImage: { attribute: 'css-image' },\r\n\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.border = false;\r\n    this.shadow = false;\r\n    this.align = 'start';\r\n    this.placement = 'top';\r\n    this.imageStyle = this.imageStyle || {};\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const content =  me.isVertical ? me.#renderVertical() : me.#renderHorizontal();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"card ${classMap(me.renderClass())}\">${content}</div>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return [me.#imageTop, me.#header, me.#body, me.#footer, me.#imageBottom];\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    const start = PlacementTypes.isBefore(me.placement);\r\n    const startClass = start ? 'col-4' : 'col-8';\r\n    const endClass = start ? 'col-8' : 'col-4';\r\n    const startHtml = start ? me.#images : me.#body;\r\n    const endHtml =  start ? me.#body : me.#images;\r\n    return html`<div class=\"row g-0\">\r\n        <div class=\"${startClass}\">\r\n            ${startHtml}\r\n        </div>\r\n        <div class=\"${endClass}\">\r\n          ${endHtml}\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      border: me.border || me.colorBorder,\r\n      [`text-${me.align}`]: me.align,\r\n      [`text-${me.colorText}`]: me.colorText,\r\n      [`bg-${me.colorBack}`]: me.colorBack,\r\n      [`border-${me.colorBorder}`]: me.colorBorder,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return PlacementTypes.isHorizontal(this.placement);\r\n  }\r\n\r\n  get #body() {\r\n    const me = this;\r\n    return html`<div class=\"${me.overlay ? 'card-img-overlay' : 'card-body'} ${me.cssBody}\">\r\n      <h5 class=\"card-title  ${me.cssTitle}\"><slot name=\"title\">${me.translate(me.title)}</slot></h5>\r\n      <h6 class=\"card-subtitle  ${me.cssSubtitle}\"><slot name=\"subtitle\">${me.translate(me.subtitle)}</slot></h6>\r\n      <p class=\"card-text ${me.cssText}\"><slot name=\"text\">${me.translate(me.text)}</slot></p>\r\n      <slot name=\"body\"></slot>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  get #header() {\r\n    return this.overlay ? '' : html`<div class=\"card-header  ${this.cssHeader}\"><slot name=\"header\">${this.header}</slot></div>`;\r\n  }\r\n\r\n  get #footer() {\r\n    return this.overlay ? '' : html`<div class=\"card-footer ${this.cssFooter}\"><slot name=\"footer\">${this.footer}</slot></div>`;\r\n  }\r\n\r\n  get #imageSlot() {\r\n    return html`<slot name=\"image\"></slot>`;\r\n  }\r\n\r\n  get #image() {\r\n    const me = this;\r\n    const css = me.isHorizontal ? 'img-fluid' : 'card-img';\r\n    me.dynamicStyle(me.#styleID, me.imageStyle);\r\n    return html`<img src=\"${me.image}\" class=\"rounded-${me.placement} ${css} ${me.cssImage} ${me.#styleID}\" alt=\"...\">`;\r\n  }\r\n\r\n  get #images() {\r\n    return this.image ? this.#image : this.#imageSlot;\r\n  }\r\n\r\n  get #imageTop() {\r\n    return this.placement === 'top' ? this.#images : '';\r\n  }\r\n\r\n  get #imageBottom() {\r\n    return this.placement === 'bottom' ? this.#images : '';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-card');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSCenterElement extends GSElement {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n      class=\"position-absolute top-50 start-50 translate-middle ${classMap(me.renderClass())}\">\r\n    ${me.renderTemplate()}<slot></slot></div>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-center');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenuElement class\r\n * @module components/GSMenuElement\r\n */\r\n\r\nimport { classMap, ifDefined, html, ref, createRef } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSMenuElement extends GSElement {\r\n\r\n    static properties = {\r\n        storage: {},\r\n        auto: { type: Boolean, reflect: true },\r\n        opened: { type: Boolean, reflect: true },\r\n        dark: { type: Boolean },\r\n        reverse: { type: Boolean },\r\n        offset: { type: Number },\r\n        data: { type: Array },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {},\r\n        title: {},\r\n        header: {},\r\n        color: {},\r\n        icon: {},\r\n        url: { default: '#' }\r\n    }\r\n\r\n    #menuRef = createRef();\r\n    #styleID = GSID.id;\r\n    #controller = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.offset = 0;\r\n        me.dynamicStyle(me.#styleID);\r\n        me.data = me.#proxify(me);\r\n        me.#controller = new GroupController(this);\r\n    }\r\n\r\n    onBusEvent(e) {\r\n       if (e.detail.owner != this) {\r\n            this.opened = false;\r\n       }\r\n     }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        if (changed.has('opened') && !this.opened) {\r\n            this.#closeSubmenus();\r\n        }\r\n    }\r\n\r\n    updated() {\r\n        this.#updatePosition();\r\n        if (this.opened) {\r\n            this.#controller.notify();\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<ul \r\n            ${ref(me.#menuRef)}\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            class=\"dropdown-menu ${classMap(me.renderClass())}\"\r\n            data-gs-class=\"${me.#styleID}\"\r\n            data-menu=\"true\"\r\n            @mouseover=\"${me.#onMouseOver}\"\r\n            @mouseleave=\"${me.#onMouseLeave}\"\r\n            @keydown=\"${me.#onKeyDown}\"\r\n            @click=\"${me.#onClick}\">\r\n            ${me.#items(me.data)}\r\n        </ul>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'submenu': me.dataset.submenu,\r\n            'dropdown-menu-dark': me.dark,\r\n            [me.#styleID]: true,\r\n            'show': me.opened,\r\n            'dropend': !me.reverse,\r\n            'dropstart': me.reverse,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    /**\r\n     * Show at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {HTMLElement} caller\r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n\r\n        const me = this;\r\n        // offset to render under the mouse,\r\n        // important for GSGrid for better UI experience\r\n        const offset = GSUtil.asNum(me.offset, 0);\r\n        let target = caller;\r\n\r\n        if (GSEvents.isMouseOrPointerEvent(x)) {\r\n            const e = x;\r\n            target = e.target;\r\n            y = e.clientY;\r\n            x = e.clientX;\r\n            let offset = GSDOM.offsetParent(me);\r\n            offset = offset ? offset.getBoundingClientRect() : null;\r\n            x = x - (offset?.left || 0);\r\n            y = y - (offset?.top || 0);\r\n        }\r\n\r\n        const cfg = { clientX: x - offset, clientY: y - offset, target: target };\r\n\r\n        requestAnimationFrame(() => {\r\n            const style = {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                left: '0px',\r\n                translate: `${cfg.clientX}px ${cfg.clientY}px`\r\n            };\r\n            const rule = me.dynamicStyle(me.#styleID);\r\n            Object.assign(rule.style, style);\r\n        });\r\n        me.open();\r\n\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    #items(root) {\r\n        const me = this;\r\n        return root.map(el => me.#item(el));\r\n    }\r\n\r\n    #item(el) {\r\n        const me = this;\r\n        const isSub = el.items?.length > 0;\r\n        if (isSub) return me.#renderSubmenu(el);\r\n        if (!(el.header || el.name)) return me.#renderDivider();\r\n        return el.header ? me.#renderHeader(el) : me.#renderMenu(el);\r\n    }\r\n\r\n    #renderHeader(el) {\r\n        return html`<li data-inert=\"true\"><h6 class=\"dropdown-header\">${this.#renderIcon(el)}${el.header}</h6></li>`;\r\n    }\r\n\r\n    #renderDivider() {\r\n        return html`<li data-inert=\"true\"><hr class=\"dropdown-divider\"></li>`;\r\n    }\r\n\r\n    #renderSubmenu(el) {\r\n        const me = this;\r\n        return html`<li>\r\n            <a class=\"dropdown-item dropdown-toggle\" data-toggle=\"true\" href=\"#\">\r\n                <div class=\"d-inline-block w-100\">${me.#renderIcon(el)}${el.name}</div>\r\n            </a>\r\n            <gs-menu auto \r\n                .data=${el.items} \r\n                ?dark=${me.dark} \r\n                ?reverse=\"${me.reverse}\" \r\n                language=\"${ifDefined(me.language)}\" \r\n                data-submenu=\"true\">\r\n            </gs-menu>\r\n        </li>`;\r\n    }\r\n\r\n    #renderIcon(el) {\r\n        return el.icon ? html`<gs-icon css=\"mx-1\" name=\"${el.icon}\"></gs-icon>` : '';\r\n    }\r\n\r\n    #renderMenu(el) {\r\n        return html`<li>\r\n                <gs-button css=\"dropdown-item shadow-none\" \r\n                    ${dataset(el, false)}\r\n                    url=\"${el.url}\"\r\n                    title=\"${el.name}\" \r\n                    language=\"${ifDefined(this.language)}\" \r\n                    icon=\"${ifDefined(el.icon)}\" \r\n                    text=\"${ifDefined(el.color)}\"\r\n                    data-gs-target=\"${ifDefined(el.target || 'self')}\"\r\n                    data-gs-action=\"${ifDefined(el.action)}\">\r\n                </gs-button></li>`;\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSMenuElement.options));\r\n    }\r\n\r\n    #closeSubmenus(menu) {\r\n        GSDOM.queryAll(this.renderRoot, 'gs-menu', false, false)\r\n            .filter(el => el != menu)\r\n            .forEach(el => el.close());\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.key) {\r\n            case 'Escape':\r\n                me.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        submenu?.close();\r\n        if (me.auto) me.close();\r\n    }\r\n\r\n    #onMouseLeave(e) {\r\n        GSEvents.prevent(e);\r\n        if (this.auto) this.close();\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        const submenu = me.#toSubmenu(e);\r\n        me.#closeSubmenus(submenu);\r\n        submenu?.open();\r\n    }\r\n\r\n    #toSubmenu(e) {\r\n        const menuItem = e.target.closest('li');\r\n        return menuItem?.querySelector('gs-menu');\r\n    }\r\n\r\n    #updatePosition() {\r\n        const me = this;\r\n        if (!me.opened) return;\r\n        const rule = me.dynamicStyle(me.#styleID);\r\n        if (me.isSubmenu) {\r\n            const opt = { translate: `0px -25px` };\r\n            if (me.reverse) {\r\n                opt.left = 'inherited';\r\n                opt.right = '100%';\r\n            } else {\r\n                opt.right = 'inherited';\r\n                opt.left = '100%';\r\n            }\r\n            Object.assign(rule.style, opt);\r\n        } else {\r\n            rule.style.translate = null;\r\n            const rect = me.#menu.getBoundingClientRect();\r\n            const offset = window.innerWidth - rect.right;\r\n            me.reverse = offset - 5 < 0;\r\n            if (me.reverse) rule.style.translate = `${offset - 2}px`;\r\n        }\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.dataset.submenu;\r\n    }\r\n\r\n    get #menu() {\r\n        return this.#menuRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-menu');\r\n    }\r\n}\r\n","/*GSContextElement\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContextElement class\r\n * @module components/GSContextElement\r\n */\r\n\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for context menu\r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSContextElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        target: {},\r\n        filter: {},\r\n        altContext: { type: Boolean, attribute: 'altcontext' },\r\n        disabled: { type: Boolean },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;        \r\n        me.auto = true;\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n            me.target = \"tbody\";\r\n            me.filter = \"[selected]\";\r\n            me.offset =\"4\";\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', me.close.bind(me));        \r\n        if (!me.slot) me.#attachTarget();\r\n    }\r\n    \r\n    onSlotInjected(slot) {\r\n        this.#attachTarget();\r\n    }\r\n\r\n    #attachTarget() {\r\n        const me = this;        \r\n        const owner = GSDOM.parent(me.assignedSlot || me);\r\n        let targets = me.target ? GSDOM.queryAll(owner, me.target) : [owner];\r\n        if (!targets.length) targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    }\r\n\r\n    #match(e) {\r\n        const me = this;\r\n        return e.composedPath().filter(el => el.matches)\r\n            .filter(el => el.matches(me.filter ? me.filter : me.target));\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        if (e.shiftKey && me.altContext) return;\r\n        const list = me.#match(e);\r\n        if (list.length === 0) return;\r\n        GSEvents.prevent(e);\r\n        me.popup(e);\r\n        return true;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    /**\r\n     * Show submenu at x/y position on the screen\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0, caller) {\r\n        return this.disabled ? false : super.popup(x, y, caller);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-context');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color, notEmpty } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\nexport class GSCompareElement extends GSElement {\r\n\r\n  static styles = css`.slider {\r\n         --gs-position : 50%;\r\n          left : var(--gs-position);\r\n          width: 8px;\r\n          height: 100%;\r\n          border-width: 1px;\r\n          cursor: w-resize;\r\n          border-color: darkgray;\r\n          border-style: solid;\r\n          background-color: lightgray;\r\n      }\r\n      .clipper {\r\n        --gs-position : 50%;\r\n        clip-path: inset(0px var(--gs-position) 0px 0px);\r\n      }\r\n    `;\r\n\r\n  static properties = {\r\n    background: { ...color },\r\n    width: { type: Number },\r\n    height: { type: Number },\r\n    before: { hasChanged: notEmpty },\r\n    after: { hasChanged: notEmpty },\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  #elRef = createRef();\r\n  #clipRef = createRef();\r\n  #slideRef = createRef();\r\n\r\n  #mouseController;\r\n  #elPosition;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.width = 0;\r\n    me.height = 0;\r\n    me.dynamicStyle(me.#styleID);\r\n    me.#mouseController = new ElementMoveController(me);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    this.#mouseController.attach(this.#splitter);\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n         dir=\"${ifDefined(me.direction)}\"\r\n         @loaded=\"${me.#onLoad}\" \r\n         @dblclick=\"${me.#onDoubleClick}\"\r\n         data-gs-class=\"${me.#styleID}\"\r\n         class=\"${classMap(me.renderClass())}\">\r\n      <div class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden\"><slot name=\"before\">${me.#before}</slot></div>\r\n      <div ${ref(me.#clipRef)} class=\"overflow-hidden position-absolute top-0 start-0 overflow-hidden clipper\"><slot name=\"after\">${me.#after}</slot></div>\r\n      <div ${ref(me.#slideRef)} class=\"slider position-absolute top-0><slot name=\"control\"></slot></div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      \"position-relative\": true,\r\n      \"user-select-none\": true,\r\n      \"d-contents\": me.isAuto,\r\n      \"h-100\": me.isAuto,\r\n      \"w-100\": me.isAuto,\r\n      \"overflow-hidden\": true,\r\n      [`bg-${me.background}`]: me.background,\r\n      [`${me.#styleID}`]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Handles resizing based on mouse move event\r\n   * @param {MouseEvent} e \r\n   */\r\n  onStartMove(e) {\r\n    this.#elPosition = this.#splitter.getBoundingClientRect();\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    const me = this;\r\n    const offset = me.#elPosition.left;\r\n    const width = me.#elPosition.width;\r\n    const pos = GSUtil.range(e.clientX - offset, 0, width);\r\n    const pct = (pos / width) * 100;\r\n    me.#update(pct);\r\n  }\r\n\r\n  get isAuto() {\r\n    return this.width == 0 || this.height == 0;\r\n  }\r\n\r\n  get isFixed() {\r\n    return !this.isAuto;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  get #before() {\r\n    return this.before ? html`<img @load=\"${this.#onLoad}\" src=\"${me.before}\"></img>` : '';\r\n  }\r\n\r\n  get #after() {\r\n    return this.after ? html`<img @load=\"${this.#onLoad}\" src=\"${me.after}\"></img>` : '';\r\n  }\r\n\r\n  get #isAuto() {\r\n    return this.width === 0 || this.height === 0;\r\n  }\r\n\r\n  get #splitter() {\r\n    return this.#elRef.value;\r\n  }\r\n\r\n  get #slider() {\r\n    return this.#slideRef.value;\r\n  }\r\n\r\n  get #clip() {\r\n    return this.#clipRef.value;\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const me = this;\r\n    if (me.#isAuto) {\r\n      const el = e.target;\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n    }\r\n  }\r\n\r\n  #onDoubleClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    me.#update();\r\n    me.#mouseController.reset();\r\n  }\r\n\r\n  #update(pct = 50) {\r\n    const me = this;\r\n    me.#clip.style.setProperty('--gs-position', `${100 - pct}%`);\r\n    me.#slider.style.setProperty('--gs-position', `${pct}%`);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-compare');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\n\r\n/**\r\n * Helper component to enable controller attachment to the GS WebComponent.\r\n * It is used to simplify and separate templates from logic.\r\n */\r\nexport class GSControllerElement extends GSElement {\r\n\r\n  static properties = {\r\n    module: {},\r\n    controller: {},\r\n  }\r\n\r\n  #clazz = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updated(changes) {\r\n    super.updated(changes);\r\n    const me = this;\r\n    if (me.isConnected && me.isValid) {\r\n      me.#initialize();\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return this.parentElement instanceof GSElement;\r\n  }\r\n\r\n  async #initialize() {\r\n\r\n    const me = this;\r\n    const host = me.parentElement;\r\n\r\n    if (me.#clazz) return;\r\n\r\n    let clazz = globalThis[me.controller];\r\n    if (!clazz && me.module) {\r\n      const url = GSLoader.normalizeURL(me.module);\r\n      const module = await import(url);\r\n      clazz = module[me.controller];\r\n    }\r\n\r\n    if (clazz) {\r\n      new clazz(host);\r\n      me.#clazz = clazz;\r\n      globalThis[me.controller] = clazz;\r\n    }\r\n\r\n  }\r\n\r\n  static {\r\n    this.define('gs-controller');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSCopyrightElement extends GSElement {\r\n\r\n  static properties = {\r\n    year: { reflect: true, type: Number },\r\n    company: { reflect: true },\r\n    url: { reflect: true },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    if (!(me.isCompany && me.isYear)) return '';\r\n    const year = new Date().getFullYear();\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"${classMap(me.renderClass())}\"><a target=\"_blank\" href=\"${me.url ? me.url : '#'}\"><small>&copy; ${me.company} ${me.year}. - ${year}.</small></a></div>`;\r\n  }\r\n\r\n  get isCompany() {\r\n    return GSUtil.isStringNonEmpty(this.company);\r\n  }\r\n\r\n  get isYear() {\r\n    return GSUtil.isStringNonEmpty(this.year);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-copyright');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSFunction } from '../base/GSFunction.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/verificator.mjs';\r\nimport { GSReadWriteRegistry } from '../data/ReadWriteRegistry.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for easier access to the GSReadWrite/GSTreeReader\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSDataHandler extends GSElement {\r\n\r\n    static properties = {\r\n        storage: { state: true },\r\n        src: { reflect: true },\r\n        action: { reflect: true },\r\n        mode: { reflect: true },\r\n        reader: { reflect: true },\r\n        writer: { reflect: true },\r\n        limit: { type: Number, reflect: true },\r\n        skip: { type: Number, reflect: true },\r\n        filter: { type: Array, reflect: true },\r\n        sort: { type: Array, reflect: true },\r\n        type: {},\r\n        autoload: { type: Boolean },\r\n        autorefresh: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    }\r\n\r\n    #iid = 0;\r\n    #config = null;\r\n    #handler = null;\r\n    #lifoReadRef = null;\r\n    #lifoWriteRef = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        me.autorefresh = 0;\r\n        me.autoload = false;\r\n        me.flat = true;\r\n        me.filter = [];\r\n        me.sort = [];\r\n        me.limit = 0;\r\n        me.skip = 0;\r\n        me.src = '';\r\n        me.type = 'remote';\r\n        me.mode = 'query';\r\n        me.reader = 'GET';\r\n        me.writer = 'POST';\r\n        if (me.#isInTable) {\r\n            me.slot = \"extra\";\r\n          }\r\n        if (!me.isGenerated && !me.id) throw new Error('Element ID is required attribute!');\r\n        GSItem.validate(me, me.tagName);\r\n    }\r\n    \r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.storage = me.storage || me.id;\r\n        const itemHolder = me.isGenerated && me.childElementCount === 0 ? me.parentComponent : me;\r\n        me.#config = GSItem.proxify(itemHolder, GSData.PROPERTIES);\r\n        me.#initLIFO(true);\r\n        me.#initLIFO(false);\r\n    }\r\n    \r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        me.#handler?.disable();\r\n        me.#handler?.removeProcessor(me);\r\n        me.#lifoReadRef = null;\r\n        me.#lifoWriteRef = null;\r\n        clearTimeout(me.#iid);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        const me = this;\r\n        me.#handler = GSReadWriteRegistry.newHandler(me.type, me.storage, false);\r\n        if (me.#config?.length > 0) me.#handler?.addProcessor(me);\r\n        me.#updateHandler(true);                \r\n    }\r\n\r\n    willUpdate(changed) {\r\n        super.willUpdate(changed);\r\n        const me = this;\r\n        me.#updateHandler();\r\n        if (changed.has('autorefresh')) me.schedule(me.autorefresh);\r\n    }\r\n\r\n    #updateHandler(first = false) {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.key = me.key;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.formatSort(me.sort);\r\n        me.#handler.filter = me.formatFilter(me.filter);\r\n        if (me.autoload) me.read();\r\n        if (first) {\r\n            me.#handler.enable();\r\n            // to prevent double read by this component and table\r\n            if (me.autoload) {\r\n                me.dataController?.read();\r\n            } \r\n        }\r\n    }\r\n\r\n    get isDebug() {\r\n        return this.dataset.gsDebug;\r\n    }\r\n\r\n    get handler() {\r\n        return this.#handler;\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    get isCached() {\r\n        return this.#handler?.type == 'cached';\r\n    }\r\n\r\n    set search(val) {\r\n        if (this.#handler) this.#handler.search = val;\r\n    }\r\n\r\n    get key() {\r\n        return this.#config.filter(o => o.key).map(o => o.name).pop() || null;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    formatFilter(val) {\r\n        val = this.#formated(val);\r\n        return Array.isArray(val) ? val : [];\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    formatSort(val) {\r\n        val = this.#formated(val);\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort || [];\r\n    }\r\n\r\n    schedule(time = 0) {\r\n        const me = this;\r\n        time = GSUtil.asNum(time) * 1000;\r\n        clearInterval(me.#iid);\r\n        if (time > 0) me.#iid = setInterval(() => {\r\n            me.read(me);\r\n        }, time);\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data, append = false) {\r\n        return this.#lifoWriteRef(data, append);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    /**\r\n     * Return list of all selected record id's\r\n     */\r\n    get selected() {\r\n        return this.#handler?.selected;\r\n    }\r\n\r\n    /**\r\n     * Store selected record ID\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    addSelected(val) {\r\n        return this.#handler?.addSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove selected record ID\r\n     * @param {*} val \r\n     */\r\n    removeSelected(val) {\r\n        return this.#handler?.removeSelected(val);\r\n    }\r\n\r\n    /**\r\n     * Remove all selections\r\n     */\r\n    clearSelected(data) {\r\n        return this.#handler?.clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onDataRead(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data Read: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onDataWrite(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data write: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    /**\r\n     * Process data after receive, before notifying \r\n     * @param {*} data \r\n     */\r\n    postRead(data) {\r\n        const me = this;\r\n        if (!Array.isArray(data)) data = [data];\r\n        data.forEach(r => {\r\n            me.#config.forEach(c => {\r\n                let val = r[c.name];\r\n                if (!GSUtil.isNull(val)) {\r\n                    val = GSData.format(c, val);\r\n                    r[c.name] = val;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onDataError(obj) {\r\n        if (this.isDebug) GSLog.log(this, 'Data error: ' + JSON.stringify(obj));\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #initLIFO(read = true) {\r\n        const me = this;\r\n        if (read) {\r\n            me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n        } else {\r\n            me.#lifoWriteRef = GSFunction.callOnceLifo(me.#lifoWriteRefCallback, me);\r\n        }\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO(true);\r\n        return me.#lifoCall(true);\r\n    }\r\n\r\n    #lifoWriteRefCallback(data, append) {\r\n        const me = this;\r\n        me.#initLIFO(false);\r\n        return me.#lifoCall(false, data, append);\r\n    }\r\n    \r\n    #lifoCall(read = true, data, append) {\r\n        const me = this;\r\n        me.#verifyHandler();        \r\n        if (read) return me.#handler?.read(me);        \r\n        if (!append) me.#handler.clear();\r\n        return me.#handler?.write(me, data);\r\n    }\r\n\r\n    #formated(val) {\r\n        return GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    get #isInTable() {\r\n        return this.parentComponent?.tagName === 'GS-TABLE';\r\n    }\r\n\r\n    static {\r\n        this.define('gs-data-handler');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { size, SizeTypes } from '../properties/size.mjs';\r\n\r\nexport class GSDialogElement extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n  static ALIGN = 'end';\r\n  static CANCEL = 'Cancel';\r\n  static CONFIRM = 'Ok';\r\n\r\n  static #STACK = [];\r\n\r\n  static styles = css`dialog {\r\n      --bs-modal-width: 500px;\r\n      width:var(--bs-modal-width);\r\n      outline:none;\r\n    }\r\n    dialog::backdrop {\r\n      backdrop-filter: blur(4px);\r\n      backdrop-filter: blur(var(--gs-backdrop-blur));      \r\n      background-color: var(--gs-backdrop-color);\r\n      display: var(--gs-backdrop-display);\r\n    }`;\r\n\r\n  static properties = {\r\n\r\n    standard: { reflect: true, type: Boolean },\r\n    opened: { reflect: true, type: Boolean },\r\n    cancelable: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    escapable: { reflect: true, type: Boolean },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    size: size,\r\n\r\n    title: { reflect: true },\r\n    message: { reflect: true },\r\n    cancelText: { reflect: true, attribute: 'text-cancel' },\r\n    confirmText: { reflect: true, attribute: 'text-confirm' },\r\n\r\n    minWidth: { reflect: true, type: Number, attribute: 'min-width' },\r\n    buttonAlign: { reflect: true, attribute: 'button-align' },\r\n\r\n    iconCancel: { reflect: true, attribute: 'icon-cancel' },\r\n    iconConfirm: { reflect: true, attribute: 'icon-confirm' },\r\n\r\n    colorCancel: { attribute: 'color-cancel' },\r\n    colorConfirm: { attribute: 'color-confirm' },\r\n\r\n    cssCancel: { attribute: 'css-cancel' },\r\n    cssConfirm: { attribute: 'css-confirm' },\r\n\r\n    cssTitle: { attribute: 'css-title' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    cssFooter: { attribute: 'css-footer' },\r\n    cssBody: { attribute: 'css-body' },\r\n    cssContent: { attribute: 'css-content' },\r\n\r\n  }\r\n\r\n  #pass = false;\r\n  #styleID = GSID.id;\r\n  #dialogRef = createRef();\r\n  #btnConfirmRef = createRef();\r\n  #btnCancelRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    const clazz = GSDialogElement;\r\n    me.opened = false;\r\n    me.standard = false;\r\n    me.cancelable = false;\r\n    me.closable = false;\r\n    me.escapable = false;\r\n    me.disabled = false;\r\n    me.shadow = false;\r\n    me.rounded = false;\r\n\r\n    me.minWidth = 0;\r\n    me.css = clazz.CSS;\r\n    me.cssTitle = clazz.TITLE_CSS;\r\n    me.cssHeader = clazz.HEADER_CSS;\r\n    me.buttonAlign = clazz.ALIGN;\r\n    me.cancelText = clazz.CANCEL;\r\n    me.confirmText = clazz.CONFIRM;\r\n    me.colorCancel = 'secondary';\r\n    me.colorConfirm = 'primary';\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialogElement.#updateStack();\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#pass = true;\r\n  }\r\n\r\n  _shouldUpdate(changed) {\r\n    const me = this;\r\n    return me.opened === true || me.#pass;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    const allowed = me.opened === true || me.#pass;\r\n    // initially hidden dialogs rendering are posponed\r\n    if (!allowed) {\r\n      GSUtil.timeout(1000).then(() => {\r\n        queueMicrotask(() => { \r\n          const allowed = me.opened === true || me.#pass;\r\n          if (!allowed) {\r\n            me.#pass = true;\r\n            if (me.isConnected) me.requestUpdate();\r\n          }\r\n        });          \r\n      });\r\n    }\r\n    return allowed;\r\n  }\r\n\r\n  updated(changed) {\r\n    super.updated(changed);\r\n    if (changed.has('opened')) {\r\n      this.#onOpenChanged();\r\n    }\r\n  }\r\n\r\n  #onOpenChanged() {\r\n    const me = this;\r\n    let state = null;\r\n    if (me.opened) {\r\n      GSDialogElement.#STACK.push(me);\r\n      state = 'opening';\r\n      if (me.standard) {\r\n        me.#dialog?.open();\r\n      } else {\r\n        me.#dialog?.showModal();\r\n      }\r\n      me.#focusable()?.focus();\r\n    } else {\r\n      state = 'closing';\r\n      if (me.isHashed) location.hash = '';\r\n      GSDialogElement.#STACK.pop();\r\n      me.#dialog?.close();\r\n    }\r\n    me.notify(true, false, state);\r\n  }\r\n\r\n  #renderConfirm() {\r\n    const me = this;\r\n    if (!me.closable) return '';\r\n    return html`<gs-button  ${ref(me.#btnConfirmRef)} \r\n      @click=\"${me.#onConfirm.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconConfirm)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      .disabled=\"${me.disabled}\"  \r\n      css=\"${ifDefined(me.cssConfirm)}\" \r\n      color=\"${ifDefined(me.colorConfirm)}\" \r\n      title=\"${me.confirmText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderCancel() {\r\n    const me = this;\r\n    if (!me.cancelable) return '';\r\n    return html`<gs-button ${ref(me.#btnCancelRef)}\r\n      @click=\"${me.#onCancel.bind(me)}\" \r\n      icon=\"${ifDefined(me.iconCancel)}\"\r\n      language=\"${ifDefined(me.language)}\"\r\n      css=\"${ifDefined(me.cssCancel)}\" \r\n      color=\"${ifDefined(me.colorCancel)}\" \r\n      title=\"${me.cancelText}\">\r\n      </gs-button>`;\r\n  }\r\n\r\n  #renderFooter() {\r\n    const me = this;\r\n    const isFooter = me.cancelable || me.closable;\r\n    if (!isFooter) return '';\r\n    return html`<div class=\"card-footer d-flex user-select-none justify-content-${me.buttonAlign} ${me.cssFooter}\">\r\n       <slot name=\"actions\"></slot>\r\n      ${me.#renderCancel()} &nbsp;${me.#renderConfirm()}\r\n      </div>`;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const css = {\r\n      card : true,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0      \r\n    }\r\n    me.cssContent?.match(/[^ ]+/g).forEach(v => css[v]=true);\r\n    return css;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = SizeTypes[me.size];\r\n    //...super.renderClass(),\r\n    const css = {\r\n      'dialog': true,\r\n      'p-0': true,\r\n      'border': me.bordered,\r\n      'border-0': !me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,      \r\n      [me.#styleID]: true,\r\n      [`modal-${size}`]: size ? true : false\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const styles = {\r\n      'min-width': me.minWidth > 0 ? `${me.minWidth}px` : undefined\r\n    };\r\n    me.dynamicStyle(me.#styleID, styles);\r\n    return html`\r\n        <dialog tabindex=\"-1\" ${ref(me.#dialogRef)} \r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @close=\"${me.#onCancel.bind(me)}\"\r\n            @cancel=\"${me.#onCancel.bind(me)}\"\r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @form=\"${me.#onForm.bind(me)}\"\r\n            @confirm=\"${me.#onConfirm.bind(me)}\"\r\n            @submit=\"${me.#onSubmit.bind(me)}\"\r\n            class=\"${classMap(me.renderClass())}\">\r\n            <div class=\"${classMap(me.#renderContent())}\">\r\n                <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n                  <div class=\"card-title ${me.cssTitle}\">\r\n                    <slot name=\"title\">${me.translate(me.title)}</slot>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card-body ${me.cssBody}\">\r\n                  <slot name=\"body\">\r\n                  ${me.translate(me.message)}\r\n                  ${me.renderTemplate()}\r\n                  </slot>\r\n                  </div>\r\n                  ${me.#renderFooter()}\r\n                  </div>\r\n                  <slot name=\"extra\"></slot>\r\n                  <div class=\"toast-container position-fixed\"></slot></div>\r\n                  </dialog>\r\n                  `;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.closable = closable;\r\n    me.cancelable = cancelable;\r\n    me.escapable = cancelable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('click-action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    return this.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    return this.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    index = GSUtil.asNum(index, 0);\r\n    const me = this;\r\n    me.forms?.forEach?.(f => { f.reset(); f.data = data; });\r\n    const tab = me.tab;\r\n    if (tab && index > -1) tab.index = index;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Retrun true if dialog is opened by hashbang.\r\n   * Used to clear the hashbang on close\r\n   */\r\n  get isHashed() {\r\n    return GSUtil.asBool(this.dataset.gsHashed);\r\n  }\r\n\r\n  get form() {\r\n    return this.query('gs-form', true, true);\r\n  }\r\n\r\n  get forms() {\r\n    return this.queryAll('gs-form', true, true);\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('gs-tab', true, true);\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.#dialogRef.value;\r\n  }\r\n\r\n  get #btnConfirm() {\r\n    return this.#btnConfirmRef.value;\r\n  }\r\n\r\n  get #btnCancel() {\r\n    return this.#btnCancelRef.value;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  #focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#btnCancel;\r\n    if (me.closable) return me.#btnConfirm;\r\n    return me;\r\n  }\r\n\r\n  async #onConfirm(e) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const ret = await Promise.all(me.forms?.map?.(form => form.submit()));\r\n    if (ret.indexOf(false) < 0) me.close();\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.close();\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle injected form events\r\n   * @param {*} e \r\n   */\r\n  #onForm(e) {\r\n    let sts = true;\r\n    const me = this;\r\n    const data = e.detail;\r\n    switch (data.type) {\r\n      case 'submit':\r\n        sts = me.emit('data', data.data, false, false, true);\r\n        if (!sts) GSEvents.prevent(e);\r\n        //me.opened = false;\r\n        break;\r\n      case 'valid':\r\n        me.disabled = data.data === false;\r\n        break;\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  #onSubmit(e) {\r\n    debugger;\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialogElement.#STACK = GSDialogElement.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs in a stack\r\n   */\r\n  static get size() {\r\n    return GSDialogElement.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialogElement.#updateStack();\r\n    const size = GSDialogElement.size;\r\n    return size === 0 ? null : GSDialogElement.#STACK[size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialogElement.#updateStack();\r\n    return Array.from(GSDialogElement.#STACK);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-dialog');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, unsafeHTML, html, ifDefined } from '../lib.mjs';\r\nimport { placement, PlacementTypes } from '../properties/placement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSDrawerElement extends GSElement {\r\n\r\n  static properties = {\r\n    autoclose: { reflect: true, type: Boolean },\r\n    closable: { reflect: true, type: Boolean },\r\n    backdrop: { reflect: true, type: Boolean },\r\n    expanded: { reflect: true, type: Boolean },\r\n    scroll: { reflect: true, type: Boolean },\r\n\r\n    min: { reflect: true, type: Number},\r\n    max: { reflect: true},\r\n    fingers: { reflect: true, type: Number},\r\n    placement: {...placement},\r\n    \r\n    transition: { reflect: true },\r\n    duration: { reflect: true, type: Number },\r\n\r\n    title: { reflect: true},\r\n\r\n    cssTitle: { reflect: true, attribute: \"css-title\"},\r\n    cssHead: { reflect: true, attribute: \"css-head\" },\r\n    cssBody: { reflect: true, attribute: \"css-body\" },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.placement = 'start';\r\n    me.cssTitle = 'fs-5';\r\n    me.transition = 'linear';\r\n    me.duration = 0.2;\r\n    me.min = 0;\r\n    me.max = 'auto';\r\n    me.fingers = 2;\r\n    me.on('mouseleave', me.#onLeave.bind(me));\r\n    me.on('mouseenter', me.#onEnter.bind(me));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`${unsafeHTML(me.#style)}\r\n    <div tabindex=\"-1\" dir=\"${ifDefined(me.direction)}\"\r\n     class=\"offcanvas overflow-hidden anime ${classMap(me.renderClass())}\">\r\n      ${me.#header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        ${me.renderTemplate()}\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>${me.#backdrop}`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': true,\r\n      'anime-open' : me.expanded,\r\n      'anime-close' : !me.expanded,\r\n      [`offcanvas-${me.placement}`]: me.placement,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #style() {\r\n    const me = this;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    return `<style>\r\n    .anime {\r\n      transition-property: ${pos} !important;\r\n      transition-duration: ${me.duration}s  !important;\r\n      transition-timing-function: ${me.transition} !important;\r\n    }\r\n    .anime-open {\r\n        ${pos} : ${me.max}${GSUtil.isNumber(me.max) ? 'px':''} !important;\r\n    }\r\n    .anime-close {\r\n      ${pos} : ${me.min}${GSUtil.isNumber(me.min) ? 'px':''} !important;\r\n    }    \r\n    </style>`;\r\n  }\r\n\r\n  get #backdrop() {\r\n    const me = this;\r\n    if (!me.backdrop) return '';\r\n    return html`<div class=\"offcanvas-backdrop fade ${me.expanded ? 'show' : 'invisible'}\" @click=\"${me.close}\"></div>`;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    return me.closable ? html`<button type=\"button\" class=\"btn-close text-reset\" @click=\"${me.close}\"></button>` : '';\r\n  }\r\n\r\n  get #title() {\r\n    const me = this;\r\n    return me.title ? html`<div class=\"offcanvas-title ${me.cssTitle}\">${me.translate(me.title)}</div>` : '';\r\n  }\r\n\r\n  get #header() {\r\n    const me = this;\r\n    return me.#hasHeader ? html`<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${me.#title}${me.#button}</slot></div>` : '';\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]', false, true);\r\n  }\r\n\r\n  get #hasHeader() {\r\n    return this.title || this.closable || this.#headSlot;\r\n  }\r\n\r\n  #notify(val) {\r\n    const me = this;\r\n    me.expanded = val == true;\r\n    me.notify();\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  open() {\r\n    this.#notify(true);\r\n  }\r\n\r\n  close() {\r\n    this.#notify(false);\r\n  }\r\n\r\n  toggle() {\r\n    this.#notify(!this.expanded);\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return !this.isVertical;\r\n  }\r\n\r\n  get isVertical() {\r\n    return PlacementTypes.isVertical(this.placement);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-drawer');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdownElement class\r\n * @module components/GSDropdownElement\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { cssMap } from '../directives/css-map.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSMenuElement } from './Menu.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSMenuElement}\r\n */\r\nexport class GSDropdownElement extends GSMenuElement {\r\n\r\n    static properties = {\r\n        icon: {},\r\n        text: {...color},\r\n        color: {...color},\r\n        size: {},\r\n        title: {},\r\n        tooltip: {},\r\n        group: {},\r\n        simple: {type:Boolean}\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.auto = true;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"dropdown\"  dir=\"${ifDefined(me.direction)}\">\r\n                ${me.#renderButton()}\r\n                ${super.renderUI()}\r\n            </div>`;\r\n    }\r\n\r\n    #buttonClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'btn': true,\r\n            [`btn-${me.color}`] : me.color ? true : false,\r\n            'dropdown-toggle': !me.simple,\r\n            'shadow-none' : true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    #renderButton() {\r\n        const me = this;\r\n        return html`<gs-link css=\"${cssMap(me.#buttonClass())}\"\r\n            url=\"#\"         \r\n            icon=\"${ifDefined(me.icon)}\"\r\n            text=\"${ifDefined(me.text)}\"\r\n            size=\"${ifDefined(me.size)}\"\r\n            title=\"${ifDefined(me.title)}\"\r\n            tooltip=\"${ifDefined(me.tooltip)}\"\r\n            @notify=\"${me.toggle}\">\r\n            </gs-link>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-dropdown');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html, unsafeHTML } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Safe email rendering to protect from spam bots.\r\n */\r\nexport class GSEmailElement extends GSElement {\r\n\r\n  static shadowRootOptions = { mode: 'closed' }\r\n\r\n  static style = css`.e-mail:before {\r\n    content: attr(data-website) \"\\0040\" attr(data-user);\r\n    unicode-bidi: bidi-override;\r\n    direction: rtl;\r\n    }`;\r\n\r\n  static properties = {\r\n    user: { reflect: true },\r\n    domain: { reflect: true },\r\n    dev: { type: Boolean }\r\n  }\r\n\r\n  #user;\r\n  #domain;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  willUpdate(changes) {\r\n    super.willUpdate(changes);\r\n    this.#updateUser();\r\n    this.#updateDomain()\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${unsafeHTML(this.#style)}<a @click=\"${this.#onClick}\" class=\"e-mail\" data-user=\"${this.#user}\" data-website=\"${this.#domain}\"  href=\"mailto://\"></a>`;\r\n  }\r\n\r\n  get #style() {\r\n    return '<style>.e-mail:before { content: attr(data-website) \"\\u0040\" attr(data-user); unicode-bidi: bidi-override; direction: rtl; }</style>';\r\n  }\r\n\r\n  get #url() {\r\n    return `mailto://${GSUtil.reverse(this.dataset.user)}@${GSUtil.reverse(this.dataset.domain)}`;\r\n  }\r\n\r\n  #updateUser() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.user) {\r\n      me.#user = dataset.user || GSUtil.reverse(me.user);\r\n      if (me.dev) dataset.user = me.#user;\r\n      me.user = '';\r\n    }\r\n  }\r\n\r\n  #updateDomain() {\r\n    const me = this;\r\n    const dataset = me.dataset;\r\n    if (me.domain) {\r\n      me.#domain = dataset.domain || GSUtil.reverse(me.domain);\r\n      if (me.dev) dataset.domain = me.#domain;\r\n      me.domain = '';\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.prevent(e);\r\n    window.location.href = me.#url;\r\n    //window.open(me.#url, '_blank');  \r\n  }\r\n\r\n  static {\r\n    this.define('gs-email');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref, templateContent } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSFormElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    disabled: { reflect: true, type: Boolean },\r\n\r\n    url: { reflect: true },\r\n    name: { reflect: true },\r\n    rel: { reflect: true },\r\n    acceptCharset: { reflect: true, attribute: 'accept-charset' },\r\n    autocapitalize: { reflect: true },\r\n    autocomplete: { reflect: true },\r\n\r\n    // default settings for FormGroup or gs-ext-* form elements\r\n    autocopy: { reflect: true, type: Boolean },\r\n    autofocus: { reflect: true, type: Boolean },\r\n    autoselect: { reflect: true, type: Boolean },\r\n    autovalidate: { reflect: true, type: Boolean },\r\n    autoreport: { reflect: true, type: Boolean },\r\n\r\n    action: { reflect: true },\r\n    enctype: { reflect: true },\r\n    method: { reflect: true },\r\n    novalidate: { reflect: true, type: Boolean },\r\n    target: { reflect: true },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #formRef = createRef();\r\n  #lastState = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n    this.disabled = false;\r\n    this.method = \"dialog\";\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<form is=\"gs-ext-form\"\r\n      ${ref(me.#formRef)}\r\n      id=\"${ifDefined(me.name)}\"\r\n      name=\"${ifDefined(me.name)}\"\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      \r\n      @blur=\"${me.#onBlur}\"\r\n      @change=\"${me.#onChange}\"\r\n      @invalid=\"${me.#onInvalid}\"\r\n      @submit=\"${me.submit}\"\r\n      @reset=\"${me.reset}\"\r\n      \r\n      method=\"${me.method}\"      \r\n      url=\"${ifDefined(me.url)}\"\r\n      \r\n      rel=\"${ifDefined(me.rel)}\"\r\n      acceptCharset=\"${ifDefined(me.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n      action=\"${ifDefined(me.action)}\"\r\n      enctype=\"${ifDefined(me.enctype)}\"\r\n      target=\"${ifDefined(me.target)}\"\r\n\r\n      ?novalidate=\"${me.novalidate}\">\r\n      ${templateContent(me.#elementTemplate)}\r\n      <slot></slot>\r\n    </form>`;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    me.dataController?.read();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {\r\n      if (GSUtil.isNull(me.data)) {\r\n        me.reset();\r\n      } else {\r\n        me.asJSON = Object.assign(me.asJSON, me.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  templateInjected() {\r\n    const me = this;\r\n  }\r\n\r\n  async reset(e) {\r\n    const me = this;\r\n    me.form?.reset();\r\n    me.data = {};\r\n    await me.dataController?.read(me.asJSON);\r\n  }\r\n\r\n  async submit(e) {\r\n    GSEvents.prevent(e, true, false, false);\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    if (!me.validate()) return;\r\n    const json = me.asJSON;\r\n    await me.dataController?.write(json);\r\n    const data = { type: 'submit', data: json, source: e, owner: me };\r\n    return me.emit('form', data, true, true, true);\r\n  }\r\n\r\n  get submitButton() {\r\n    return this.form?.submitButton;\r\n  }\r\n\r\n  get resetButton() {\r\n    return this.form?.resetButton;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  /**\r\n  * Overide native to pickup all form elements, including ones in shadow dom\r\n  */\r\n  get elements() {\r\n    return this.form?.elements || [];\r\n  }\r\n\r\n  /**\r\n   * Get all form attached native fields unwrapepd from GSWebComponents\r\n   */\r\n  get fields() {\r\n    return this.form?.fields || [];\r\n  }\r\n\r\n  /**\r\n   * Find all inputs by querying across inner shadow \r\n   */\r\n  get inputs() {\r\n    return this.form?.inputs || [];\r\n  }\r\n\r\n  get invalid() {\r\n    return this.form?.invalid;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.form?.isValid;\r\n  }\r\n\r\n  get asJSON() {\r\n    return this.form?.asJSON;\r\n  }\r\n\r\n  set asJSON(data) {\r\n    const me = this;\r\n    if (me.form) {\r\n      me.form.asJSON = data;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find field by name\r\n   * @param {*} name \r\n   * @returns \r\n   */\r\n  field(name) {\r\n    return this.form?.field(name);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.form?.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    return this.form?.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    const me = this;\r\n    let isValid = me.form?.validate();\r\n    isValid = me.onValidate(isValid);\r\n    me.#notify(isValid, e);\r\n    me.invalid[0]?.focus();\r\n    return isValid;\r\n  }\r\n\r\n  disable(all = false) {\r\n    this.form?.disable(all);\r\n  }\r\n\r\n  enable(all = false) {\r\n    this.form?.enable(all);\r\n  }\r\n\r\n  /**\r\n   * For DataController read callback\r\n   * \r\n   * @param {Array} data \r\n   */\r\n  onDataRead(data) {\r\n    const me = this;\r\n    if (Array.isArray(data)) {\r\n      data.forEach(o => me.asJSON = o);\r\n    } else {\r\n      me.asJSON = data;\r\n    }\r\n  }\r\n\r\n  onDataWrite(data) {\r\n\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  onValidate(sts) {\r\n\r\n    return sts;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(false, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    const me = this;\r\n    me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    //me.prevent(e, false, true, false);\r\n    me.#notify(me.isValid, e);\r\n  }\r\n\r\n  #notify(isValid = false, e) {\r\n    const me = this;\r\n    if (me.#lastState === isValid) return;\r\n    me.#lastState = isValid;\r\n    const data = { type: 'valid', data: isValid, owner: me, event: e };\r\n    me.emit('form', data, true, true);\r\n  }\r\n\r\n  get #elementTemplate() {\r\n    const tplEl = this.firstElementChild;\r\n    return GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, ref, html, unsafeHTML, ifDefined } from '../lib.mjs';\r\nimport { inputType, numGT0, numGE0, autocapitalize, autocorrect } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSFormGroupElement extends GSElement {\r\n\r\n  static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2';\r\n  static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n  static CSS_ICON = 'text-primary me-2 fs-5';\r\n  static ICON = 'info-circle-fill';\r\n\r\n  static formAssociated = true;\r\n\r\n  static #SELECTOPT = {\r\n    name: {},\r\n    value: {},\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  static properties = {\r\n    icon: { reflect: true },\r\n    layout: { reflect: true },\r\n    placement: { reflect: true },\r\n\r\n    label: { reflect: true },\r\n    description: { reflect: true },\r\n    placeholder: { reflect: true },\r\n\r\n    pattern: { reflect: true },\r\n    mask: { reflect: true },\r\n\r\n    form: { reflect: true },\r\n    wrap: { reflect: true },\r\n    spellcheck: { reflect: true },\r\n\r\n    type: { reflect: true, ...inputType },\r\n    name: { reflect: true },\r\n    list: { reflect: true },\r\n    accept: { reflect: true },\r\n    value: { noAccessor: true },\r\n\r\n    values: {},\r\n\r\n    lang: { reflect: true },\r\n    title: { reflect: true },\r\n    rows: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    cols: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    step: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    min: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    max: { type: Number, reflect: true, hasChanged: numGT0 },\r\n    minLength: { type: Number, reflect: true, hasChanged: numGE0 },\r\n    maxLength: { type: Number, reflect: true, hasChanged: numGT0 },\r\n\r\n    reverse: { reflect: true, type: Boolean },\r\n    selectable: { reflect: true, type: Boolean },\r\n\r\n    autoid: { type: Boolean, reflect: true },\r\n    autocopy: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n\r\n    autocapitalize: { ...autocapitalize, reflect: true },\r\n    autocorrect: { ...autocorrect, reflect: true },\r\n    autocomplete: { reflect: true },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    autoselect: { type: Boolean, reflect: true },\r\n    autovalidate: { type: Boolean, reflect: true },\r\n    autoreport: { type: Boolean, reflect: true },\r\n\r\n    disabled: { type: Boolean, reflect: true },\r\n    checked: { type: Boolean, reflect: true },\r\n    multiple: { type: Boolean, reflect: true },\r\n    reveal: { type: Boolean, reflect: true },\r\n    readonly: { type: Boolean, reflect: true },\r\n    required: { type: Boolean, reflect: true },\r\n\r\n    invalidMessage: { reflect: true, attribute: 'invalid-message' },\r\n\r\n    cellField: { reflect: true, attribute: 'cell-field' },\r\n    cellLabel: { reflect: true, attribute: 'cell-label' },\r\n    cssLabel: { reflect: true, attribute: 'css-label' },\r\n    cssField: { reflect: true, attribute: 'css-field' },\r\n\r\n    block: { reflect: true, type: Boolean },\r\n    beep: { reflect: true, type: Boolean },\r\n    timeout: { reflect: true, type: Number }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #inputRef = createRef();\r\n  #ouptutRef = createRef();\r\n  #patterns = [];\r\n  #options = [];\r\n  #internals = null;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#internals = this.attachInternals();\r\n    this.#validateAllowed();\r\n    this.dynamicStyle(this.#styleID);\r\n    this.rows = 0;\r\n    this.cols = 0;\r\n    this.type = 'text';\r\n    this.placement = 'top';\r\n    this.layout = 'horizontal';\r\n    this.invalidMessage = 'Invalid input',\r\n      this.icon = GSFormGroupElement.ICON;\r\n    this.cssLabel = GSFormGroupElement.CSS_LABEL;\r\n    this.cellLabel = GSFormGroupElement.CSS_LABEL_CELL;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const form = me.formComponent;\r\n    me.layout = GSAttr.get(form, 'layout', me.layout);\r\n\r\n    if (!me.form && form) me.form = form.name;\r\n\r\n    if (me.selectable) {\r\n      me.#options = GSItem.proxify(me, GSFormGroupElement.#SELECTOPT);\r\n    } else {\r\n      me.#patterns = GSItem.collect(me)\r\n        .filter(el => el.dataset.pattern)\r\n        .map(el => new RegExp(el.dataset.pattern));\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  updated(changed) {\r\n    const me = this;\r\n    //me.#onInput();\r\n    me.emit('input');\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    switch (me.layout) {\r\n      case 'floating': return me.#renderFloating();\r\n      case 'vertical': return me.#renderVertical();\r\n      default: return me.#renderHorizontal();\r\n    }\r\n  }\r\n\r\n\r\n  #renderFloating() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n       <div class=\"form-floating ${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n          ${me.#renderLabel()}\r\n       </div>\r\n       ${me.#renderInfo()}\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderVertical() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row ${classMap(me.renderClass())}\">\r\n      <div class=\"col-12 text-md-start ${me.cellLabel}\">\r\n          ${me.#renderLabel()}\r\n      </div>\r\n       <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n          ${me.#renderInput()}\r\n          ${me.#renderOutput()}\r\n       </div>\r\n       ${me.#renderInfo()}   \r\n    </div>      \r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderHorizontal() {\r\n    const me = this;\r\n    return html`\r\n    <div  dir=\"${ifDefined(me.direction)}\" class=\"row form-group ${classMap(me.renderClass())}\">    \r\n       <slot name=\"header\"></slot>\r\n       ${me.#renderLabelWrap()}\r\n       ${me.#renderField()}\r\n       ${me.#renderInfo()}\r\n       <slot name=\"footer\"></slot>\r\n    </div>\r\n    <slot></slot>`;\r\n  }\r\n\r\n  #renderLabel() {\r\n    const me = this;\r\n    return html`<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.translate(me.label)}</label>`;\r\n  }\r\n\r\n  #renderLabelWrap() {\r\n    const me = this;\r\n    return html`<div class=\" text-md-end ${me.cellLabel}\">${me.#renderLabel()}</div>`;\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.#isIcon ? html`<gs-icon size=\"5\" css=\"${GSFormGroupElement.CSS_ICON}}\" name=\"${me.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderTooltip() {\r\n    const me = this;\r\n    const tgt = me.#isIcon ? '@parent' : `[name='${me.name}']`;\r\n    return me.description ? html`<gs-tooltip local language=\"${ifDefined(me.language)}\" placement=\"${me.placement}\" title=\"${me.description}\" target=${ifDefined(tgt)}></gs-tooltip>` : '';\r\n  }\r\n\r\n  #renderInfo() {\r\n    const me = this;\r\n    const tooltip = me.#renderTooltip();\r\n    if (tooltip && me.#isIcon) return html`\r\n    <div class=\"col-auto\">\r\n       ${tooltip}\r\n       ${me.#renderIcon()}\r\n    </div>`;\r\n    return tooltip;\r\n  }\r\n\r\n  #renderField() {\r\n    const me = this;\r\n    return html`\r\n    <div class=\"${me.#cssCheck} ${me.#cellField}\">\r\n       <slot name=\"body\">${me.#renderInput()}${me.#renderOutput()}</slot>\r\n    </div>`;\r\n  }\r\n\r\n  #renderOutput() {\r\n    const me = this;\r\n    if (!me.isRange) return \"\";\r\n    return html`<span ${ref(me.#ouptutRef)} class=\"position-absolute px-1\">${me.value}</span>`;\r\n  }\r\n\r\n  #renderInput() {\r\n\r\n    const me = this;\r\n\r\n    const idattr = me.autoid ? me.name : undefined;\r\n    const val = me.isFieldset ? me.values.split(',') : me.value;\r\n\r\n    if (Array.isArray(val)) {\r\n      const wrap = me.dataset.radioLayout === 'vertical';\r\n      return val.map((it, i) => { return { v: it, id: `${me.name}_${i}` } })\r\n        .map((o, i) => me.#fieldSet(me.name + i, o.v, me.#inputHTML(o.id, me.name, o.v), wrap));\r\n    }\r\n\r\n    if (me.selectable) return me.#selectHTML(idattr, me.name, me.value);\r\n\r\n    if (me.#isTextArea) return me.#textArea(idattr, me.name, me.value);\r\n\r\n    return me.#inputHTML(idattr, me.name, me.value);\r\n  }\r\n\r\n  #fieldSet(id, val, fld, vertical = false) {\r\n    const me = this;\r\n    return vertical ?\r\n      html`<div class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></div>`\r\n      :\r\n      html`<span class=\"me-3\">${fld}<label for=\"${id}\" class=\"ms-1\">${me.translate(val)}</label></span>`;\r\n  }\r\n\r\n  #initStyle() {\r\n    const me = this;\r\n    const style = {\r\n      transform: me.reverse && me.isRange ? 'rotateY(180deg)' : ''\r\n    }\r\n    me.dynamicStyle(me.#styleID, style);\r\n  }\r\n\r\n  #renderOption(el) {\r\n    const title = el.name || el.innerText || el.value;\r\n    return html`<option ${dataset(el, false)} value=\"${el.value}\" ?selected=\"${el.selected}\">${title}</option>`;\r\n  }\r\n\r\n  #renderOptions() {\r\n    const me = this;\r\n    return me.#options.map(el => me.#renderOption(el));\r\n    /*\r\n    return repeat(me.#options, (el) => el.value, (el, index) => {\r\n      return html`<option value=\"${el.value}\">${el.name || el.innerText || el.value}</option>`\r\n    });\r\n    */\r\n  }\r\n\r\n  #selectHTML(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n\r\n    // not used \r\n    // id=${ifDefined(id)} \r\n    return html`<select ais=\"gs-ext-select\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n        \r\n            name=\"${name}\"             \r\n            form=\"${ifDefined(me.form)}\"\r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\">\r\n              ${me.#renderOptions()}\r\n            </select>`;\r\n  }\r\n\r\n  get #isTextArea() {\r\n    const me = this;\r\n    return (me.rows > 0 || me.cols > 0) && me.type === 'text';\r\n  }\r\n\r\n  get #listHTML() {\r\n    const me = this;\r\n    let list = '';\r\n    if (me.list) {\r\n      const root = me.parentComponent || me.parentElement;\r\n      const el = GSDOM.query(root, `datalist[id=\"${me.list}\"]`, true, true);\r\n      if (el) list = html`${unsafeHTML(el.outerHTML)}`;\r\n    }\r\n    return list;\r\n  }\r\n\r\n  get #isBlock() {\r\n    return this.block || this.formComponent?.block || false;\r\n  }\r\n\r\n  get #isBeep() {\r\n    return this.beep || this.formComponent?.beep || false;\r\n  }\r\n\r\n  #timeout() {\r\n    return this.timeout || this.formComponent?.timeout || 0;\r\n  }\r\n\r\n  #textArea(id, name, value) {\r\n    const me = this;\r\n    me.#initStyle();\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const title = me.title ? me.translate(me.title, false) : null;\r\n\r\n    // not used\r\n    // id=${ifDefined(id)}\r\n\r\n    return html`<textarea is=\"gs-ext-textarea\" \r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n            cols=\"${me.cols}\"\r\n            rows=\"${me.rows}\"\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            spellcheck=\"${ifDefined(me.spellcheck)}\" \r\n            wrap=\"${ifDefined(me.wrap)}\" \r\n            form=\"${ifDefined(me.form)}\" \r\n            name=\"${name}\" \r\n            value=\"${ifDefined(value)}\"\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            title=\"${ifDefined(title)}\"\r\n    \r\n            class=\"${me.#cssField} ${me.cssField} ${me.#styleID}\" \r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"\r\n\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"      \r\n      ></textarea>`;\r\n  }\r\n\r\n  #inputHTML(id, name, value) {\r\n    const me = this;\r\n    const type = me.isSwitch ? 'checkbox' : me.type;\r\n    let title = me.isRange ? me.defaultValue : me.title;\r\n    title = title ? me.translate(me.title, false) : title;\r\n\r\n    const placeholder = me.placeholder ? me.translate(me.placeholder, false) : null;\r\n    const description = me.description ? me.translate(me.description, false) : null;\r\n\r\n    me.#initStyle();\r\n\r\n    // this does not work, \"is\" must be set explicitly, or it will not initialize element properly\r\n    // is=\"${ifDefined(me.isDate ? '' : 'gs-ext-input')}\"\r\n\r\n    // not used\r\n    // id=${ifDefined(id)} \r\n\r\n    return html`<input is=\"gs-ext-input\"\r\n            ${ref(me.#inputRef)}\r\n            ${dataset(me, false)}\r\n\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            @change=\"${me.#onChange.bind(me)}\"\r\n            @blur=\"${me.#onBlur.bind(me)}\"\r\n            @invalid=\"${me.#onInvalid.bind(me)}\"\r\n        \r\n            name=\"${name}\" \r\n            type=\"${type}\" \r\n            form=\"${ifDefined(me.form)}\"\r\n            value=\"${ifDefined(value)}\"\r\n            title=\"${ifDefined(title)}\"\r\n\r\n\r\n            ?block=\"${me.#isBlock}\"\r\n            ?beep=\"${me.#isBeep}\"\r\n            timeout=\"${me.#timeout()}\"\r\n\r\n            class=\"${me.#cssField} ${me.cssField} ${me.mask ? 'font-monospace' : ''} ${me.#styleID}\" \r\n\r\n            placeholder=\"${ifDefined(placeholder)}\"\r\n            description=\"${ifDefined(description)}\"\r\n\r\n            .multipattern=\"${ifDefined(me.#patterns)}\"\r\n            mask=\"${ifDefined(me.mask)}\"\r\n            pattern=\"${ifDefined(me.pattern)}\"\r\n            list=\"${ifDefined(me.list)}\"\r\n            accept=\"${ifDefined(me.accept)}\"\r\n             \r\n            step=\"${ifDefined(me.step)}\"\r\n            min=\"${ifDefined(me.min)}\"\r\n            max=\"${ifDefined(me.max)}\"\r\n            lang=\"${ifDefined(me.lang)}\"\r\n\r\n            minlength=\"${ifDefined(me.minLength)}\"\r\n            maxlength=\"${ifDefined(me.maxLength)}\"\r\n\r\n            autocomplete=\"${ifDefined(me.autocomplete)}\"\r\n            autocorrect=\"${ifDefined(me.autocorrect)}\"\r\n            autocapitalize=\"${ifDefined(me.autocapitalize)}\"\r\n\r\n            ?autofocus=\"${me.autofocus || me.form?.autofocus}\"\r\n            ?autocopy=\"${me.autocopy || me.form?.autocopy}\"\r\n            ?autoselect=\"${me.autoselect || me.form?.autoselect}\"\r\n            ?autovalidate=\"${me.autovalidate || me.form?.autovalidate}\"\r\n            ?autoreport=\"${me.autoreport || me.form?.autoreport}\"            \r\n\r\n            ?multiple=\"${me.multiple}\"\r\n            ?checked=\"${me.checked}\"\r\n            ?readonly=\"${me.readonly}\"\r\n            ?required=\"${me.required}\"\r\n            ?disabled=\"${me.disabled}\"\r\n            ?reveal=\"${me.reveal}\"\r\n            >${me.#listHTML}`;\r\n  }\r\n\r\n  get #cssField() {\r\n    const me = this;\r\n    if (me.selectable) return 'form-select ms-0';\r\n    if (me.isCheckable) return 'form-check-input ms-0';\r\n    if (me.isRange) return 'form-range';\r\n    return 'form-control';\r\n  }\r\n\r\n  get #cssLabel() {\r\n    const me = this;\r\n    if (me.isCheckable) return 'form-check-label';\r\n    if (me.isFloating) return 'ms-2';\r\n    return me.isVertical ? 'form-label' : '';\r\n  }\r\n\r\n  get #cssCheck() {\r\n    const me = this;\r\n    if (me.isCheckable) {\r\n      //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      if (me.isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n      return me.isFieldset ? '' : 'form-check';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  get #cellField() {\r\n    const me = this;\r\n    const val = (me.isHorizontal) ? '6' : '11';\r\n    return me.cellField || `col-md-${val} col-sm-${val} col-xs-11`;\r\n  }\r\n\r\n  get #isIcon() {\r\n    return GSUtil.isStringNonEmpty(this.icon);\r\n  }\r\n\r\n  #onInput(e) {\r\n    if (!e.composed) this.emit(e.type, e);\r\n  }\r\n\r\n  #onBlur(e) {\r\n    if (!e.composed) this.emit(e.type, e, true, true);\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    const field = me.field;\r\n    me.#internals?.setFormValue(field.value);\r\n    me.#internals?.setValidity(field.validity, field.validationMessage, field);\r\n    if (!e.composed) me.emit(e.type, e, true, true);\r\n    me.requestUpdate();\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    if (!e.composed) this.emit('invalid', e, true, true);\r\n  }\r\n\r\n  #validateAllowed() {\r\n    const me = this;\r\n    const slots = ['header', 'body', 'footer'];\r\n    let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n    if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n    list = Array.from(me.children).filter(el => !el.slot);\r\n    const tagList = ['GS-ITEM', 'DATALIST'];\r\n    const allowed = GSDOM.isAllowed(list, tagList);\r\n    if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n  translate(value = '', sanitize) {\r\n    value = super.translate(value);\r\n    return sanitize ? GSUtil.sanitize(value) : value;\r\n  }\r\n\r\n  reset() {\r\n    this.field?.reset?.();\r\n  }\r\n\r\n  get isFloating() {\r\n    return this.layout === 'floating';\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.layout === 'horizontal';\r\n  }\r\n\r\n  get isVertical() {\r\n    return this.layout === 'vertical';\r\n  }\r\n\r\n  get isFieldset() {\r\n    const me = this;\r\n    return me.type === 'radio' && me.values?.includes(',');\r\n  }\r\n\r\n  get isCheckable() {\r\n    const me = this;\r\n    return me.isCheck || me.isRadio || me.isSwitch;\r\n  }\r\n\r\n  get isChecked() {\r\n    return this.field?.checked;\r\n  }\r\n\r\n  get isCheck() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get isRadio() {\r\n    return this.type === 'radio';\r\n  }\r\n\r\n  get isSwitch() {\r\n    return this.type === 'switch';\r\n  }\r\n\r\n  get isNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  get isRange() {\r\n    return this.type === 'range';\r\n  }\r\n\r\n  get isText() {\r\n    return this.type === 'text';\r\n  }\r\n\r\n  get isPassword() {\r\n    return this.type === 'passsword';\r\n  }\r\n\r\n  get isEmail() {\r\n    return this.type === 'email';\r\n  }\r\n\r\n  get isURL() {\r\n    return this.type === 'url';\r\n  }\r\n\r\n  get isFile() {\r\n    return this.type === 'file';\r\n  }\r\n\r\n  get isDate() {\r\n    return this.type === 'date';\r\n  }\r\n\r\n  get field() {\r\n    return this.#inputRef.value;\r\n  }\r\n\r\n  get value() {\r\n    const me = this;\r\n    return me.field ? me.field?.value : me.defaultValue;\r\n  }\r\n\r\n  set value(val) {\r\n    const me = this;\r\n    if (me.field) me.field.value = val;\r\n  }\r\n\r\n  get defaultValue() {\r\n    const me = this;\r\n    return me.field ? me.field.defaultValue : GSAttr.get(me, 'value', '');\r\n  }\r\n\r\n  set defaultValue(val) {\r\n    const me = this;\r\n    if (me.field) me.field.defaultValue = val;\r\n    GSAttr.set(me, 'value', val);\r\n\r\n  }\r\n\r\n  get validity() {\r\n    return this.#internals.validity;\r\n  }\r\n\r\n  get formComponent() {\r\n    return GSDOM.closest(this, 'gs-form');\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, render, unsafeHTML, templateContent, ifDefined, ref, repeat } from '../lib.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSFormGroupElement } from './FormGroup.mjs';\r\n\r\n// TODO: Make generic JSON to template generator, \r\n// then create string template and apply it to the lit html function.\r\n// Use all properties exstractor from super components and use type definition for bool proeprties.\r\n// Use xtype(#tagName) to define component type and use it to create component instance.\r\n\r\n/**\r\n * Component is responsible for auto-building gs-form and gs-form-group elements\r\n * from either JSON data or GS-ITEM elements.\r\n */\r\nexport class GSFormPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n  }\r\n\r\n  #formRef = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = this.#proxify;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const data = me.data || {};\r\n    // const tpl = me.#renderContent(); \r\n    const tpl = me.#renderTemplate();\r\n    return html`<gs-form ${ref(me.#formRef)}\r\n\r\n      storage=\"${ifDefined(data.storage)}\" \r\n      disabled=${ifDefined(data.disabled)}.\r\n      data=\"${ifDefined(data.data)}\"\r\n      \r\n      name=\"${ifDefined(data.name)}\"\r\n      rel=\"${ifDefined(data.rel)}\"\r\n      acceptCharset=\"${ifDefined(data.acceptCharset)}\"\r\n      autocapitalize=\"${ifDefined(data.autocapitalize)}\"\r\n      autocomplete=\"${ifDefined(data.autocomplete)}\"\r\n\r\n      action=\"${ifDefined(data.action)}\"\r\n      enctype=\"${ifDefined(data.enctype)}\"\r\n      method=\"${ifDefined(data.method)}\"\r\n      novalidate=\"${ifDefined(data.novalidate)}\"\r\n      target=\"${ifDefined(data.target)}\"\r\n\r\n      block=\"${ifDefined(data.block)}\"\r\n      beep=\"${ifDefined(data.beep)}\"\r\n      timeout=\"${ifDefined(data.timeout)}\"\r\n\r\n      flat=\"${ifDefined(data.flat)}\"\r\n      rtl=\"${ifDefined(data.rtl)}\"\r\n      hide=\"${ifDefined(data.hide)}\"\r\n      padding=\"${ifDefined(data.padding)}\"\r\n      margin=\"${ifDefined(data.margin)}\"\r\n      rounded=\"${ifDefined(data.rounded)}\"\r\n      bordered=\"${ifDefined(data.bordered)}\"\r\n      shadow=\"${ifDefined(data.shadow)}\"\r\n      keep=\"${ifDefined(data.keep)}\"\r\n      css=\"${ifDefined(data.css)}\"\r\n      theme=\"${ifDefined(data.theme)}\"\r\n      os=\"${ifDefined(data.os)}\"\r\n      browser=\"${ifDefined(data.browser)}\"\r\n      language=\"${ifDefined(data.language)}\"\r\n      environment=\"${ifDefined(data.environment)}\"\r\n      orientation=\"${ifDefined(data.orientation)}\"\r\n      protocol=\"${ifDefined(data.protocol)}\"\r\n      template=\"${ifDefined(data.template)}\"      \r\n      >${tpl}</gs-form>`;\r\n    //${templateContent(tpl)}\r\n    //${unsafeHTML(tpl.outerHTML)}\r\n  }\r\n\r\n  #renderTemplate() {\r\n    const tpl = document.createElement('template');\r\n    const content = this.#renderContent();\r\n    render(content, tpl.content);\r\n    return tpl;\r\n  }\r\n\r\n  #renderContent() {\r\n    const me = this;\r\n    const items = me.data?.items || [];\r\n    return html`${repeat(items, (item) => me.#renderFormGroup(me.data, item))}`;\r\n  }\r\n\r\n  // to generate into a template, all properties must be attributes, \r\n  // as properties are not transferable outside of template\r\n  #renderFormGroup(definition, item) {\r\n    return html`<gs-form-group \r\n      icon=\"${ifDefined(item.icon)}\"\r\n      layout=\"${ifDefined(item.layout)}\"\r\n      placement=\"${ifDefined(item.placement)}\"\r\n\r\n      label=\"${ifDefined(item.label)}\"\r\n      description=\"${ifDefined(item.description)}\"\r\n      placeholder=\"${ifDefined(item.placeholder)}\"\r\n      \r\n      pattern=\"${ifDefined(item.pattern)}\"\r\n      mask=\"${ifDefined(item.mask)}\"\r\n\r\n      form=\"${ifDefined(item.form)}\"\r\n      formaction=\"${ifDefined(item.formaction)}\"\r\n      formenctype=\"${ifDefined(item.formenctype)}\"\r\n      formmethod=\"${ifDefined(item.formmethod)}\"\r\n      formnovalidate=\"${ifDefined(item.formnovalidate)}\"\r\n      formtarget=\"${ifDefined(item.formtarget)}\"\r\n      wrap=\"${ifDefined(item.wrap)}\"\r\n      spellcheck=\"${ifDefined(item.spellcheck)}\"\r\n\r\n      type=\"${ifDefined(item.type)}\"\r\n      name=\"${ifDefined(item.name)}\"\r\n      list=\"${ifDefined(item.list)}\"\r\n      accept=\"${ifDefined(item.accept)}\"\r\n      value=\"${ifDefined(item.value)}\"\r\n      \r\n      lang=\"${ifDefined(item.lang)}\"\r\n      title=\"${ifDefined(item.title)}\"\r\n      cols=\"${ifDefined(item.cols)}\"\r\n      rows=\"${ifDefined(item.rows)}\"\r\n      step=\"${ifDefined(item.step)}\"\r\n      min=\"${ifDefined(item.min)}\"\r\n      max=\"${ifDefined(item.max)}\"\r\n      maxlength=\"${ifDefined(item.maxlength)}\"\r\n      minlength=\"${ifDefined(item.minlength)}\"\r\n\r\n      reverse=\"${ifDefined(item.reverse)}\"\r\n      selectable=\"${ifDefined(item.selectable)}\"\r\n\r\n      autoid=\"${ifDefined(item.autoid)}\"\r\n      autocopy=\"${ifDefined(item.autocopy)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      autocapitalize=\"${ifDefined(item.autocapitalize)}\"\r\n      autocorrect=\"${ifDefined(item.autocorrect)}\"\r\n      autocomplete=\"${ifDefined(item.autocomplete)}\"\r\n\r\n      autofocus=\"${ifDefined(item.autofocus)}\"\r\n      autoselect=\"${ifDefined(item.autoselect)}\"\r\n\r\n      disabled=\"${ifDefined(item.disabled)}\"\r\n      checked=\"${ifDefined(item.checked)}\"\r\n      multiple=\"${ifDefined(item.multiple)}\"\r\n      reveal=\"${ifDefined(item.reveal)}\"\r\n      readonly=\"${ifDefined(item.readonly)}\"\r\n      required=\"${ifDefined(item.required)}\"\r\n\r\n      invalidMessage=\"${ifDefined(item.invalidMessage)}\"  \r\n      \r\n      block=\"${ifDefined(item.block || definition.block)}\"\r\n      beep=\"${ifDefined(item.beep || definition.beep)}\"\r\n      timeout=\"${ifDefined(item.timeout || definition.timeout)}\"\r\n\r\n      flat=\"${ifDefined(item.flat)}\"\r\n      rtl=\"${ifDefined(item.rtl)}\"\r\n      hide=\"${ifDefined(item.hide)}\"\r\n      padding=\"${ifDefined(item.padding)}\"\r\n      margin=\"${ifDefined(item.margin)}\"\r\n      rounded=\"${ifDefined(item.rounded)}\"\r\n      bordered=\"${ifDefined(item.bordered)}\"\r\n      shadow=\"${ifDefined(item.shadow)}\"\r\n      keep=\"${ifDefined(item.keep)}\"\r\n      css=\"${ifDefined(item.css)}\"\r\n      theme=\"${ifDefined(item.theme)}\"\r\n      os=\"${ifDefined(item.os)}\"\r\n      browser=\"${ifDefined(item.browser)}\"\r\n      language=\"${ifDefined(item.language || definition.language)}\"\r\n      environment=\"${ifDefined(item.environment)}\"\r\n      orientation=\"${ifDefined(item.orientation)}\"\r\n      protocol=\"${ifDefined(item.protocol)}\"\r\n      template=\"${ifDefined(item.template)}\">\r\n      </gs-form-group>`;\r\n  }\r\n\r\n  get form() {\r\n    return this.#formRef.value;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onDataError(e) {\r\n    GSLog.error(this, e);\r\n  }\r\n\r\n  get #proxify() {\r\n    return GSItem.collect(this).map(el => GSAttr.proxify(el, GSFormGroupElement.properties));\r\n  }\r\n\r\n  static {\r\n    this.define('gs-form-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGroupElement class\r\n * @module components/GSGroupElement\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSAttributeHandler } from '../base/GSAttributeHandler.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { ElementNavigationController } from '../controllers/ElementNavigationController.mjs';\r\nimport { GroupController } from '../controllers/GroupController.mjs';\r\nimport { classMap, createRef, html, render, ifDefined, ref } from '../lib.mjs';\r\n\r\n/**\r\n * Renderer for grouped elements such as Buttons, Navs, Tabs and lists.\r\n * Components handles grouped elements navigation, selection and focus.\r\n * \r\n * @class\r\n * @extends { GSElement }\r\n */\r\nexport class GSGroupElement extends GSElement {\r\n\r\n  static properties = {\r\n    // multiple lists with single select across \r\n    group : {},\r\n    storage: {},    \r\n    circular: { type: Boolean },\r\n    multiple: { type: Boolean },\r\n    data: { type: Array },\r\n  }\r\n\r\n  #elRef = createRef();\r\n  #controller;\r\n  #controllerGroup;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.data = me.initData();\r\n    me.#controller = new ElementNavigationController(me);\r\n    me.#controllerGroup = new GroupController(me);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    // allow single setting at the container component to apply to the child\r\n    Array.from(me.children).forEach(it => {\r\n      GSAttributeHandler.clone(me, it, false);\r\n    });\r\n  }  \r\n\r\n\r\n  #prerender() {\r\n    const me = this;\r\n    me.queryAll('[generated]').forEach(el => el.remove());\r\n    if (me.data.length > 0) {\r\n      const items = me.renderItems();\r\n      const tpl = document.createElement('template');\r\n      render(items, tpl);\r\n      Array.of(...tpl.children).forEach(el => GSDOM.appendChild(me, el));\r\n    }\r\n  }\r\n  \r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    me.#controller.init();\r\n    me.#controller.attach(me.#elRef.value);\r\n    super.firstUpdated(changed);\r\n    //me.#prerender();\r\n  }  \r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.#prerender();\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#elRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      ${me.renderWrappedUI()}\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedUI(name) {\r\n    const me = this;\r\n    return html`<div \r\n      class=\"${classMap(me.renderWrappedClass())}\">\r\n      <slot name=\"${ifDefined(name)}\"></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    return {};\r\n  }\r\n\r\n  renderItems() {\r\n    return '';\r\n  }\r\n\r\n  initData() {\r\n    return this.settings(GSItem);\r\n  }\r\n\r\n  previous() {\r\n    this.#controller.previous();\r\n  }\r\n\r\n  next() {\r\n    this.#controller.next();\r\n  }\r\n\r\n  /**\r\n   * Reset focus / selection\r\n   */\r\n  reset() {\r\n    this.#controller.reset();\r\n  }\r\n\r\n  /**\r\n   * Element navigation filter where we can select if focused element is navigable\r\n   * @param {*} el \r\n   * @returns \r\n   */\r\n  isNavigable(el) {\r\n    return el?.tagName === this.childTagName;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  onBusEvent(e) {\r\n    let owner, item;  \r\n    ({owner, item} = e.detail);\r\n    if (owner != this) {\r\n      if (!item?.disabled || owner?.selectable) {\r\n        this.reset();\r\n      }\r\n    }\r\n  }\r\n  \r\n  onSelected(el) {\r\n    this.#controllerGroup.notify(el);\r\n  }\r\n\r\n  get focused() {\r\n    return this.#controller.focused;\r\n  }\r\n\r\n  get selected() {\r\n    return this.#controller.selected;\r\n  }\r\n\r\n  get childTagName() {\r\n    return '';\r\n  }\r\n    \r\n  get items() {\r\n    const me = this;\r\n    return me.queryAll(me.childTagName, true);\r\n  }\r\n\r\n  get generated() {\r\n    return this.items.filter(el => el.hasAttribute('generated'));\r\n  }\r\n\r\n  get active() {\r\n    const me = this;\r\n    const list = me.items.filter(el => el.hasAttribute('active'));\r\n    return me.multiple ? list : list.pop();\r\n  }\r\n\r\n  childByName(name = '', shadow = false) {\r\n    return this.query(`${this.childTagName}[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  settings(el) {\r\n    const tagName = customElements.getName(el)?.toUpperCase() || 'GS-ITEM';\r\n    const cfg = GSElement.allProperties(el);\r\n    const items = Array.from(this.children).filter(e => e.tagName === tagName ).map(el => GSAttr.proxify(el, cfg));\r\n    const active = items.filter(el => el.active);\r\n    active.forEach((el, idx) => el.active = idx === 0);\r\n    return items;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-group');\r\n  }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGT0 } from '../properties/index.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSIconElement extends GSElement {\r\n\r\n  static styles = css`\r\n    :host {\r\n      --gs-icon-super-color : cornflowerblue;\r\n      --gs-icon-content : '';\r\n    }\r\n    i::after {\r\n      top: -8px;\r\n      font-size: 0.7em;\r\n      position: relative;\r\n      content: var(--gs-icon-content);\r\n      content: attr(data-super);\r\n      color: var(--gs-icon-super-color);\r\n    }`;\r\n\r\n  static properties = {\r\n    name: { reflect: true, hasChanged: notEmpty },\r\n    size: { reflect: true, type: Number, hasChanged: numGT0 },\r\n    color: { reflect: true, ...color },\r\n    superColor: { attribute : 'super-color'},\r\n    super: { reflect: true },\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    _clicked: { attribute:false},\r\n    _hovered: { attribute:false},\r\n  }\r\n\r\n  #ref = createRef();\r\n  \r\n  constructor() {\r\n    super();\r\n    //this.flat = true;\r\n  }\r\n\r\n  /*\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    this.#embdeded = GSDOM.matches(this.parentComponent, '[icon]');\r\n  }\r\n  */\r\n\r\n  updated(changed) {\r\n    if (changed.has('_clicked')) {\r\n      if (this._clicked) this.#postAnimate();\r\n    } \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.setCSSProperty(':host', '--gs-icon-super-color', me.superColor);\r\n    return html`<i  ${ref(me.#ref)}\r\n       class=\"bi ${classMap(me.renderClass())}\"\r\n       data-super=\"${ifDefined(me.super)}\"\r\n       @click=\"${me.animate}\"\r\n       @mouseover=\"${me.#onMouseOver}\"\r\n       @mouseout=\"${me.#onMouseOut}\"></i>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      [`text-${me.color}`]: me.color,\r\n      [`bi-${me.name}`]: me.name,\r\n      'fs': me.size > 0,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.clickCss]: me._clicked,\r\n      [me.hoverCss]: me._hovered,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  async #postAnimate() {\r\n    const me = this;\r\n    const delay = GSUtil.asNum(me.dataset.delay, 1);\r\n    if (delay > 0) {\r\n      await GSUtil.timeout(delay * 1000);\r\n      me._clicked = false;\r\n    }    \r\n  }\r\n\r\n  #onMouseOver(e) {\r\n    this.hover(true);\r\n  }\r\n\r\n  #onMouseOut(e) {\r\n    this.hover(false);\r\n  }\r\n\r\n  animate() {\r\n    const me = this;\r\n    me._hovered = false;\r\n    me._clicked = true;\r\n  }\r\n\r\n  hover(sts = false) {\r\n    const me = this;\r\n    if (sts) {\r\n      me._clicked = false;\r\n    }\r\n    me._hovered = sts;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-icon');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { numGT0 } from '../properties/index.mjs';\r\n\r\nexport class GSIndentElement extends GSElement {\r\n\r\n  static styles = css`.indent {\r\n      --gs-indent : 10px;\r\n      margin-left: var(--gs-indent);\r\n      margin-right: var(--gs-indent);\r\n    }`;\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    size: { type: Number, hasChanged: numGT0 },\r\n    multiplier: { type: Number, hasChanged: numGT0 }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.size = 1;\r\n    me.multiplier = 10;\r\n  }\r\n\r\n  renderUI() {\r\n    const size = this.size * this.multiplier;\r\n    return html`<span class=\"indent\" style=\"--gs-indent: ${size}px;\"></span>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-indent');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty, numGE0 } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nconst numdef = { reflect: true, type: Number, hasChanged: numGE0 };\r\n\r\nexport class GSImageElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { hasChanged: notEmpty },\r\n    width: numdef,\r\n    height: numdef,\r\n    opacity: numdef,\r\n    invert: numdef,\r\n    grayscale: numdef,\r\n    brightness: numdef,\r\n    blur: numdef,\r\n    contrast: numdef,\r\n    saturate: numdef,\r\n    hue: numdef,\r\n    sepia: numdef,\r\n\r\n    alt: {},\r\n    loading: {}\r\n\r\n  }\r\n\r\n  #imageRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    this.#update();\r\n    return this.src;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<img ${ref(me.#imageRef)} \r\n            @load=\"${me.#onLoad}\"\r\n            src=\"${me.src}\" \r\n            alt=\"${me.alt}\" \r\n            loading=\"${ifDefined(me.loading)}\" \r\n            class=\"${me.#styleID}\" \r\n            data-gs-class=\"${me.#styleID}\">\r\n          </img>`;\r\n  }\r\n\r\n  get complete() {\r\n    return this.#imageRef.value?.complete || false;\r\n  }\r\n\r\n  get #dynamic() {\r\n    return this.dynamicStyle(this.#styleID).style;\r\n  }\r\n\r\n  #renderStyle() {\r\n    const me = this;\r\n    const filter = me.#buildFilter();\r\n    const css = {\r\n      width: me.width > 0 ? me.width : undefined,\r\n      height: me.height > 0 ? me.height : undefined,\r\n      filter: filter.length > 0 ? filter.join(' ') : ''\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #buildFilter() {\r\n    const me = this;\r\n    const o = [];\r\n\r\n    if (me.blur > 0) o.push(`blur(${me.blur}px)`);\r\n    if (me.invert > 0) o.push(`invert(${me.invert})`);\r\n    if (me.opacity > 0) o.push(`opacity(${me.opacity})`);\r\n    if (me.contrast > 0) o.push(`contrast(${me.contrast})`);\r\n    if (me.grayscale > 0) o.push(`grayscale(${me.grayscale})`);\r\n    if (me.brightness > 0) o.push(`brightness(${me.brightness})`);\r\n\r\n    if (me.hue > 0) o.push(`hue-rotate(${me.hue}deg)`);\r\n    if (me.sepia > 0) o.push(`sepia(${me.sepia}%)`);\r\n    if (me.saturate > 0) o.push(`saturate(${me.saturate}%)`);\r\n\r\n    return o;\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    const dynamic = me.#dynamic;\r\n    dynamic.filter = me.#buildFilter().join(' ').trim();\r\n    dynamic.width = me.width > 0 ? `${me.width}px` : '';\r\n    dynamic.height = me.height > 0 ? `${me.height}px` : '';\r\n  }\r\n\r\n  #onLoad(e) {\r\n    const el = e.target;\r\n    const me = this;\r\n    if (el) {\r\n      me.height = me.height || el.height;\r\n      me.width = me.width || el.width;\r\n      me.emit('loaded', { width: el.width, height: el.height, element: el }, true);\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-image');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayoutElement\r\n */\r\n\r\nimport { classMap, html, ifDefined, templateContent } from '../lib.mjs';\r\nimport { orientation, OrientationTypes } from '../properties/orientation.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSLayoutElement extends GSElement {\r\n\r\n    static properties = {\r\n        type: { ...orientation }\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        id : {},\r\n        type: {},\r\n        min: { type: Number },\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        resizable: { type: Boolean },\r\n        autofit: { type: Boolean },\r\n        vPos: { attribute: 'h-pos' },\r\n        hPos: { attribute: 'v-pos' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.autofit = true;  \r\n        me.#items(me).map((el, idx, els) => me.#dyncss(el, idx, els, 0));\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if ( this.autofit && GSDOM.root(this) === document.body) document.body.classList.add('vh-100');\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const list = me.#items(me).map((el, idx, els) => me.#build(el, idx, els));\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\" class=\"d-flex flex-fill w-100 h-100 ${classMap(me.renderClass())}\">${list}</div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const horizontal = OrientationTypes.isHorizontal(me.type);\r\n        return {\r\n            ...super.renderClass(),\r\n            'flex-column': horizontal\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #items(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el, GSLayoutElement.options));\r\n    }\r\n\r\n    #resizable(el) {\r\n        return el.size > 0 || el.min > 0 || el.max > 0 || el.resizable;\r\n    }\r\n\r\n    #dyncss(el, idx, els, lev = 0) {\r\n        const me = this;\r\n        me.#items(el.self).map((it, idx, items) => me.#dyncss(it, idx, items, lev+1));\r\n        if(me.#resizable(el)) me.dynamicStyle(`gsd-${lev}-${idx}`);\r\n    }\r\n\r\n    #build(el, idx, els, lev = 0) {\r\n\r\n        const me = this;\r\n        const type = el.self.parentElement.type || 'vertical';\r\n\r\n        const list = me.#items(el.self).map((it, idx, items) => me.#build(it, idx, items, lev+1));\r\n        \r\n        const min = el.min;\r\n        const max = el.max;\r\n        const template = el.template;\r\n        const tplEl = me.#elementTemplate(el);\r\n\r\n        const tc = `#${tplEl?.id}` !== template;\r\n\r\n        const dir = el.type || type || 'vertical';\r\n        const horizontal = OrientationTypes.isHorizontal(dir);\r\n        \r\n        const col = list.length > 0 && horizontal ? 'flex-column' : '';\r\n\r\n        const did = `gsd-${lev}-${idx}`;\r\n        const css = me.#panelCSS(el, col, did);\r\n        const style = me.#panelStyle(el, horizontal);\r\n        me.dynamicStyle(did, style);\r\n\r\n        const slot = el.name ? html`<slot name=\"${el.name}\"></slot>` : '';\r\n        const src = html`<div id=\"${ifDefined(el.id)}\" class=\"d-flex ${classMap(css)}\">\r\n            ${list}\r\n            ${templateContent(tplEl)}\r\n            ${template && tc ? html`<gs-template flat src=\"${template}\"></gs-template>` : ''}\r\n            ${slot}\r\n            </div>`;\r\n            // ${tc ? me.renderTemplate() : ''}\r\n            \r\n\r\n        if (!el.resizable) return src;\r\n\r\n        const resize = (idx === els.length - 1) ? 'end' : 'start';\r\n        const splitter = me.#splitter(min, max, type, resize);\r\n\r\n        if (idx === els.length - 1) return [splitter , src];\r\n        return [src, splitter];\r\n    }\r\n    \r\n    #elementTemplate(el) {\r\n        const tplEl = el.self.firstElementChild;\r\n        return  GSDOM.isTemplateElement(tplEl) ? tplEl : undefined;\r\n    }\r\n\r\n    #panelCSS(el, col, did) {\r\n\r\n        const resizable = this.#resizable(el);\r\n        const grow = resizable ? '' : 'flex-grow-1';\r\n\r\n        let vpos = el.vPos;\r\n        let hpos = el.hPos;\r\n\r\n        hpos = hpos ? `align-items-${hpos}` : '';\r\n        vpos = vpos ? `justify-content-${vpos}` : '';\r\n\r\n        const css = this.mapCSS(el.css, {\r\n            [did] : resizable,\r\n            [col] : col,\r\n            [grow] : grow,\r\n            [hpos] : hpos,\r\n            [vpos] : vpos\r\n        });\r\n    \r\n        return css;        \r\n    }\r\n\r\n    #panelStyle(el, horizontal) {\r\n        const min = el.size || el.min;\r\n        const max = el.max || el.size;\r\n        const style = {};\r\n        if (horizontal) {\r\n            style['min-height'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-height'] = max > 0 ? `${max}px` : undefined;\r\n        } else {\r\n            style['min-width'] = min > 0 ? `${min}px` : undefined;\r\n            style['max-width'] = max > 0 ? `${max}px` : undefined;\r\n        }\r\n        return style;        \r\n    }\r\n\r\n    #splitter(min, max, dir, resize) {\r\n        return html`<gs-splitter split=\"${dir}\" resize=\"${resize}\" min=\"${min}\" max=\"${max}\"></gs-splitter>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-layout');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\nimport { dataset } from '../directives/dataset.mjs';\r\n\r\nexport class GSLinklement extends GSElement {\r\n\r\n  static properties = {\r\n    clickCss: { attribute : 'click-css'},\r\n    hoverCss: { attribute : 'hover-css'},\r\n    autofocus: { type: Boolean },\r\n    disabled: { type: Boolean, reflect: true },\r\n    size: { type: Number },\r\n    text: { ...color },\r\n    color: { ...color },\r\n    url: {},\r\n    ping: {},\r\n    icon: {},\r\n    title: {},\r\n    tooltip: {},\r\n    target: {}\r\n  };\r\n\r\n  #refEl = createRef();\r\n  #refIco = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.url = '#';\r\n    // this.text = 'primary'; // do not set as default -> gs-dropdown\r\n    // this.target = '_blank'; // not used \r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n      <a ${ref(me.#refEl)}  \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        title=\"${ifDefined(me.translate(me.tooltip))}\" \r\n        href=\"${ifDefined(me.url)}\" \r\n        ping=\"${ifDefined(me.ping)}\" \r\n        target=\"${ifDefined(me.target)}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        ?disabled=${me.disabled} \r\n        @mouseover=\"${me.#onMouseOver}\"\r\n        @mouseout=\"${me.#onMouseOut}\"        \r\n        @click=\"${me.#onClick}\">\r\n        ${me.#first}${me.#second}\r\n        </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,      \r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [`text-${me.text}`]: me.text,\r\n      [`bg-${me.color}`]: me.color\r\n    }\r\n    return css;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get iconEl() {\r\n    return this.#refIco.value;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    me.iconEl?.animate();\r\n    me.notify();\r\n    if (me.url === '#' || GSUtil.isStringEmpty(me.url)) {\r\n      GSEvents.prevent(e);\r\n      me.handle(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #onMouseOver() {\r\n    this.iconEl?.hover(true);\r\n  }\r\n\r\n  #onMouseOut() {\r\n    this.iconEl?.hover(false);\r\n  }\r\n\r\n  get #title() {\r\n    return this.translate(this.title);\r\n  }\r\n\r\n  get #first() { return this.rtl ? this.#title : this.#iconHtml; };\r\n\r\n  get #second() { return this.rtl ? this.#iconHtml : this.#title; };\r\n\r\n  get #iconHtml() { return this.icon ? this.#renderIcon : html`<slot name=\"icon\"></slot>`; }\r\n\r\n  get #renderIcon() {\r\n    return  html`\r\n    <gs-icon css=\"mx-1\" ${ref(this.#refIco)} \r\n    name=\"${this.icon}\" \r\n    size=\"${this.size}\" \r\n    click-css=\"${ifDefined(this.clickCss)}\" \r\n    hover-css=\"${ifDefined(this.hoverCss)}\" \r\n    data-delay=\"1\"></gs-icon>`;\r\n  }\r\n\r\n  /**\r\n   * Generate clickable link\r\n   * @param {*} options \r\n   * @param {*} css \r\n   * @param {*} before \r\n   * @param {*} after \r\n   * @returns \r\n   */\r\n  static generate(options, css, before, after) {\r\n    const opt = options;\r\n    return html`<a class=\"${classMap(css)}\"\r\n        tabindex=\"0\"    \r\n        ${dataset(opt, true)}\r\n        part=\"${ifDefined(opt.part)}\"\r\n        tooltip=\"${ifDefined(opt.tooltip)}\"\r\n        href=\"${ifDefined(opt.url)}\">        \r\n        ${before || ''}\r\n        ${ifDefined(opt.title)}\r\n        <slot></slot> \r\n        ${after || ''}\r\n    </a>`;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-link');\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\n\r\nexport class GSListElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    selectable: { reflect: true, type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = false;\r\n    this.multiple = false;\r\n    this.selectable = false;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  renderClass() {\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group': true,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  reset() {\r\n    this.items.forEach(el => el.reset());\r\n    this.notify();\r\n  }\r\n\r\n  renderItems() {    \r\n    return this.data.map(o => {\r\n      return html`<gs-list-item generated\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\"></gs-list-item>`;\r\n    });\r\n  }\r\n\r\n  isNavigable(el) {\r\n    return super.isNavigable(el) && this.selectable;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-LIST-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSListItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    url: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    size: { type: Number },\r\n    autofocus: { type: Boolean, reflect: true },\r\n    disabled: { type: Boolean, reflect: true },\r\n    active: { type: Boolean, reflect: true }\r\n  }\r\n\r\n  #initial;\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.binded();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.#initial = this.active;\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === 'GS-LIST';\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n        // allow single setting at the gs-list to apply to the child\r\n        // GSAttributeHandler.clone(this.parentComponent, this, false);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<a  tabindex=\"0\" ${ref(me.#refEl)}\r\n       href=\"${ifDefined(me.href)}\" \r\n       target=\"${ifDefined(me.target)}\" \r\n       class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()} \r\n        ${me.#renderSecond()}\r\n        <slot>${me.renderTemplate()}</slot>\r\n      </a>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      [`fs-${me.size}`]: me.size > 0,\r\n      [me.#itemCSS] : true,\r\n      'active': me.active && me.isSelectable()\r\n    }\r\n    return me.mapCSS(me.#itemStatusCSS, css);\r\n  }\r\n\r\n  isSelectable() {\r\n    return !GSUtil.asBool(this.disabled) || GSUtil.asBool(this.parentComponent.selectable);\r\n  }\r\n\r\n  #renderIcon() {\r\n    const me = this;\r\n    return me.icon ? html`<gs-icon name=\"${me.icon}\" size=\"${me.size}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  #renderText() {\r\n    return this.title ? html`<span>${this.translate(this.title)}</span>` : html`<slot name=\"title\"></slot>`;\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.rtl ? this.#renderText() : this.#renderIcon();\r\n  }\r\n\r\n  #renderSecond() {\r\n    return this.rtl ? this.#renderIcon() : this.#renderText();\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || this.#initial || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get href() {\r\n    return this.url ? this.url : '#';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #inactiveCSS() {\r\n    return this.parentComponent.dataset?.cssInactive || '';\r\n  }\r\n\r\n  get #itemCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #itemStatusCSS() {\r\n    return this.active && this.isSelectable() ? this.#activeCSS : this.#inactiveCSS;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-list-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * For debugging purposes for floating element such as popup, popover, menus... \r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_view/Coordinate_systems\r\n */\r\nexport class GSMouseElement extends GSElement {\r\n\r\n  static properties = {\r\n    pageX: { type: Number },\r\n    pageY: { type: Number },\r\n    screenX: { type: Number },\r\n    screenY: { type: Number },\r\n    clientX: { type: Number },\r\n    clientY: { type: Number },       \r\n    offsetX: { type: Number },       \r\n    offsetY : { type: Number }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.attachEvent(window, 'mousemove', this.#onMouse.bind(this));\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    Offset(${me.offsetX}, ${me.offsetY}) \r\n    Viewport(${me.clientX}, ${me.clientY}) \r\n    Page(${me.pageX}, ${me.pageY}) \r\n    Screen(${me.screenX}, ${me.screenY})`;\r\n  }\r\n\r\n  #onMouse(e) {\r\n    const me = this;\r\n    me.offsetX = e.offsetX;\r\n    me.offsetY = e.offsetY;\r\n    me.clientX = e.clientX;\r\n    me.clientY = e.clientY;\r\n    me.pageX = e.pageX;\r\n    me.pageY = e.pageY;\r\n    me.screenX = e.screenX;\r\n    me.screenY = e.screenY;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-mouse');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, css, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\n/**\r\n * This component allow moving contained elements acroos UI\r\n */\r\nexport class GSMovableElement extends GSElement {\r\n\r\n  static styles = css`\r\n  :host {\r\n      --gs-width : inherited;\r\n      --gs-height : inherited;\r\n      --gs-min-width: inherited;\r\n      --gs-max-width: inherited;\r\n      --gs-min-height: inherited;\r\n      --gs-max-height: inherited;\r\n  }\r\n  .gs-movable {\r\n    left: var(--mouse-x) !important;\r\n    top: var(--mouse-y) !important;\r\n   }`;\r\n\r\n  static properties = {\r\n    shadow: { type: Boolean},\r\n    border: { type: Boolean},\r\n    color: { reflect: true, ...color }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n  #refEl = createRef();\r\n  #enabled = false;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.dynamicStyle(me.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    const root = document.documentElement;\r\n    me.attachEvent(root, 'mousemove', me.#onMove.bind(me));\r\n    me.attachEvent(root, 'mousedown', me.#onMouseDown.bind(me));\r\n    me.attachEvent(root, 'mouseup', me.#onMouseUp.bind(me));\r\n  }\r\n\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {cursor: 'move'});\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div ${ref(me.#refEl)} \r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\"\r\n      @mousedown=\"${() => me.#enabled = true}\"\r\n      @mouseup=\"${() => me.#enabled = false}\">\r\n      <slot></slot>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'gs-movable' : true,\r\n      [me.#styleID]: true,\r\n      'position-absolute' : true,\r\n      'border' : me.border,\r\n      'shadow-sm' : me.shadow,\r\n      [`text-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  #updateCursor(move) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {'user-select': move ? 'none' : ''});\r\n  }\r\n\r\n  #onMove(e) {\r\n    if (this.#enabled) {\r\n      const style = this.#refEl.value.style;\r\n      style?.setProperty('--mouse-x', e.clientX + \"px\");\r\n      style?.setProperty('--mouse-y', e.clientY + \"px\");\r\n    }\r\n  }\r\n\r\n  #onMouseDown(e) {\r\n    this.#updateCursor(true);\r\n  }\r\n\r\n  #onMouseUp(e) {\r\n    this.#updateCursor(false);\r\n  }\r\n\r\n\r\n  static {\r\n    this.define('gs-movable');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined } from '../lib.mjs';\r\nimport { GSGroupElement } from './Group.mjs';\r\nimport { PlacementTypes, nav, placement } from '../properties/index.mjs';\r\n\r\nexport class GSNavElement extends GSGroupElement {\r\n\r\n  static properties = {\r\n    type: nav,\r\n    placement: placement,\r\n    vertical: { type: Boolean }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.circular = true;\r\n    this.multiple = false;\r\n    this.type = 'pills';\r\n    this.placement = 'start';\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.query('gs-nav-item', false, true);\r\n  }\r\n  \r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const isBefore = PlacementTypes.isBefore(me.placement);\r\n    const isTab = me.type === 'tabs';\r\n    const css = {\r\n      'nav': true,\r\n      [`nav-${me.type}`]: me.type,\r\n      'flex-column': me.vertical,\r\n      'border-bottom-0': me.vertical,\r\n      'border-end': isTab && isBefore && me.vertical,\r\n      'border-start': isTab && !isBefore && me.vertical,\r\n      [`justify-content-${me.placement}`]: !me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  /**\r\n   * Render items based on data propprty (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    return this.data.map(o => {\r\n      return html`<gs-nav-item generated\r\n        .active=\"${o.active === true}\"\r\n        .autofocus=\"${o.autofocus === true}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\" \r\n        href=\"${ifDefined(o.href)}\" \r\n        target=\"${ifDefined(o.target)}\" \r\n        title=\"${ifDefined(o.title)}\">\r\n        </gs-nav-item>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when child element focused\r\n   * @param {*} el \r\n   */\r\n  onFocused(el) {\r\n    // el?.click();\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-NAV-ITEM';\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, ifDefined, html, createRef, ref } from '../lib.mjs';\r\nimport { NavTypes, PlacementTypes, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSNavItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    target: {},\r\n    title: {},\r\n    icon: {},\r\n    disabled: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    active: { type: Boolean, reflect: true },\r\n    tooltip: {}, // Add tooltip property\r\n    badge: { type: Boolean },\r\n    badgeColor: {...color},\r\n    badgeValue: { }\r\n  }\r\n\r\n  #refEl = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.badgeColor = 'danger';\r\n    this.badgeValue = '!';\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n  \r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    if (this.autofocus && !this.disabled) this.focus();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div class=\"nav-item position-relative ${classMap(me.renderClass())}\">${me.#button}${me.#badgeUI}</div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    return this.mapCSS(this.#itemsCSS, super.renderClass());\r\n  }\r\n\r\n  reset() {\r\n    this.active = this.autofocus || false;\r\n  }\r\n\r\n  click() {\r\n    this.#refEl.value?.click();\r\n  }\r\n\r\n  focus() {\r\n    requestAnimationFrame(() => this.#refEl.value?.focus());\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-NAV';\r\n  }\r\n\r\n  get isNav() {\r\n    return true;\r\n  }\r\n\r\n  get vertical() {\r\n    return this.parentComponent.vertical || false;\r\n  }\r\n\r\n  get placement() {\r\n    return this.parentComponent.placement;\r\n  }\r\n\r\n  get url() {\r\n    return this.href && this.target ? this.href : '#';\r\n  }\r\n\r\n  get #title() {\r\n    return html`<slot>${this.translate(this.title)}</slot>`;\r\n  }\r\n\r\n  get #icon() {\r\n    return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n  }\r\n\r\n  get #first() {\r\n    return this.rtl ? this.#title : this.#icon;\r\n  }\r\n\r\n  get #second() {\r\n    return this.rtl ? this.#icon : this.#title;\r\n  }\r\n\r\n  get #button() {\r\n    const me = this;\r\n    let obj = me.mapCSS(me.#buttonCSS, {});\r\n    if (me.active) obj = me.mapCSS(me.#buildCSS + ' ' + me.#activeCSS, obj);\r\n    return html`<a tabindex=\"0\" type=\"button\" role=\"nav\" \r\n     ${ref(me.#refEl)}\r\n     class=\"nav-link ${classMap(obj)}\"\r\n     href=\"${ifDefined(me.url)}\" \r\n     target=\"${ifDefined(me.target)}\"\r\n     title=\"${ifDefined(me.tooltip)}\"> \r\n        ${me.#first} \r\n        ${me.#second}\r\n      </a>`;\r\n  }\r\n\r\n  get #badgeUI() {\r\n    const me = this;\r\n    if (!me.badge) return '';\r\n    const css = {\r\n      'top-0' : true,\r\n      'end-0' : true,\r\n      'translate-middle-y' : true,\r\n      [`text-bg-${me.badgeColor}`]: me.badgeColor,\r\n    };\r\n    return html`<span class=\"badge rounded-pill position-absolute ${classMap(css)}\">${me.badgeValue}</span>`;\r\n  }\r\n\r\n  get #itemsCSS() {\r\n    return this.parentComponent.dataset?.cssItem || '';\r\n  }\r\n\r\n  get #buttonCSS() {\r\n    return this.parentComponent.dataset?.cssButton || '';\r\n  }\r\n\r\n  get #activeCSS() {\r\n    return this.parentComponent.dataset?.cssActive || '';\r\n  }\r\n\r\n  get #navType() {\r\n    return NavTypes.indexOf(this.parentComponent.type);\r\n  }\r\n\r\n  // fiix for shadowed DOM, parent class=\"nav nav-pills..\" \r\n  // do not cross shadow dom, so item elements does not see CSS\r\n  // we have to simulate\r\n  get #buildCSS() {\r\n    const isVertical = this.vertical;\r\n    const isBefore = PlacementTypes.isBefore(this.placement);\r\n    switch (this.#navType) {\r\n      // pills\r\n      case 1: return 'rounded text-bg-primary';\r\n      // tabs\r\n      case 2:\r\n        if (isVertical) {\r\n          if (isBefore) {\r\n            return 'shadow-none border border-end-0';\r\n          } else {\r\n            return 'shadow-none border border-start-0';\r\n          }\r\n        }\r\n        return 'shadow-none border border-bottom-0';\r\n      // underline\r\n      case 3: return 'shadow-none border-bottom border-3 fw-medium';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-nav-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { svg, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSOverlayElement extends GSElement {\r\n\r\n    static properties = {\r\n        color: {},\r\n        target: {},\r\n        autoremove: { type: Boolean },\r\n        opened: { type: Boolean },\r\n        opacity: { type: Number },\r\n        padding: { type: Number },\r\n        radius: { type: Number },\r\n    }\r\n\r\n    #styleID = GSID.id;\r\n    #styleID2 = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.color = 'rgb(0,0,0)';\r\n        this.color = '#000';\r\n        this.opacity = 0.7;\r\n        this.padding = 1;\r\n        this.radius = 6;\r\n        this.dynamicStyle(this.#styleID);\r\n        this.dynamicStyle(this.#styleID2);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.attachEvent(window, 'resize', () => me.requestUpdate());\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        if (!me.opened) return '';\r\n        const path = me.#path;\r\n        return path ? html`<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:space=\"preserve\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\" preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 ${window.innerWidth} ${window.innerHeight}\"\r\n            class=\"gs-overlay gs-overlay-animated ${me.#styleID}\"\r\n            @click=\"${me.reset.bind(me)}\">\r\n            ${path}\r\n        </svg>` : '';\r\n    }\r\n\r\n    async firstUpdated(changed) {\r\n        const me = this;\r\n        const opt = {\r\n            fillRule: \"evenodd\",\r\n            clipRule: \"evenodd\",\r\n            strokeLinejoin: \"round\",\r\n            strokeMiterlimit: \"2\",\r\n            zIndex: \"10000\",\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    open() {\r\n        this.opened = true;\r\n    }\r\n\r\n    close() {\r\n        this.opened = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.opened = !this.opened;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    get #path() {\r\n        const me = this;\r\n        const el = GSDOM.query(me.target);\r\n        if (!me.target) return '';\r\n        const pathStr = me.#createSVGPathString(el);\r\n        const opt = { fill: me.color, opacity: me.opacity, pointerEvents: 'auto', cursor: 'auto' };\r\n        me.dynamicStyle(me.#styleID2, opt);\r\n        return svg`<path class=\"${me.#styleID2}\"  d=\"${pathStr}\"></path>`;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n\r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n\r\n        const rect = target.getBoundingClientRect();\r\n\r\n        const padding = me.padding;\r\n        const radius = me.radius;\r\n\r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n\r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n\r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n\r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n\r\n        const val = `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n            M${highlightBoxX},${highlightBoxY} \r\n            h${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n            v${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n            h-${highlightBoxWidth} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n            v-${highlightBoxHeight} \r\n            a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;\r\n        return val.replace(/[\\t\\n]/g, ' ');\r\n    }\r\n\r\n    static {\r\n        this.define('gs-overlay');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, map, range, ref } from '../lib.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { size, SizeTypes } from '../properties/index.mjs';\r\n\r\nexport class GSPagerElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    size: { ...size },\r\n    first: { type: Boolean },\r\n    last: { type: Boolean },\r\n    next: { type: Boolean },\r\n    previous: { type: Boolean },\r\n    pages: { type: Number },\r\n\r\n    labelFirst: { attribute: 'label-first' },\r\n    labelLast: { attribute: 'label-last' },\r\n    labelNext: { attribute: 'label-next' },\r\n    labelPrevious: { attribute: 'label-previous' },\r\n\r\n    cssItem: { attribute: 'css-item' },\r\n\r\n  }\r\n\r\n  #ref = createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.pages = 5;\r\n    me.labelFirst = '&laquo;';\r\n    me.labelLast = '&raquo;';\r\n    me.labelNext = '&rsaquo;';\r\n    me.labelPrevious = '&lsaquo;';\r\n    if (me.#isInTable) {\r\n      me.slot = \"extra\";\r\n    }\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const half = Math.floor((me.pages - 1) / 2);\r\n    const page = me.dataController?.page || 0;\r\n    const start = page - half < 1 ? 1 : page - half;\r\n    const end = page > 0 ? page + half : me.pages;\r\n\r\n    return html`<nav \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        @click=\"${me.#onClick}\"\r\n        @keyup=\"${me.#onKeyUp}\"\r\n        @keydown=\"${me.#onKeyDown}\">\r\n        <ul ${ref(me.#ref)} class=\"${classMap(me.renderClass())}\">\r\n        ${me.#renderFirst()}\r\n        ${me.#renderPrevious()}\r\n        ${map(range(start, end + 1), (i) => me.#renderItem(i, '', '', i  === page))}\r\n        ${me.#renderNext()}\r\n        ${me.#renderLast()}\r\n        </ul></nav>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const size = me.size ? SizeTypes[me.size] || me.size : '';\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'pagination': true,\r\n      [`pagination-${size}`]: size,\r\n\r\n    }\r\n    return css;\r\n  }\r\n\r\n  updated() {\r\n    const target = this.#ref.value;\r\n    if (target && this.isFocused) {\r\n      target.querySelector('.active > a')?.focus();\r\n    }\r\n  }\r\n\r\n  onDataRead() {\r\n    this.requestUpdate();\r\n  }\r\n\r\n  #renderFirst() {\r\n    return this.first ? this.#renderItem(this.labelFirst, 'first', 'First page') : '';\r\n  }\r\n\r\n  #renderLast() {\r\n    return this.last ? this.#renderItem(this.labelLast, 'last', 'Last page') : '';\r\n  }\r\n\r\n  #renderPrevious() {\r\n    return this.previous ? this.#renderItem(this.labelPrevious, 'previous', 'Previous page') : '';\r\n  }\r\n\r\n  #renderNext() {\r\n    return this.next ? this.#renderItem(this.labelNext, 'next', 'Next page') : '';\r\n  }\r\n\r\n  #renderItem(text = '', name = '', title = '', active = false) {\r\n    const me = this;\r\n    text = GSUtil.decodeHTMLEntities(text);\r\n    return html`<li class=\"page-item ${active ? 'active' : ''}\">\r\n              <a class=\"page-link ${this.cssItem}\" \r\n                 name=\"${name}\" \r\n                 title=\"${me.translate(title)}\" \r\n                 href=\"#\">${me.translate(text)}</a>\r\n            </li>`;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const el = this.#toTarget(e, 'a');\r\n    if (!el) return;\r\n\r\n    const ctrl = me.dataController;\r\n    if (!ctrl) return;\r\n\r\n    const val = el.name || el.text;\r\n    me.emit(val, el);\r\n    \r\n    switch (val) {\r\n      case 'first':\r\n        return ctrl.firstPage();\r\n      case 'last':\r\n        return ctrl.lastPage();\r\n      case 'next':\r\n        return ctrl.nextPage();\r\n      case 'previous':\r\n        return ctrl.prevPage();\r\n    }\r\n\r\n    ctrl.page = val;\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const current = this.#toTarget(e, 'li');\r\n    let el = null;\r\n    switch (e.code) {\r\n      case 'ArrowLeft':\r\n        el = current?.previousElementSibling;\r\n        break;\r\n      case 'ArrowRight':\r\n        el = current?.nextElementSibling;\r\n        break;\r\n    }\r\n    el = el?.querySelector('a');\r\n    el?.focus();\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') {\r\n      this.#toTarget(e, 'a')?.click();\r\n    }\r\n  }\r\n\r\n  #toTarget(e, name) {\r\n    const el = e.target.closest(name) || e.target;\r\n    return el.tagName === name.toUpperCase() ? el : undefined;\r\n  }\r\n\r\n  get #isInTable() {\r\n    return this.parentComponent?.tagName === 'GS-TABLE';\r\n  }\r\n  \r\n  static {\r\n    this.define('gs-pagination');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement, position } from '../properties/index.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSPopper } from \"../base/GSPopper.mjs\";\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopupElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    position: { ...position },\r\n    trigger: {},\r\n    target: {},\r\n    autoclose: { type: Boolean },\r\n    autofocus: { type: Boolean },\r\n    opened: { type: Boolean },\r\n    hPos: { type: Number, attribute: 'h-pos' },\r\n    vPos: { type: Number, attribute: 'v-pos' },\r\n    wMin: { type: Number, attribute: 'w-min' },\r\n    wMax: { type: Number, attribute: 'w-max' },\r\n    hMin: { type: Number, attribute: 'h-min' },\r\n    hMax: { type: Number, attribute: 'h-max' },\r\n\r\n  }\r\n\r\n  #caller = null;\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.autofocus = true;\r\n    this.autoclose = true;\r\n    this.trigger = 'click';\r\n    this.position = 'absolute';\r\n    this.placement = 'bottom';\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachTarget(); // Fixed typo: #attachTaraget -> #attachTarget\r\n    me.attachEvent(window, 'resize', me.close.bind(me));\r\n    me.on('mouseleave', me.#onAuto.bind(me));\r\n  }\r\n\r\n  firstUpdated(changedProperties) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#resize();\r\n      me.#reposition();\r\n    });\r\n    super.firstUpdated();\r\n  }\r\n\r\n  updated() {\r\n    const me = this;\r\n    me.#reposition();\r\n    if (me.autofocus) me.focus();\r\n    me.notify();\r\n    me.#postPopup();\r\n  }\r\n\r\n  willUpdate(changedProperties) {\r\n    if (changedProperties.has('opened')) {\r\n      this.#postPopup();\r\n    }\r\n    return super.willUpdate(changedProperties); \r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div \r\n      ${ref(me.#panelRef)}\r\n      dir=\"${ifDefined(me.direction)}\"\r\n      class=\"fade ${classMap(me.renderClass())}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      @keydown=\"${me.#onKeyDown}\">\r\n      ${me.renderTemplate()}\r\n      <slot></slot>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'show': me.opened,\r\n      //'d-none' : !me.opened,\r\n      [me.#styleID]: true,\r\n      [`position-${me.position}`]: me.position,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  focus() {\r\n    this.query('[tabindex], input, select, textarea, button, a', true)?.focus();\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Show popup at x/y position on the screen\r\n   * @param {Number} x \r\n   * @param {Number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const obj = {\r\n      top: '0px',\r\n      left: '0px',\r\n      translate: `${x}px ${y}px`\r\n    };\r\n    me.#resize(obj);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      case 'Escape':\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    //if (!me.opened) return;\r\n    if (me.vPos || me.hPos) {\r\n      const opt = {\r\n        top: '0px',\r\n        left: '0px',\r\n        translate: `${me.hPos}px ${me.vPos}px`\r\n      };\r\n      const rule = me.dynamicStyle(me.#styleID);\r\n      Object.assign(rule.style, opt);\r\n    } else if (me.target) {\r\n      let target = GSDOM.query(document.documentElement, me.target);\r\n      target = target.renderRoot?.firstElementChild || target;\r\n      GSPopper.popupFixed(me.placement, me.#panel, target);\r\n    }\r\n\r\n  }\r\n\r\n  #resize(obj = {}) {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n    if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n    if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n    if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n    Object.assign(rule.style, obj);\r\n  }\r\n\r\n  #onPopup(e) {\r\n    const me = this;\r\n    me.#caller = e;\r\n    if (e instanceof Event) {\r\n      GSEvents.prevent(e);\r\n      me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n    }\r\n\r\n    if (me.placement) {\r\n      GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n      me.opened = true;\r\n      return;\r\n    }\r\n\r\n    let x = e.clientX, y = e.clientY;\r\n    const rect = me.#panel.getBoundingClientRect();\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #postPopup() {\r\n    const me = this;\r\n    const rule = me.dynamicStyle(me.#styleID);\r\n    Object.assign(rule.style, {display: me.opened ? '' : 'none'}); \r\n  }\r\n\r\n  #attachTarget() { // Fixed typo: #attachTaraget -> #attachTarget\r\n    const me = this;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    me.trigger.split(' ').forEach(evt => {\r\n      targets.forEach(target => me.attachEvent(target, evt, me.#onPopup.bind(me)));\r\n    });\r\n  }\r\n\r\n  #onAuto(e) {\r\n    if (this.autoclose) this.close();\r\n  }\r\n\r\n  get #panel() {\r\n    return this.#panelRef.value;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-popup');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSPopoverElement extends GSElement { // Fixed typo: GSPopoverlement -> GSPopoverElement\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    target: {},\r\n    trigger: {},\r\n    title: {},\r\n    content: {},\r\n    opened: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    // added to the GSCacheStyle\r\n    //this.style.position = 'fixed';\r\n    this.placement = 'top';\r\n    this.trigger = 'hover';\r\n    this.content = '';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowID);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n  \r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const head = me.title ? html`<div class=\"popover-header ${me.cssHead}\">${me.translate(me.title)}</div>` : '';\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n        dir=\"${ifDefined(me.direction)}\"\r\n        data-popper-placement=\"${me.placement}\"\r\n        class=\"${classMap(me.renderClass())}\" \r\n        data-gs-class=\"${me.#styleID}\" \r\n        role=\"tooltip\">\r\n        <div ${ref(me.#arrowRef)} \r\n          class=\"popover-arrow ${me.#arrowID}\" \r\n          data-gs-class=\"${me.#arrowID}\">\r\n        </div>\r\n        ${head}\r\n        <div class=\"popover-body\">\r\n          ${me.renderTemplate()}\r\n          ${me.content}\r\n          <slot></slot>\r\n        </div>\r\n    </div>            \r\n    `;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'popover': true,\r\n      'bs-popover-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  get isFocusTrigger() {\r\n    return this.trigger.includes('focus');\r\n  }\r\n\r\n  get isHoverTrigger() {\r\n    return this.trigger.includes('hover');\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return GSDOM.query(document.body, me.target);\r\n    }\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const source = me.#panel;\r\n    if (!source) return;\r\n    if (me.opened) {\r\n      GSPopper.popupAbsolute(me.placement, source, me.#ref, me.#arrow);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, {top:'-1000px', left:'-1000px'});\r\n    }\r\n  }\r\n\r\n  // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n  #attachEvents() {\r\n\r\n    const me = this;\r\n    const el = me.#ref;\r\n\r\n    if (me.isHoverTrigger) {\r\n      GSEvents.attach(me, el, 'mouseover', me.open.bind(me));\r\n      GSEvents.attach(me, el, 'mouseleave', me.close.bind(me));\r\n    }\r\n\r\n    if (me.isFocusTrigger) {\r\n      GSEvents.attach(me, el, 'click', me.#onFocus.bind(me));\r\n      GSEvents.attach(me, me.#panel, 'mouseleave', me.close.bind(me));\r\n      GSEvents.attach(me, window, 'click', me.close.bind(me));\r\n    }\r\n\r\n  }\r\n\r\n  #onFocus(e) {\r\n    GSEvents.prevent(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-popover');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, classMap, ifDefined } from '../lib.mjs';\r\nimport { literalTemplate } from '../directives/literal.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSProgressElement extends GSElement {\r\n\r\n  static properties = {\r\n    min: { reflect: true, type: Number },\r\n    max: { reflect: true, type: Number },\r\n    step: { reflect: true, type: Number },\r\n    value: { reflect: true, type: Number },\r\n    label: { reflect: true }\r\n  }\r\n\r\n  #styleID = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.min = 0;\r\n    this.step = 1;\r\n    this.max = 100;\r\n    this.value = 0;\r\n    this.styles = { width: '0%' };\r\n    this.dynamicStyle(this.#styleID);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'progress-bar' : true,\r\n      [me.#styleID] : true\r\n    }\r\n    return css;\r\n  }  \r\n\r\n  renderUI() {\r\n    const me = this;\r\n    me.#updateStyle();\r\n    const obj = {min :me.min, max:me.max, step:me.step, value:me.value, percentage:me.percentage};\r\n    return html`\r\n    <div class=\"progress\" @keydown=\"${me.#onKeySelect}\" dir=\"${ifDefined(me.direction)}\">\r\n        <div class=\"${classMap(me.renderClass())}\" \r\n             \r\n             role=\"progressbar\"\r\n             tabindex=\"0\">\r\n             ${literalTemplate(me.label, obj)}\r\n        </div>\r\n    </div>    \r\n    `;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    const me = this;\r\n    if (changed.has('value')) {\r\n      let val = me.step + changed.get('value');\r\n      val = me.#update(val, val);\r\n      changed.set('value', val);\r\n    }\r\n  }\r\n\r\n  updated(changed) {\r\n    if (changed.has('value')) {\r\n      this.notify();\r\n    }\r\n  }\r\n\r\n  increase(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value + val, me.value);\r\n    return true;\r\n  }\r\n\r\n  decrease(val) {\r\n    const me = this;\r\n    val = GSUtil.isNumber(val) ? val : me.step;\r\n    me.value = me.#update(me.value - val, me.value);\r\n    return true;\r\n  }\r\n\r\n  get percentage() {\r\n    const me = this;\r\n    return Math.trunc((me.value / me.max) * 100);\r\n  }\r\n\r\n  #updateStyle() {\r\n    const me = this;\r\n    me.styles.width = `${me.percentage}%`;\r\n    me.dynamicStyle(me.#styleID, me.styles);\r\n  }\r\n\r\n  #update(val, old = 0) {\r\n    val = GSUtil.asNum(val, GSUtil.asNum(old));\r\n    const me = this;\r\n    if (val > me.max) val = me.max;\r\n    if (val < me.min) val = me.min;\r\n    return val;\r\n  }\r\n\r\n  #onKeySelect(e) {\r\n    const me = this;\r\n    switch (e.code) {\r\n      case 'ArrowUp' :\r\n      case 'ArrowRight' :\r\n          return me.increase();\r\n      case 'ArrowLeft' :\r\n      case 'ArrowDown' :\r\n         return me.decrease();\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-progress');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/index.mjs';\r\n\r\nexport class GSSpinnerElement extends GSElement {\r\n\r\n    static styles = css`.spinner-border { border: var(--bs-spinner-border-width) solid currentcolor; border-right-color: transparent; }`;\r\n\r\n    static properties = {\r\n        color: { ...color, reflect: true },\r\n        small: { type: Boolean, reflect: true },\r\n        pulsar: { type: Boolean }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\" role=\"status\"></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"spinner-border\": !me.pulsar,\r\n            \"spinner-grow\": me.pulsar,\r\n            [`text-${me.color}`]: me.color,\r\n            [`spinner-border-sm`]: !me.pulsar && me.small,\r\n            [`spinner-grow-sm`]: me.pulsar && me.small,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-spinner');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitterElement class\r\n * @module components/GSSplitterElement\r\n */\r\n\r\nimport { classMap, createRef, ref, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSCSSMap } from '../base/GSCSSMap.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { notEmpty, numGT0, placement } from '../properties/index.mjs';\r\nimport { ElementMoveController } from '../controllers/ElementMoveController.mjs';\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport class GSSplitterElement extends GSElement {\r\n\r\n    static properties = {\r\n        // Check if splitter use vertical or horizontal splitting\r\n        split: { reflect: true },\r\n        // start|end|top|bottom\r\n        resize: { ...placement, hasChanged: notEmpty },\r\n        size: { type: Number, hasChanged: numGT0 }\r\n    }\r\n\r\n    #cursor = 0;\r\n    #styleID = GSID.id;\r\n    #styleTGT = GSID.id;\r\n    #elRef = createRef();\r\n    #mouseController;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.size = 8;\r\n        me.resize = 'start';\r\n        me.dynamicStyle(me.#styleID);\r\n        me.#load();\r\n        me.#mouseController = new ElementMoveController(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        //this.dynamicStyle(this.#styleTGT, null, true);\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        super.firstUpdated(changed);\r\n        const me = this;\r\n        me.#mouseController.attach(me.#splitter);\r\n        //const shadow = GSDOM.root(me.target) instanceof ShadowRoot;\r\n        //me.dynamicStyle(me.#styleTGT, {}, !shadow);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#elRef)} \r\n            @dblclick=\"${me.#onDoubleClick}\"\r\n            data-gs-class=\"${me.#styleID}\" \r\n            class=\"${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'splitter': true,\r\n            [me.#styleID]: true\r\n        }\r\n        return css;\r\n    }\r\n\r\n    updated(changedProperties) {\r\n        const me = this;\r\n        me.#cssUpdate();\r\n    }\r\n\r\n    /**\r\n    * Lock UI for mouse events to enable resizing over embedded iframes\r\n    * @param {MouseEvent} e \r\n    */\r\n    onStartMove(e) {\r\n        const me = this;\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', { start: true });\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    onMouseMove(e) {\r\n        const me = this;\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Save last position and unlock mouse UI events when resizing finished\r\n     * @param {*} e \r\n     */\r\n    onEndMove(e) {\r\n        const me = this;\r\n        me.#save();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', { stop: true });\r\n    }\r\n\r\n    /**\r\n    * Check if splitter use vertical or hotizontal splitting\r\n    * @returns {Boolean}\r\n    */\r\n    get isVertical() {\r\n        return this.split === 'vertical';\r\n    }\r\n\r\n    get isHorizontal() {\r\n        return !this.isVertical;\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display', 'none')).pop();\r\n        }\r\n        el.classList?.add(me.#styleTGT);\r\n        return el;\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.#elRef.value;\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        return this.target.style;\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        if (!me.id) return;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n\r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n                .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, true);\r\n                    el.dataset.gsSplitter = true;\r\n                });\r\n        } else {\r\n            me.#lockable\r\n                .filter(el => el.dataset.gsSplitter)\r\n                .forEach(el => {\r\n                    GSDOM.toggleClass(el, cls, false);\r\n                    delete el.dataset.gsSplitter;\r\n                });\r\n        }\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { width: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {Number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { height: dx + \"px\" }, true);\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        const key = me.isVertical ? 'width' : 'height';\r\n        me.#styleDynamic[key] = val + \"px\";\r\n        //me.dynamicStyle(me.#styleTGT, { [key]: val + \"px\" }, true);\r\n    }\r\n\r\n    #cssUpdate() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        const opt = {\r\n            [size]: `${me.size}px`,\r\n            [full]: '100%',\r\n            'border-width': '1px',\r\n            cursor: cursor,\r\n            'border-color': 'darkgray',\r\n            'border-style': 'solid',\r\n            'background-color': 'lightgray',\r\n        };\r\n        me.dynamicStyle(me.#styleID, opt);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-splitter');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNavItemElement } from '../NavItem.mjs';\r\n\r\n/**\r\n * Tab component (gs-tab), generate selectable/switchable tabs on a panel\r\n */\r\nexport class GSTabItemElement extends GSNavItemElement {\r\n\r\n  static properties = {\r\n    name: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.#updateCSS + this.css;\r\n  }\r\n\r\n  get #updateCSS() {\r\n    const me = this;\r\n    return me.shouldUpdate() ? GSUtil.normalize(me.parentComponent?.tabCSS) : '';\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get panel() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.panelByName(me.name);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\n\r\n/**\r\n * Container for individual tab; part of tabed panel\r\n */\r\nexport class GSTabPanelElement extends GSElement {\r\n\r\n  static properties = {\r\n    name: {},\r\n    template: {},\r\n    active: { type: Boolean, reflect : true }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.active = false;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    delete this[Symbol.for('gs-element')];\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  shouldUpdate(changedProperties) {\r\n    return this.parentComponent?.tagName === this.parentType;\r\n  }\r\n\r\n  /*\r\n  @invalid=\"${me.#onInvalid}\"\r\n  @change=\"${me.#onChange}\"\r\n  */\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  \r\n      dir=\"${ifDefined(me.direction)}\" \r\n      class=\"${classMap(this.renderClass())}\">\r\n      <slot>\r\n      ${me.renderTemplate()}\r\n      </slot></div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tab-pane': true,\r\n      'd-none' : !me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get parentType() {\r\n    return 'GS-TAB-GROUP';\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest(this.parentType.toLowerCase(), -1, true) || GSDOM.component(this);\r\n  }\r\n\r\n  get form() {\r\n    return this.closest('form', -1, true);\r\n  }\r\n\r\n  get tab() {\r\n    const me = this;\r\n    const key = Symbol.for('gs-element');\r\n    return me[key] || me.owner.tabByName(me.name);\r\n  }\r\n\r\n  get tabs() {\r\n    return this.owner.tabs;\r\n  }\r\n\r\n  /*\r\n  #onChange(e) {\r\n    const me = this;\r\n    if (me.form) {\r\n      const isValid = me.form.isValid;\r\n      me.tabs?.forEach(el => el.badge = !isValid);\r\n    }\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    const me = this;\r\n    if (me.form) me.badge = false;\r\n  }\r\n  */\r\n\r\n  static {\r\n    this.define('gs-tab-panel');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSID } from '../../base/GSID.mjs';\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { PlacementTypes } from '../../properties/placement.mjs';\r\nimport { GSNavElement } from '../Nav.mjs';\r\n\r\n/**\r\n * Panel with tabs component (gs-tab-group), generate childrens gs-tab and gs-tab-panel \r\n */\r\nexport class GSTabGroupElement extends GSNavElement {\r\n\r\n  static properties = {\r\n    panelCSS: { attribute: 'css-panel' },\r\n    tabCSS: { attribute: 'css-tab' },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n   \r\n  firstUpdated(changed) {\r\n    super.firstUpdated(changed);\r\n    const me = this;\r\n    // link tabs and panels\r\n    me.items.forEach(el => me.#findPanel(el));\r\n    me.onSelected(me.active);\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.data.length > 0 || this.items.length > 0;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data')) {      \r\n      me.items.forEach(el => me.#findPanel(el));\r\n    }\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'd-flex': me.vertical\r\n    }\r\n    return css;\r\n  }\r\n\r\n  renderWrappedUI() {\r\n    const me = this;\r\n    const reverse = PlacementTypes.isAfter(me.placement);\r\n    const list = [super.renderWrappedUI('tabs'),\r\n    html`<div class=\"tab-content flex-fill ${me.panelCSS}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <slot name=\"panels\"></slot>\r\n      </div>\r\n      <slot class=\"d-none\"></slot>`];\r\n    return reverse ? list.reverse() : list;\r\n  }\r\n\r\n  renderWrappedClass() {\r\n    const me = this;\r\n    const css = super.renderWrappedClass();\r\n    return me.mapCSS(me.tabCSS, css);\r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  renderItems() {\r\n    const me = this;\r\n    const tabs =  me.#renderTabs();\r\n    const panels = me.#renderPanels();\r\n    return tabs.concat(...panels);\r\n  }\r\n\r\n  #renderTabs() {    \r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab generated slot=\"tabs\"\r\n        .active=\"${ifDefined(o.active === true)}\"\r\n        .autofocus=\"${ifDefined(o.autofocus === true)}\"\r\n        .disabled=\"${ifDefined(o.disabled === true)}\" \r\n        icon=\"${ifDefined(o.icon)}\"\r\n        title=\"${ifDefined(o.title)}\"\r\n        name=\"${o.name}\"></gs-tab>`;\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Render items based on data property (might be from gs-item)\r\n   * @returns \r\n   */\r\n  #renderPanels() {\r\n    return this.data.map(o => {\r\n      if (!o.name) o.name = GSID.id;\r\n      return html`<gs-tab-panel generated  \r\n        slot=\"panels\" name=\"${o.name}\" \r\n        .active=\"${ifDefined(o.active)}\"\r\n        template=\"${ifDefined(o.template)}\"></gs-tab-panel>`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Callback when tab selected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onSelected(el) {\r\n    el?.click();\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = true;\r\n  }\r\n\r\n  /**\r\n   * Callback when tab deselected\r\n   * @param {GSTabElement} el \r\n   */\r\n  onDeselected(el) {\r\n    const panel = this.#findPanel(el);\r\n    if (panel) panel.active = false;\r\n  }\r\n\r\n  get childTagName() {\r\n    return 'GS-TAB';\r\n  }\r\n\r\n  get tabs() {\r\n    return this.items;\r\n  }\r\n\r\n  get panels() {\r\n    return this.queryAll('gs-tab-panel', false, true);\r\n  }\r\n\r\n  tabByName(name = '', shadow = false) {\r\n    return super.childByName(name, shadow);\r\n  }\r\n\r\n  panelByName(name = '', shadow = false) {\r\n    return this.query(`gs-tab-panel[name=\"${name}\"]`, shadow, true);\r\n  }\r\n\r\n  /**\r\n   * Selected Tab node name is used to find the panel.\r\n   * If panel found, auto-link it with node element\r\n   * @param {GSTabElement} el \r\n   */\r\n  #findPanel(el) {\r\n    if (!el) return null;\r\n    const me = this;\r\n    const generated = me.data?.length > 0;\r\n    const key = Symbol.for('gs-element');\r\n    let panel = el[key] || me.panelByName(el.name, generated);\r\n    if (panel && !el[key]) {\r\n      el[key] = panel;\r\n      panel[key] = el;\r\n    }\r\n    return panel;\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tab-group');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { color } from '../properties/color.mjs';\r\nimport { GSData } from '../base/GSData.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { DataSelector } from '../data/DataSelector.mjs';\r\n\r\n/**\r\n * A HTML Table renderer for tabular data representation.\r\n * Either use \"storage\" property to point to data handler\r\n * or use simpler form by using \"data\" property.\r\n * \r\n * NOTE: Simpler form currently does not suport data filter.\r\n * Simpler form is only for read-ony static data representation.\r\n */\r\nexport class GSTableElement extends GSElement {\r\n\r\n  static #icons = ['sort-up', 'arrow-down-up', 'sort-down-alt'];\r\n\r\n  static styles = css`th:hover { opacity: 50% !important; }`;\r\n\r\n  static CELLS = {\r\n    align: {},\r\n    width: {},\r\n    width: {},\r\n    css: {},\r\n    title: {},\r\n    colspan: {},\r\n    storage: {},\r\n    ref: {}, // if set; use storage or gs-items to map ref value to virtual field\r\n    list : { type: Boolean }, // if set, use storage record column as a filter\r\n    filter: { type: Boolean },\r\n    hidden: { type: Boolean },\r\n    fixed: { type: Boolean },\r\n    filterType: { attribute: 'filter-type' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    color: { ...color},\r\n    ...GSData.PROPERTIES\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    color: { ...color },\r\n    colorFilter: { ...color, attribute: 'filter-color' },\r\n    colorHead: { ...color, attribute: 'head-color' },\r\n    colorSelect: { ...color, attribute: 'select-color' },\r\n    colorSort: { ...color, attribute: 'sort-color' },\r\n    stripedColumn: { type: Boolean, attribute: 'striped-column' },\r\n    cssFilter: { attribute: 'css-filter' },\r\n    cssHeader: { attribute: 'css-header' },\r\n    divider: { type: Boolean },\r\n    striped: { type: Boolean },\r\n    hover: { type: Boolean },\r\n    small: { type: Boolean },\r\n    grid: { type: Boolean },\r\n    borderless: { type: Boolean },\r\n\r\n    sort: { type: Array, state: true },\r\n    columns: { type: Array, state: true },\r\n    key: { type: Number, state: true },\r\n    data: { type: Array },\r\n    \r\n    datacolumn: { type: Boolean },\r\n    multisort: { type: Boolean },\r\n    multiselect: { type: Boolean },\r\n    protected: { type: Boolean },\r\n    selectable: { type: Boolean },\r\n    toggle: { type: Boolean },\r\n    sortable: { type: Boolean },\r\n  }\r\n\r\n  #config = [];\r\n  #sortOrder = [];\r\n  #auto = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.headColor = 'secondary';\r\n    this.colorSelect = 'info';\r\n    this.columns = [];    \r\n    this.data = [];\r\n    this.sort = [];\r\n    this.key = 0;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dataController?.selected;\r\n  }\r\n\r\n  set search(val) {\r\n    const me = this;\r\n    if (me.storage && me.dataController) {\r\n      return me.dataController.search = val;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#config = GSItem.proxify(me, GSTableElement.CELLS);\r\n    if (me.columns.length === 0) me.columns = me.#config.map(v => v.name);\r\n    /* TODO - auto storage prevents using plain table with \r\n       columns, data properties programmatically\r\n    if (!me.storage) {      \r\n      me.storage = me.#auto = GSID.next('table-');\r\n    }\r\n    */\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.dataController?.clearSelected(this.data);\r\n    this.data = [];\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'user-select-none': me.protected,\r\n      'table': true,\r\n      'table-sm': me.small,\r\n      'table-hover': me.hover,\r\n      'table-striped': me.striped,\r\n      'table-bordered': me.grid,\r\n      'table-borderless': me.borderless,\r\n      'table-striped-columns': me.stripedColumns,\r\n      [`table-${me.color}`]: me.color,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.dataController?.read();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (me.columns.length != me.sort.length) me.sort = Array(me.columns.length).fill(0);\r\n    if (me.datacolumn && me.data.length > 0) {\r\n      me.columns = me.data[0];\r\n      me.data = me.data.slice(1);\r\n    }\r\n    if (changed.has('multiselect') && !me.multiselect) me.dataController?.clearSelected();\r\n    if (changed.has('selectable') && !me.selectable) me.dataController?.clearSelected();\r\n    if (changed.has('sortable') || changed.has('multisort')) {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [];\r\n    }\r\n\r\n    super.willUpdate(changed);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const headColor = me.colorHead ? `table-${me.colorHead}` : '';\r\n    return html`\r\n      <table  \r\n       dir=\"${ifDefined(me.direction)}\"\r\n       @keyup=\"${me.#onKeyUp}\"\r\n       @keydown=\"${me.#onKeyDown}\"\r\n       class=\"${classMap(me.renderClass())}\">\r\n        <thead class=\"${ifDefined(headColor)}\">\r\n          ${me.#renderFilters()}\r\n          <tr @click=${me.#onSort}>\r\n            ${me.columns.map((entry, index) => me.#renderColumn(entry, index))}\r\n          </tr>\r\n        </thead>\r\n        <tbody @click=${me.#onSelect} @contextmenu=${me.#onSelect} class=\"${me.divider ? 'table-group-divider' : ''}\" role=\"button\">\r\n          ${me.data.map((entry, index) => me.#renderRecord(entry, index))}\r\n          ${me.#renderEmpty()}\r\n        </tbody>\r\n      </table>\r\n      <slot name=\"extra\">${me.#renderHandler()}</slot>\r\n    `;\r\n  }\r\n\r\n  #renderHandler() {\r\n    const me = this;\r\n    return me.#auto ? html`<gs-data-handler type=\"cached\" mode=\"\" id=${me.#auto} generated></gs-data-handler>` : '';\r\n  }\r\n\r\n  onDataRead(data) {\r\n    const me = this;\r\n    me.data = data;\r\n    //me.dataController?.clearSelected();\r\n\r\n    // update filtering\r\n    if (data.length > 0 && me.#hasFilters) {\r\n      me.#config.forEach((entry, index) => {\r\n        entry.columnType = me.#columType(index);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear table filters\r\n   */\r\n  clear() {\r\n    this.#input.forEach(el => el.value = '');\r\n    this.dataController?.filter([]);\r\n  }\r\n\r\n  valueAt(row, cell) {\r\n    return this.data.length > row ? this.data[row][cell] : undefined;\r\n  }\r\n\r\n  get #input() {\r\n    return this.queryAll('th > input, th > select', true, true);\r\n  }\r\n\r\n  get #hasFilters() {\r\n    return this.#config.filter(o => o.filter).length > 0;\r\n  }\r\n\r\n  #columType(index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    const cell = me.valueAt(0, me.columns[index]);\r\n    cfg.type = cfg.type || 'text';\r\n    const cfgType = { 'string': 'text', 'currency': 'number', 'timestamp': 'datetime-local' }[cfg.type]\r\n    const dataType = cell instanceof Date ? 'date' : typeof cell;\r\n    return cell ? dataType : cfgType || cfg.type;\r\n  }\r\n\r\n  #renderFilters() {\r\n    const me = this;\r\n    return me.#hasFilters ? html`<tr>${me.columns.map((entry, index) => me.#renderFilter(entry, index))}</tr>` : '';\r\n  }\r\n\r\n  #renderFilter(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (!cfg?.filter) return html`<th></th>`;\r\n\r\n    let mask = undefined;\r\n    const hasSub = cfg.childElementCount > 0;\r\n    const isDate = cfg.columnType === 'date';\r\n    if (isDate) mask = cfg.format || GSUtil.getDateFormat(cfg.language || GSUtil.language);\r\n    const css = `${GSUtil.normalize(me.cssFilter)} ${GSUtil.normalize(cell.cssFilter)}`; \r\n    const color = `text-bg-${GSUtil.normalize(cell.color || me.colorFilter)}`; \r\n    \r\n\r\n    if ((hasSub || cfg.list) && cfg.fixed) {\r\n      return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n          <select is=\"gs-ext-select\" .index=${index}\r\n              class=\"form-select ${css} ${color}\" \r\n              name=\"${cell}\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}\r\n              </select>\r\n          </th>`;\r\n    }\r\n\r\n    let listid = '';\r\n    let list = undefined;\r\n    if (hasSub || cfg.list) {\r\n      listid = `${me.id}-list-${index}`;\r\n      list = html`<datalist id=\"${listid}\" is=\"gs-ext-datalist\"\r\n              storage=\"${ifDefined(cfg.list ? me.storage : null)}\"\r\n              key=\"${ifDefined(cfg.list ? cfg.name : null)}\"> \r\n              ${me.#renderOption(cfg)}</datalist>`;\r\n    } \r\n\r\n    return html`<th .index=${index} @change=\"${me.#onFilter}\">\r\n    <input is=\"gs-ext-input\" .index=${index}\r\n      class=\"form-control ${css} ${color}\" \r\n      mask=\"${ifDefined(mask)}\"\r\n      list=\"${ifDefined(listid)}\"\r\n      name=\"${cell}\" \r\n      placeholder=\"${ifDefined(cfg.title)}\" \r\n      type=\"${cfg.filterType || cfg.columnType}\"\r\n      data-slots=\"${ifDefined(isDate ? 'DMY' : undefined)}\"/>\r\n    ${list}\r\n    </th>`;\r\n  }\r\n\r\n  #renderOption(cfg) {\r\n    if (cfg.childElementCount == 0) return '';\r\n    const sub = GSItem.proxify(cfg);\r\n    return sub.map(el => html`<option value=\"${el.value}\">${cfg.fixed ? el.map : ''}</option>`);\r\n  }\r\n\r\n  #renderColumn(cell, index) {\r\n    const me = this;\r\n    const cfg = me.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    const css = `${GSUtil.normalize(me.cssHeader)} ${GSUtil.normalize(cell.cssHeader)}`; \r\n    return html`\r\n      <th .index=${index} class=\"${css}\" \r\n        colspan=\"${ifDefined(cfg?.colspan)}\"\r\n        width=\"${ifDefined(cfg?.width)}\">\r\n        <div class=\"d-flex justify-content-between\"> \r\n          <span>${cfg?.title || cell}</span>\r\n          ${me.#renderIcon(index)}\r\n        </div>\r\n      </th>\r\n    `\r\n  }\r\n\r\n  #renderIcon(index) {\r\n    const me = this;\r\n    if (!me.sortable) return '';\r\n    const icons = GSTableElement.#icons;\r\n    const sortType = me.sort[index];\r\n    const order = me.multisort ? me.#sortOrder.indexOf(index) + 1 : '';\r\n    return html`<gs-icon name=\"${icons[sortType + 1]}\" super=\"${order > 0 ? order : ''}\" color=\"${ifDefined(me.colorSort)}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderRecord(entry, index) {\r\n    const me = this;\r\n    const controller = me.dataController || DataSelector;\r\n    const selected = controller?.isSelected(entry);\r\n    const color = me.colorSelect && selected ? `table-${me.colorSelect}` : '';\r\n    const cells = me.#remapRecord(entry);\r\n    return html`\r\n        <tr .index=${index} class=\"${color}\" tabindex=\"0\" ?selected=${selected}>\r\n          ${cells.map((cell, i) => me.#renderCell(cell, i))}\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  #renderCell(cell, index) {\r\n    const cfg = this.#config[index];\r\n    if (cfg?.hidden) return '';\r\n    return html`<td class=\"text-${cfg?.align}\" colspan=\"${ifDefined(cfg?.colspan)}\" ><span>${cell}</span></td>`;\r\n  }\r\n\r\n  #remapRecord(record) {\r\n    const me = this;\r\n    if (!Array.isArray(record)) record = me.columns.map(v => record[v]);\r\n    return record.map((val, i) => me.#config[i] ? GSData.format(me.#config[i], val) : val);\r\n  }\r\n\r\n  #renderEmpty() {\r\n    const me = this;\r\n    return me.data.length > 0 ?  '' :\r\n    html`<tr data-ignore=\"true\"><td colspan=\"${me.columns.length}\" class=\"text-center fw-bold text-muted\">${me.translate('No Data')}</td></tr>`;\r\n  }\r\n\r\n  #elementTofilter(el) {\r\n    if (!el.value) return undefined;\r\n    const isDate = el.type === 'date';\r\n    const val = isDate ? el.valueAsDate : el.value;\r\n    const cfg = this.#config[el.index];\r\n    return { name: el.name, value: val, language : cfg?.language };\r\n  }\r\n\r\n  #onFilter(e) {\r\n    \r\n    const me = this;\r\n    \r\n    const filter = me.#input\r\n      .map(el => me.#elementTofilter(el))\r\n      .filter(el => el?.value);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.filter(filter);\r\n    } else {\r\n      // TODO keep full data, use sorted\r\n      // GSData.filter(me.data, filter);\r\n    }\r\n  }  \r\n\r\n  #onSort(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.sortable) return;\r\n    \r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const column = e.target.closest('th');\r\n    if (!icon || !column) return;\r\n\r\n    const idx = column.index !== undefined ? column.index : GSDOM.getElementIndex(column);\r\n    const current = me.sort[idx];\r\n    const sortType = current === 1 ? -1 : current + 1;\r\n\r\n    if (me.multisort) {\r\n      if (sortType == 0) {\r\n        me.#sortOrder = me.#sortOrder.filter(v => v != idx);\r\n      } else if (!me.#sortOrder.includes(idx)) {\r\n        me.#sortOrder.push(idx);\r\n      }\r\n    } else {\r\n      me.sort = Array(me.columns.length).fill(0);\r\n      me.#sortOrder = [idx];\r\n    }\r\n\r\n    me.sort[idx] = sortType;\r\n\r\n    const sort = me.#prepareSorter(me.sort, me.#sortOrder);\r\n\r\n    if (me.storage) {\r\n      me.dataController?.sort(sort);\r\n    } else {\r\n      me.data = GSData.sortData(me.data, sort);\r\n    }\r\n\r\n    me.emit('sort');\r\n  }\r\n\r\n  #prepareSorter(sort, sortOrder) {\r\n    \r\n    const me = this;\r\n\r\n    if (sort.filter(v => v).length === 0) {\r\n      sort = Array(me.columns.length).fill(0);\r\n      sort[me.key] = 1;\r\n    }\r\n\r\n    // if data record is object (not simple array)\r\n    const isComplex = me.data[0] && !Array.isArray(me.data[0]);\r\n\r\n    // sort list \r\n    const list = sort.map((v, i) => v ? { name: isComplex ? me.columns[i] : undefined, col: i, ord: v, idx: sortOrder.indexOf(i) } : null).filter(v => v);\r\n\r\n    // order sort list by idx\r\n    sort = GSData.sortData(list, [{ name: 'idx', ord: 1 }]);\r\n\r\n    return sort;\r\n  }\r\n\r\n  #onSelect(e) {\r\n    \r\n    const me = this;\r\n    \r\n    if (!me.selectable) return;\r\n    \r\n    const tr = e.target.tagName === 'TR' ? e.target : e.target.closest('tr');\r\n    if (!tr) return;\r\n    \r\n    // if context menu is attached and right click made\r\n    if (e.button === 2 && !me.query('gs-context', false, true)) return;\r\n    \r\n    const controller = me.dataController || DataSelector;\r\n    if (!controller) return;\r\n\r\n    const record = me.data[tr.index];\r\n    const isSelected = controller.isSelected(record);\r\n    if (me.multiselect) {\r\n      if (isSelected) {\r\n        controller.removeSelected(record);\r\n      } else {\r\n        controller.addSelected(record);\r\n      }\r\n    } else if (me.toggle) {\r\n      controller.clearSelected(me.data);\r\n      if (!isSelected) {\r\n        controller.addSelected(record);\r\n      }\r\n    } else {\r\n      controller.clearSelected(me.data);\r\n      controller.addSelected(record);\r\n    }\r\n    me.requestUpdate();\r\n    me.emit('select');\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    if (!e.target.matches('tbody tr')) return;\r\n    let el = null;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        el = e.target.previousElementSibling;\r\n        break;\r\n      case 'ArrowDown':\r\n        el = e.target.nextElementSibling;\r\n        break;\r\n    }\r\n\r\n    if (el) {\r\n      el.focus();\r\n      this.emit('focus', el);\r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    if (e.code === 'Space') this.#onSelect(e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-table');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTag class\r\n * @module components/GSTag\r\n */\r\n\r\nimport { createRef, ref, classMap, css, html, ifDefined } from '../lib.mjs';\r\nimport { stringArrayConverter, color } from '../properties/index.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSItem } from '../base/GSItem.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\n\r\n/**\r\n * Tag list element\r\n * \r\n * @class\r\n * @extends {GSTagElement}\r\n */\r\nexport default class GSTagElement extends GSElement {\r\n\r\n    static #KEYS = ['Enter', 'NumpadEnter', 'Comma', 'Space'];\r\n\r\n    static styles = css`\r\n        .tag-input:focus-visible {\r\n            outline:none;\r\n        }\r\n        .tag .btn-close {\r\n            background: none;\r\n        }            \r\n        .tag .btn-close::after {\r\n            content: 'x';\r\n        }`;\r\n\r\n    static properties = {\r\n        placeholder: {},\r\n        max: { type: Number },\r\n        size: { type: Number },\r\n        name: {},\r\n        data: { type: Array },\r\n        values: { type: Array, reflect: true, converter: stringArrayConverter },\r\n        appendable: { type: Boolean },\r\n        color: { ...color },\r\n        closeColor: { ...color, attribute: 'close-color' },\r\n        cssClose: { attribute: 'css-close' },\r\n        cssTag: { attribute: 'css-tag' },\r\n    }\r\n\r\n    // GS-ITEM attributes mapping\r\n    static options = {\r\n        name: {}\r\n    }\r\n\r\n    #dataListRef = createRef();\r\n    #inputRef = createRef();\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = '';\r\n        this.data = this.#items;\r\n        this.closeColor = 'light';\r\n        this.color = 'primary';\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const tags = me.#renderTags();\r\n        return html`\r\n        <div  dir=\"${ifDefined(me.direction)}\" \r\n            class=\"${classMap(me.renderClass())}\"\r\n            @click=\"${me.#onClick.bind(me)}\">\r\n            ${tags}\r\n            <input type=\"text\" \r\n            @keydown=\"${me.#onKeyDown.bind(me)}\"\r\n            @input=\"${me.#onInput.bind(me)}\"\r\n            ${ref(me.#inputRef)}\r\n            name=\"${me.name}\" \r\n            list=\"${me.name}_list\"\r\n            class=\"form-control d-flex w-auto flex-grow-1\" \r\n            placeholder=\"${me.#info}\">\r\n            <datalist ${ref(me.#dataListRef)} id=\"${me.name}_list\">${me.#renderList()}</datalist>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            \"d-flex\": true,\r\n            \"flex-wrap\": true,\r\n            \"align-items-center\": true,\r\n            \"gap-1 \": true,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    get #info() {\r\n        const me = this;\r\n        const alt = me.max > 0 ? `Add max ${me.max} tags...` : '';\r\n        return me.placeholder ? me.placeholder : alt;\r\n    }\r\n\r\n    #onInput(e) {\r\n        if (!e.inputType) this.#updateTag(e);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        if (GSTagElement.#KEYS.includes(e.code)) this.#updateTag(e);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const isClose = e.srcElement === e.target && e.target instanceof HTMLButtonElement;\r\n        if (isClose) this.#removeTag(e.target.parentElement);\r\n    }\r\n\r\n    #updateTag(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.#addTag(me.#selected);\r\n    }\r\n\r\n    get #isMax() {\r\n        const me = this;\r\n        return me.max > 0 && me.data.length >= me.max;\r\n    }\r\n\r\n    get #options() {\r\n        return Array.from(this.#datalist.children);\r\n    }\r\n\r\n    get #selected() {\r\n        const me = this;\r\n        return me.#options.filter(el => el.value.toLowerCase() === me.#input.value.toLowerCase()).pop();\r\n    }\r\n\r\n    #addTag(optEl) {\r\n        const me = this;\r\n        const fld = me.#input;\r\n        if (me.#isMax || (!optEl && me.appendable == false)) {\r\n            fld.value = '';\r\n            return;\r\n        }\r\n        if (!me.values.includes(fld.value)) {\r\n            me.values.push(fld.value);\r\n            fld.value = '';\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    #removeTag(tagEl) {\r\n        if (!tagEl) return;\r\n        const me = this;\r\n        const value = tagEl.dataset.value;\r\n        me.values = me.values.filter(v => v != value);\r\n    }\r\n\r\n    #renderTags() {\r\n        const me = this;\r\n        return me.values.map(v => me.#renderTag(v));\r\n    }\r\n\r\n    #renderTag(val = '') {\r\n        if (!val) return '';\r\n        const me = this;\r\n        const size = me.size > 0 ? `fs-${me.size}` : '';\r\n        return html`<div class=\"${classMap(me.#tagClass)}\" data-value=\"${val}\">${val}<button type=\"button\" class=\"${classMap(me.#btnClass)}\"></button></div>`;\r\n    }\r\n\r\n    get #tagClass() {\r\n        const me = this;\r\n        const opt = {\r\n            badge: true,\r\n            tag: true,\r\n            [`fs-${me.size}`]: me.size > 0,\r\n            [`text-bg-${me.color}`]: me.color ? true : false\r\n        }\r\n        return me.mapCSS(me.cssTag, opt);\r\n    }\r\n\r\n    get #btnClass() {\r\n        const me = this;\r\n        const opt = {\r\n            'btn-close': true,\r\n            'ms-1': true,\r\n            [`text-bg-${me.closeColor}`]: me.closeColor ? true : false\r\n        }\r\n        return me.mapCSS(me.cssClose, opt);\r\n    }\r\n\r\n    #renderList() {\r\n        const me = this;\r\n        return me.data.map(v => html`<option value=\"${v}\">`);\r\n    }\r\n\r\n    /**\r\n     * Proxify GS-ITEM elements to easily read attributes\r\n     */\r\n    #proxify(root) {\r\n        return GSItem.collect(root).map(el => GSAttr.proxify(el));\r\n    }\r\n\r\n    get #items() {\r\n        return this.#proxify(this).map(el => el.name).filter(v => v ? true : false);\r\n    }\r\n\r\n    get #input() {\r\n        return this.#inputRef.value;\r\n    }\r\n\r\n    get #datalist() {\r\n        return this.#dataListRef.value;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-tag');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\nexport class GSTextElement extends GSElement {\r\n\r\n  #text = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n    this.#text = this.innerText;\r\n    this.innerText = \"\";\r\n  }\r\n\r\n  renderUI() {\r\n    return this.translate(this.#text);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-text');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html, ifDefined } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { placement } from '../properties/index.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\nimport { GSPopper } from '../base/GSPopper.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\n\r\nexport class GSTooltipElement extends GSElement {\r\n\r\n  static properties = {\r\n    placement: { ...placement },\r\n    title: {},\r\n    target: {},\r\n    opened: { type: Boolean },\r\n    local: { type: Boolean },\r\n  }\r\n\r\n  #arrowRef = createRef();\r\n  #panelRef = createRef();\r\n  #styleID = GSID.id;\r\n  #arrowStyle = GSID.id;\r\n\r\n  constructor() {\r\n    super();\r\n    this.placement = 'top';\r\n    this.dynamicStyle(this.#styleID);\r\n    this.dynamicStyle(this.#arrowStyle);\r\n  }\r\n\r\n  firstUpdated(changed) {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#attachEvents();\r\n    me.#reposition();\r\n    super.firstUpdated(changed);\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#reposition();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`\r\n    <div ${ref(me.#panelRef)} \r\n      dir=\"${ifDefined(me.direction)}\"\r\n      role=\"tooltip\"\r\n      data-popper-placement=\"${me.placement}\"\r\n      data-gs-class=\"${me.#styleID}\"\r\n      class=\"${classMap(me.renderClass())}\">\r\n      <div ${ref(me.#arrowRef)} \r\n          class=\"tooltip-arrow ${me.#arrowStyle}\" \r\n          data-gs-class=\"${me.#arrowStyle}\">\r\n      </div>\r\n      <div class=\"tooltip-inner\">${me.translate(me.title)}</div>\r\n    </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'tooltip': true,\r\n      'bs-tooltip-auto': true,\r\n      'fade': true,\r\n      'show': me.opened,\r\n      [me.#styleID]: true\r\n    }\r\n    return css;\r\n  }\r\n\r\n  open() {\r\n    this.opened = true;\r\n  }\r\n\r\n  close() {\r\n    this.opened = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  #attachEvents() {\r\n    const me = this;\r\n    me.attachEvent(me.#ref, 'mouseenter', me.open.bind(me));\r\n    me.attachEvent(me.#ref, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #reposition() {\r\n    const me = this;\r\n    const arrowEl = me.#arrow;\r\n    const panelEl = me.#panel;\r\n    if (!panelEl) return;\r\n    if (me.opened) {\r\n      GSPopper.popupFixed(me.placement, panelEl, me.#ref, arrowEl);\r\n    } else {\r\n      me.dynamicStyle(me.#styleID, { top: '-1000px', left: '-1000px' });\r\n    }\r\n  }\r\n\r\n  get #ref() {\r\n    const me = this;\r\n    switch (me.target) {\r\n      case '@parent':\r\n        return this.parentElement;\r\n      case '@previous':\r\n        return this.previousElementSibling;\r\n      case '@next':\r\n        return this.nextElementSibling;\r\n      default:\r\n        return me.local ? me.#refLocal : me.#refGlobal;\r\n    }\r\n  }\r\n\r\n  get #refLocal() {\r\n    const root = GSDOM.root(this);\r\n    return GSDOM.query(root, this.target);\r\n  }\r\n  \r\n  get #refGlobal() {\r\n    return GSDOM.query(document.body, this.target);\r\n  }\r\n\r\n  get #arrow() { return this.#arrowRef.value; }\r\n  get #panel() { return this.#panelRef.value; }\r\n\r\n  static {\r\n    this.define('gs-tooltip');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { notEmpty } from '../properties/index.mjs';\r\n\r\nexport class GSTemplateElement extends GSElement {\r\n\r\n  static properties = {\r\n    src: { reflect: true, hasChanged: notEmpty }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    const me = this;\r\n    if (me.flat) {\r\n      me.renderOptions.renderBefore = me;\r\n      return me.parentElement;\r\n    }\r\n    return super.createRenderRoot();\r\n  }\r\n\r\n  renderUI() {\r\n    return html`${this.renderTemplate()}`;\r\n  }\r\n\r\n\ttemplateInjected() {\r\n\t\tthis.emit('template-injected', null, true, true);\r\n\t}\r\n\r\n  static {\r\n    this.define('gs-template');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle automatic field value copy and select\r\n */\r\nexport class CopySelectController {\r\n\r\n  #host;\r\n\r\n  #clickCallback;\r\n  #copyCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#clickCallback = me.onClick.bind(me);\r\n    me.#copyCallback = me.onCopy.bind(me);\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#host.on?.('click', me.#clickCallback);\r\n    me.#host.on?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host.off?.('click', me.#clickCallback);\r\n    me.#host.off?.('copy', me.#copyCallback);\r\n  }\r\n\r\n  onCopy(e) {\r\n    GSUtil.writeToClipboard(this.#host.value);\r\n  }\r\n\r\n  onClick(e) {\r\n      const me = this;\r\n      if (me.#host.autocopy) me.onCopy(e);\r\n      if (me.#host.autoselect) me.#host.select();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle field mask \r\n */\r\nexport class MaskController {\r\n\r\n  static #special = '.^$*+?()[]{}\\|';\r\n\r\n  static #maskType = {\r\n    x: /[0-9a-fA-F]/g,\r\n    n: /[0-9]/g,\r\n    y: /[0-9]/g,\r\n    m: /[0-9]/g,\r\n    d: /[0-9]/g,\r\n    h: /[0-9]/g,\r\n    s: /[0-9]/g,\r\n    '.': /[0-9]/g,\r\n    '#': /[a-zA-Z]/g,\r\n    '*': /[0-9a-zA-Z]/g,\r\n    '_': /./g\r\n  };\r\n\r\n  #back = false;\r\n  #slots;\r\n  #prev;\r\n  #first;\r\n  #accept;\r\n  #pattern;\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.initRules();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  initRules() {\r\n    const me = this;\r\n    if (!me.pattern) return;\r\n    me.#slots = me.#buildSlots();\r\n    me.#prev = (j => Array.from(me.pattern, (c, i) => me.#slots.has(c) ? j = i + 1 : j))(0);\r\n    me.#first = [...me.pattern].findIndex(c => me.#slots.has(c));\r\n    me.#accept = me.#buildAccept();\r\n    me.#toPattern();\r\n  }\r\n\r\n  validate() {  \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Mask not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n    \r\n  setSelectionRange(i, j) {\r\n    this.#host.setSelectionRange(i, j);\r\n  }\r\n\r\n  select() {\r\n    this.#host.select();\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }    \r\n\r\n  get value() {\r\n    const [i, j] = this.#range();\r\n    return this.raw.substring(0, j);\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get pattern() {\r\n    return this.#host.mask;\r\n  }\r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get selectionStart() {\r\n    return this.#host.selectionStart;\r\n  }\r\n\r\n  get selectionEnd() {\r\n    return this.#host.selectionEnd;\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.#host.autoselect;\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n\r\n    let isMatch = true;\r\n    if (me.#pattern) {\r\n      me.#pattern.lastIndex = 0;\r\n      isMatch = me.#pattern.test(me.raw);\r\n    }\r\n\r\n    return isMatch;\r\n  }\r\n\r\n  onInput(e) {\r\n    this.#format();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    me.#back = e.key === \"Backspace\";\r\n    const isTab = e.key === \"Tab\";\r\n    if (isTab) {\r\n      me.#format();\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  onFocus(e) {\r\n    const me = this;\r\n    me.#format();\r\n    if (me.autoselect) me.select();\r\n  }\r\n\r\n  onChange(e) {\r\n    const me = this;\r\n    me.#format();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  /**\r\n   * If data-slots not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildSlots() {\r\n    const me = this;\r\n    let slots = me.dataset.slots;\r\n    if (!slots) {\r\n      const maskType = MaskController.#maskType;\r\n      slots = [...new Set(me.pattern)]\r\n        .filter(v => maskType[v.toLowerCase()])\r\n        .join('');\r\n    }\r\n    return new Set(slots || \"_\");\r\n  }\r\n\r\n  /**\r\n   * If data-accept not defined, try to detect automatically\r\n   * @returns \r\n   */\r\n  #buildAccept() {\r\n    const me = this;\r\n    let accept = me.dataset.accept;\r\n    if (!accept) {\r\n      const maskType = MaskController.#maskType;\r\n      accept = [...new Set(me.pattern)]\r\n        .map(v => maskType[v.toLowerCase()])\r\n        .filter(v => v);\r\n      if (accept.length > 0) {\r\n        const tmp = {};\r\n        accept.forEach(v => tmp[v.src] = v);\r\n        accept = Object.values(tmp);\r\n        return accept.length === 1 ? accept.pop() : accept;\r\n      }\r\n\r\n    }\r\n    return new RegExp(accept || \"\\\\d\", \"g\");\r\n  }\r\n\r\n  #range() {\r\n    const me = this;\r\n    const value = me.raw;\r\n    return [me.selectionStart, me.selectionEnd].map(i => {\r\n      i = me.#clean(value.slice(0, i)).findIndex(c => me.#slots.has(c));\r\n      return i < 0 ? me.#prev[me.#prev.length - 1] : me.#back ? me.#prev[i - 1] || me.#first : i;\r\n    });\r\n  }\r\n\r\n  #format() {\r\n    const me = this;\r\n    const [i, j] = me.#range();\r\n    const val = me.#clean(me.#host.raw);\r\n    me.value = val.join``;\r\n    me.setSelectionRange(i, j);\r\n    me.#back = false;\r\n  }\r\n\r\n  #clean(input) {\r\n    const me = this;\r\n    input = input.match(me.#accept) || [];\r\n    return Array.from(me.pattern, (c, i) => input[i] === c || me.#slots.has(c) ? input.shift() || c : c);\r\n  }\r\n\r\n  #toPattern() {\r\n\r\n    const me = this;\r\n\r\n    if (me.pattern.length === 0) return;\r\n\r\n    const chars = me.pattern.split('');\r\n    const masks = ['^'];\r\n\r\n    const maskType = MaskController.#maskType;\r\n    const special = MaskController.#special;\r\n\r\n    let cnt = 0;\r\n    chars.forEach((v, i) => {\r\n      const m = me.#slots.has(v) ? maskType[v.toLowerCase()] : null;\r\n      if (!m) {\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        cnt = 0;\r\n        if (special.includes(v)) masks.push('\\\\');\r\n        return masks.push(v);\r\n      }\r\n\r\n      chars[i] = new RegExp(m, 'g');\r\n\r\n      if (masks.length === 0) return masks.push(m.source);\r\n\r\n      if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n      if (cnt > 0) masks.push(`{${++cnt}}`);\r\n      cnt = 0;\r\n      masks.push(m.source);\r\n    });\r\n\r\n    if (cnt > 0) masks.push(`{${++cnt}}`);\r\n    masks.push('$');\r\n\r\n    me.#pattern = new RegExp(masks.join(''), 'g');\r\n    // me.#max = me.pattern.length;\r\n    // me.#masks = chars;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle multiple patterns\r\n */\r\nexport class MultipatternController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n  \r\n  validate() {    \r\n    const me = this;  \r\n    const isMatch = me.isEmpty ? true :me.isMatch;\r\n    me.setCustomValidity(isMatch ? '' : 'Pattern not matched!');\r\n    return isMatch;\r\n  }\r\n\r\n  setCustomValidity(val) {\r\n    return this.#host.setCustomValidity(val);\r\n  }\r\n\r\n  get isEmpty() {\r\n    return GSUtil.isStringEmpty(this.raw);\r\n  }\r\n    \r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }    \r\n\r\n  get dataset() {\r\n    return this.#host.dataset;\r\n  }\r\n\r\n  get patterns() {\r\n    const obj = this.#host.multipattern;\r\n    if (obj instanceof RegExp) return [obj];\r\n    if (Array.isArray(obj)) return obj.filter(o => o instanceof RegExp);\r\n    throw new Error('Invalid multipattern value. Expected RegExp object or array.');\r\n  }\r\n\r\n  get isMatch() {\r\n    const me = this;\r\n    let isMatch = true;\r\n    for (const r of me.patterns) {\r\n      isMatch = r.test(me.value);\r\n      if (isMatch) break;\r\n    }\r\n   \r\n    return isMatch;\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab) {\r\n      this.validate();\r\n    } \r\n  }\r\n\r\n  onBlur(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.validate();\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type number to support max length entry\r\n */\r\nexport class NumberController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get maxLength() {\r\n    return GSUtil.asNum(this.#host.maxLength, 0);\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n    \r\n  onInput(e) {\r\n    const me = this;\r\n    if (me.type === 'number') {\r\n      if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n          me.value = me.value.substring(0, me.maxLength);\r\n      }\r\n    }\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle for input tpye password to support keyboard shortcut for password reveal.\r\n */\r\nexport class PasswordController {\r\n\r\n  #host;\r\n\r\n  #revealing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get reveal() {\r\n    return this.#host.reveal;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  set type(val) {\r\n    if (this.#host) this.#host.type = val;\r\n  }\r\n\r\n  #isReveal(e) {\r\n    return this.reveal && e.key === 'Shift' && e.altKey && e.ctrlKey && e.shiftKey && this.type === 'password';\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    const me = this;\r\n    if (e.key === 'Shift' && me.#revealing) {\r\n      me.type = 'password';\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    if (me.#isReveal(e)) {\r\n      me.#revealing = true;\r\n      me.type = 'text';\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCSSMap } from \"../../../base/GSCSSMap.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Handle for input type text to support text value changes based on CSS\r\n */\r\nexport class TextController {\r\n\r\n  #host;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  get raw() {\r\n    return this.#host.raw;\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get type() {\r\n    return this.#host?.type;\r\n  }\r\n\r\n  onInput(e) {\r\n    const input = e.target;\r\n    const start = input.selectionStart;\r\n    const end = input.selectionEnd;\r\n    input.value = this.#transform();\r\n    input.setSelectionRange(start, end);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  onBlur(e) {\r\n    this.value = this.#transform();\r\n  }\r\n\r\n  #transform() {\r\n    const me = this;\r\n    if (me.type === 'text') {\r\n      const map = GSCSSMap.styleValue(this.#host, 'text-transform');\r\n      if (map) return GSUtil.textTransform(map.value, me.raw);\r\n    }\r\n    return me.value;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Handle data filtering for options atribute (combo and data lists)\r\n * Changes in one field list, updates available selections in another field selections.\r\n * \r\n * Options element data-* attributes matching other elements changes \r\n * \"disabled\" attribute for fields, and visibility for non field elements.\r\n * \r\n * NOTE: This applies only for \"gs-form\" or \"form\" child elements.\r\n */\r\nexport class InteractiveController {\r\n\r\n  #host;\r\n\r\n  #monitorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#monitorCallback = me.#onMonitor.bind(me);\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (list) {\r\n      me.#host.attachEvent(me.filter, 'change', me.#monitorCallback);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host.removeEvent(me.filter, 'change', me.#monitorCallback);\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  get component() {\r\n    return this.#host\r\n  }\r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.#host.value = val;\r\n  }\r\n\r\n  get list() {\r\n    return this.#host;\r\n  }\r\n\r\n  get filter() {\r\n    const me = this;\r\n    const filter = GSAttr.get(me.#host, 'data-filter');\r\n    return GSDOM.getByID(me.owner, filter);\r\n  }\r\n\r\n  get owner() {\r\n    //return this.#host.owner;\r\n    return this.#host.form || GSDOM.closest(this.#host, 'form');\r\n  }\r\n\r\n  get formElements() {\r\n    return GSDOM.formElements(this.owner, true);\r\n  }\r\n\r\n  get strict() {\r\n    return GSAttr.get(this.#host, 'strict', '');\r\n  }\r\n\r\n  onBlur(e) {\r\n    if (!this.#isInList()) GSEvents.send(this.#host, 'strict', { ok: false, source: e });\r\n  }\r\n\r\n  onChange(e) {\r\n\r\n    const me = this;\r\n    const own = me.owner;\r\n    let clean = false;\r\n    let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n    if (!opt) {\r\n        opt = me.list?.querySelector('option');\r\n        clean = true;\r\n    }\r\n\r\n    const obj = opt?.dataset || {};\r\n    Object.entries(obj).forEach(p => {\r\n        const val = clean ? '' : p[1];\r\n        const key = p[0];\r\n        if (key === 'id' || key === 'group') {\r\n          GSAttr.set(me.#host, `data-${key}`, p[1]);\r\n          return;\r\n        } \r\n\r\n        const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n        const els = Array.from(GSDOM.queryAll(own, filter));\r\n        els.filter(el => el.tagName !== 'OPTION')\r\n            .filter(el => el.tagName !== 'GS-ITEM')\r\n            .filter(el => el !== me.#host)\r\n            .filter(el => el !== me.filter) \r\n            .filter(v => GSDOM.closest(v, 'gs-form-group') ? false: true ) \r\n            //.filter(el => GSAttr.get(el, 'list').length === 0)\r\n            .forEach(el => me.#togleEl(el, key, val))\r\n    });\r\n  }\r\n\r\n  #onMonitor(e) {\r\n    const me = this;\r\n    const list = me.list;\r\n    me.value = '';\r\n    me.#host.disabled = false;\r\n    const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n    const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n    GSDOM.queryAll(list, 'option').forEach(el => me.#togleOption(el, true));\r\n    GSDOM.queryAll(list, filter).forEach(el => me.#togleOption(el, false));\r\n\r\n  }\r\n\r\n  #togleOption(el, value) {\r\n      GSAttr.toggle(el, 'disabled', value);\r\n      GSDOM.toggleClass(el, 'd-none', value);\r\n  }\r\n\r\n  #togleEl(el, key = '', value = '') {\r\n\r\n    const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n    const isMatch = value.length > 0 && data.includes(value);\r\n    const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el) || el.tagName === \"GS-FORM-GROUP\";\r\n\r\n    if (frmel) {\r\n      GSAttr.toggle(el, 'disabled', !isMatch);\r\n    } else {\r\n      isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n    }\r\n\r\n    //this.formElements.forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    GSAttr.set(el, 'data-ignore', isMatch ? null : true);\r\n    GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n  }\r\n\r\n  #isInList() {\r\n    const me = this;\r\n    const list = me.list;\r\n    if (!list) return true;\r\n    if (!me.strict) return true;\r\n    if (!list.querySelector('option')) return true;\r\n    const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n    return opt != null;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ComboController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    return this.component;\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttr } from \"../../../base/GSAttr.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { InteractiveController } from \"./InteractiveController.mjs\";\r\n\r\n/**\r\n * Handle data filtering for list atribute, and linked fields.\r\n * Changes in one field list, update available selections in another field selections.\r\n */\r\nexport class ListController extends InteractiveController {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n  }\r\n\r\n  get list() {\r\n    const me = this;\r\n    if (me.component.list) return me.component.list;\r\n    const list = GSAttr.get(me.component, 'list');\r\n    return GSDOM.getByID(me.owner, list);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSBeep } from \"../../../base/GSBeep.mjs\";\r\nimport { GSDOM } from \"../../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../../base/GSEvents.mjs\";\r\nimport { GSUtil } from \"../../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Handle for input/textarea to support validity checkups\r\n */\r\nexport class ValidityController {\r\n\r\n  #host = undefined;\r\n  #processing = false;  \r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#processing = false;\r\n    me.#host = host;\r\n    host.addController?.(me);\r\n  }\r\n\r\n  hostConnected() {\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController?.(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n  \r\n  get autoreport() {\r\n    return this.#host.autoreport;\r\n  }\r\n\r\n  get autovalidate() {\r\n    return this.#host.autovalidate;\r\n  }\r\n\r\n  get isValid() {\r\n    return this.#host.validity.valid;\r\n  }\r\n\r\n  get disabled() {\r\n    return this.#host.disabled;\r\n  }\r\n\r\n  get required() {\r\n    return this.#host.required;\r\n  }  \r\n\r\n  get value() {\r\n    return this.#host.value;\r\n  }\r\n\r\n  get beep() {\r\n    return this.#host.beep;\r\n  }\r\n\r\n  get block() {\r\n    return this.#host.block;\r\n  }\r\n\r\n  get timeout() {\r\n    return this.#host.timeout;\r\n  }\r\n\r\n  get isVisible() {\r\n    return GSDOM.isVisible(this.#host);\r\n  }\r\n\r\n  validate() {\r\n    const me = this;    \r\n    const sts = me.isValid || me.disabled;\r\n    me.#togglUI(sts);\r\n    return sts;\r\n  }  \r\n    \r\n  onFocus(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const me = this;\r\n    const isTab = e.key === 'Tab';\r\n    if (isTab && !me.validate()) {\r\n        me.#onBlock(e);\r\n        me.#report();\r\n    }\r\n  }\r\n\r\n  onInvalid(e) {\r\n    this.validate();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.#onAutoValidity(e);    \r\n  }\r\n\r\n  onBlur(e) {\r\n    const me = this;\r\n    me.#onBlock(e);\r\n    me.#onAutoValidity(e);\r\n  }\r\n\r\n  #onBlock(e) {    \r\n    const me = this;\r\n    if (me.isValid) return;\r\n    if (me.isVisible && me.block) {\r\n      GSEvents.prevent(e, false, true, false);\r\n      me.#focus();\r\n    }        \r\n  }\r\n\r\n  #onAutoValidity(e) {\r\n    return this.autoreport ? this.#reportValidity() : this.autovalidate ? this.#checkValidity() : this.validate();\r\n  }  \r\n\r\n  #focus() {\r\n    return this.#host.focus();\r\n  }\r\n\r\n  #checkValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.checkValidity();\r\n  }\r\n\r\n  #reportValidity() {\r\n    const me = this;  \r\n    me.validate();\r\n    return me.#host.reportValidity();\r\n  }  \r\n\r\n  async #report() {    \r\n    const me = this;\r\n    if (me.#processing || me.isValid || !me.isVisible) return;\r\n    me.#processing = true;\r\n    if (me.beep) {\r\n      try {\r\n        await me.#beep();\r\n        await GSUtil.timeout(me.timeout);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    me.#processing = false;\r\n  }\r\n\r\n  #togglUI(isValid) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      GSDOM.toggleClass(me.#host, 'is-invalid', !isValid);\r\n    });\r\n  }\r\n\r\n  #beep() {\r\n    return GSBeep.beep(100, 1200, 150, 'triangle');\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSElement } from \"../../GSElement.mjs\";\r\n\r\n/*\r\n* Shared event handling extensions\r\n*/\r\nconst EventsMixin = {\r\n\r\n  [Symbol.for('gs-owner')]() {\r\n    const own = GSDOM.root(this);\r\n    return GSDOM.unwrap(own);\r\n  },\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  [Symbol.for('gs-parent')]() {\r\n    return GSDOM.parentAll(this).filter(x => x instanceof GSElement).next()?.value;\r\n  },\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // cross shadow query\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  },\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  },\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  },\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // event handling helpers\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  },\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  },\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  },\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  },\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e, defaults = true, propagate = true, immediate = true) {\r\n    GSEvents.prevent(e, defaults, propagate, immediate);\r\n  },\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  },\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent: (el, name = '', fn, once = false) => {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  },\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////\r\n\r\n}\r\n\r\n/**\r\n * Function to apply mixin into defiend class\r\n * @param {*} clazz \r\n * @returns \r\n */\r\nexport const mixin = (clazz) => {\r\n  return Object.assign(clazz.prototype || clazz, EventsMixin);\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nexport class FormController {\r\n\r\n  #host = undefined;\r\n  #processing = false;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#processing = false;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = undefined;\r\n    me.#processing = false;\r\n  }\r\n\r\n  hostUpdated() {\r\n    // trigger only first time\r\n    if (!this.#host.hasUpdated) {\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Form reset event\r\n   * @param {*} e \r\n   */\r\n  onReset(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Form submit event\r\n   * @param {*} e \r\n   */\r\n  onSubmit(Event) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Event triggered on new FormData(form)\r\n   * @param {Event} e \r\n   */\r\n  onFormData(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */\r\n  onInvalid(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onChange(e) {\r\n    const me = this;\r\n\r\n  }\r\n\r\n  /**\r\n   * Field event propagated to the form\r\n   * @param {Event} e \r\n   */  \r\n  onBlur(e) {\r\n\r\n  }  \r\n\r\n  get form() {\r\n    return this.#host.form;\r\n  }\r\n\r\n  get inputs() {\r\n    return this.form?.inputs;\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { ValidityController } from './controllers/ValidityController.mjs';\r\nimport { CopySelectController } from './controllers/CopySelectController.mjs';\r\nimport { PasswordController } from './controllers/PasswordController.mjs';\r\nimport { NumberController } from './controllers/NumberController.mjs';\r\nimport { TextController } from './controllers/TextController.mjs';\r\nimport { ComboController } from './controllers/ComboController.mjs';\r\nimport { FormController } from './controllers/FormController.mjs';\r\nimport { DataController } from \"../../controllers/DataController.mjs\";\r\n\r\n/**\r\n * Helper class wizh shared code for form elements to process controllers.\r\n */\r\nexport class ControllerHandler {\r\n\r\n\r\n  #host = undefined;\r\n  #handlers = undefined;\r\n  #controllers = undefined;\r\n\r\n  #copyselect = undefined;\r\n  #typeController = undefined;\r\n  #validityController = undefined;\r\n  #comboController = undefined;\r\n\r\n  #formController = undefined;\r\n  #dataController = undefined;\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      host.on('reset', me.#onReset.bind(me));\r\n      host.on('submit', me.#onSubmit.bind(me));\r\n      host.on('formdata', me.#onFormData.bind(me));\r\n    } else {\r\n      host.on('keydown', me.#onKeyDown.bind(me));\r\n      host.on('keyup', me.#onKeyUp.bind(me));\r\n      host.on('input', me.#onInput.bind(me));\r\n      host.on('focus', me.#onFocus.bind(me));\r\n    }\r\n\r\n    // field events catched at the form level also \r\n    host.on('change', me.#onChange.bind(me));\r\n    host.on('blur', me.#onBlur.bind(me));\r\n    host.on('invalid', me.#onInvalid.bind(me));\r\n\r\n    me.#invoke((c) => c.hostConnected?.());\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.detachListeners(me.#host);\r\n    me.#invoke((c) => c.hostDisconnected?.());\r\n\r\n    me.#controllers?.clear();\r\n\r\n    me.#host = undefined;\r\n    me.#handlers = undefined;\r\n    me.#controllers = undefined;\r\n    me.#comboController = undefined;\r\n\r\n    me.#formController = undefined;\r\n    me.#dataController = undefined;\r\n\r\n    me.#copyselect = undefined;\r\n    me.#typeController = undefined;\r\n    me.#validityController = undefined;\r\n  }\r\n\r\n  hostUpdated(name) {\r\n    const me = this;\r\n    if (!me.#host.hostUpdated) {\r\n      me.#initControllers();\r\n      me.#host.checkValidity?.();\r\n    }\r\n    this.#invoke((c) => c.hostUpdated?.(name));\r\n  }\r\n\r\n  validate() {\r\n    this.#invoke((c) => c.validate?.());\r\n  }\r\n\r\n  addController(controller) {\r\n    if (!controller) return;\r\n    const me = this;\r\n    me.#controllers ??= new Set();\r\n    me.#controllers.add(controller);\r\n    me.#prepare();\r\n    if (me.#host.isConnected) {\r\n      controller.hostConnected?.();\r\n    }\r\n  }\r\n\r\n  removeController(controller) {\r\n    const me = this;\r\n    me.#controllers?.delete(controller);\r\n    me.#prepare();\r\n  }\r\n\r\n  #prepare() {\r\n    const me = this;\r\n    me.#handlers = me.#controllers ? Array.from(me.#controllers).reverse() : [];\r\n  }\r\n\r\n  #invoke(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.#handlers?.forEach(callback);\r\n    }\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#handlers ? this.#handlers.every(c => c.validate ? c.validate(e) : true) : true;\r\n  }\r\n\r\n  #onInvalid(e) {\r\n    this.#invoke(c => c.onInvalid?.(e));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    this.#invoke(c => c.onKeyDown?.(e));\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n    this.#invoke(c => c.onKeyUp?.(e));\r\n  }\r\n\r\n  #onInput(e) {\r\n    this.#invoke(c => c.onInput?.(e));\r\n  }\r\n\r\n  #onFocus(e) {\r\n    this.#invoke(c => c.onFocus?.(e));\r\n  }\r\n\r\n  #onChange(e) {\r\n    this.#invoke(c => c.onChange?.(e));\r\n  }\r\n\r\n  #onBlur(e) {\r\n    this.#invoke(c => c.onBlur?.(e));\r\n  }\r\n\r\n  #onReset(e) {\r\n    this.#invoke(c => c.onReset?.(e));\r\n  }\r\n  \r\n  #onSubmit(e) {\r\n    this.#invoke(c => c.onSubmit?.(e));\r\n  }\r\n  \r\n  #onFormData(e) {\r\n    this.#invoke(c => c.onFormData?.(e));\r\n  }\r\n\r\n  #initControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n\r\n    if (me.isForm) {\r\n      me.#formController ??= new FormController(host);\r\n    } else {\r\n      me.#validityController ??= new ValidityController(host);\r\n      if (me.isInput) me.#initIinputControllers();\r\n      if (me.isTextArea) me.#initTextAreaControllers();\r\n      if (me.isSelect) me.#comboController ??= new ComboController(host);\r\n    }\r\n\r\n    if (host.storage) {\r\n      if (me.isSelect || me.isDataList ) {\r\n        me.#dataController ??= new DataController(host);\r\n      }\r\n    }\r\n  }\r\n\r\n  #initTextAreaControllers() {\r\n      const me = this;\r\n      const host = me.#host;\r\n      me.#typeController ??= new TextController(host);\r\n      me.#copyselect ??= new CopySelectController(host);\r\n  }\r\n\r\n  #initIinputControllers() {\r\n    const me = this;\r\n    const host = me.#host;\r\n    let ok = false;\r\n    switch (host.type) {\r\n      case 'text':\r\n        ok = true;\r\n        me.#typeController ??= new TextController(host);\r\n        break;\r\n      case 'password':\r\n        ok = true;\r\n        me.#typeController ??= new PasswordController(host);\r\n        break;\r\n      case 'number':\r\n        ok = true;\r\n        me.#typeController ??= new NumberController(host);\r\n        break;\r\n    }\r\n    if (ok) {\r\n      me.#copyselect ??= new CopySelectController(host);\r\n    }\r\n  }\r\n\r\n  get tagName() {\r\n    return this.#host?.tagName;\r\n  }\r\n\r\n  get isForm() {\r\n    return (this.tagName === 'FORM');\r\n  }\r\n\r\n  get isTextArea() {\r\n    return (this.tagName === 'TEXTAREA');\r\n  }\r\n\r\n  get isInput() {\r\n    return (this.tagName === 'INPUT');\r\n  }\r\n\r\n  get isSelect() {\r\n    return (this.tagName === 'SELECT');\r\n  }\r\n\r\n  get isDataList() {\r\n    return (this.tagName === 'DATALIST');\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { ButtonTypes } from '../../properties/index.mjs';\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLButtonElement }\r\n */\r\nexport class GSButtonElement extends HTMLButtonElement {\r\n\r\n    static {\r\n        mixin(GSButtonElement);\r\n        GSDOM.define('gs-ext-button', GSButtonElement, { extends: 'button' });\r\n        Object.seal(GSButtonElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n    #formEl = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        //this.#controllerHandler = ???\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#formEl = me.form;\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSEvents.detachListeners(me);\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        me.#formEl = undefined;\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const form = me.#formEl;\r\n        if (me.isSubmit && form) {\r\n            me.attachEvent(form, 'change', me.#onFormState.bind(me));\r\n            me.attachEvent(form, 'invalid', me.#onFormState.bind(me));\r\n            me.on('click', me.#onClick.bind(me));\r\n        }\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'disabled') {\r\n            this.emit('disabled', this.disabled, true, true, true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    get isSubmit() {\r\n        return ButtonTypes.isSubmit(this.type);\r\n    }\r\n\r\n    get isReset() {\r\n        return ButtonTypes.isReset(this.type);\r\n    }\r\n\r\n    /**\r\n     * If the button is part fo the form, check if form is valid\r\n     * ba iterating all field elements and checkin it's validity state.\r\n     * If not part of the form, always return true.\r\n     * We use basic functionality, to support native non-extended form also\r\n     */\r\n    get isValid() {\r\n        const elements = this.#formEl?.elements;\r\n        return elements ? Array.from(elements)\r\n            .filter(el => GSDOM.isFormElement(el))\r\n            .filter(el => el.validity?.valid === false)\r\n            .length === 0\r\n            : true;\r\n    }\r\n\r\n    /**\r\n     * If form is available, monitor elements change events\r\n     * and validate form for validity to update disabled state button[type=\"submit\"]\r\n     * \r\n     * @param {*} e \r\n     */\r\n    #onFormState(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            me.disabled = me.isValid === false;\r\n        }\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.#formEl && me.isSubmit) {\r\n            if (me.isValid) {\r\n                if (me.isSubmit) me.#formEl.requestSubmit();\r\n                if (me.isReset) me.#formEl.reset();\r\n            } else {\r\n                GSEvents.prevent(e);\r\n                me.disabled = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\nimport { MaskController } from './controllers/MaskController.mjs';\r\nimport { MultipatternController } from './controllers/MultipatternController.mjs';\r\nimport { ListController } from './controllers/ListController.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { ControllerHandler } from './ControllerHandler.mjs';\r\nimport { mixin } from './EventsMixin.mjs';\r\n\r\n\r\n/**\r\n * Extended HTMLInputElement with controllers support\r\n * adding various features such as masked input support \r\n */\r\nexport class GSInputElement extends HTMLInputElement {\r\n\r\n  static {\r\n    mixin(GSInputElement);\r\n    GSDOM.define('gs-ext-input', GSInputElement, { extends: 'input' });\r\n    Object.seal(GSInputElement);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    // 'autocopy', 'autofocus', 'autoselect', 'autovalidate','autoreport', 'block', 'beep', 'timeout', \r\n    return ['multipattern', 'mask', 'required', 'disabled'];\r\n  }\r\n\r\n  #controllerHandler = undefined;\r\n  #maskController = undefined;\r\n  #patternController = undefined;\r\n  #listController = undefined;\r\n\r\n  #pattern = undefined;\r\n  #hasUpdated = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.#controllerHandler = new ControllerHandler(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.connectedCallback();\r\n    me.#preupdate();\r\n    me.dataset.value = me.value;\r\n    me.on('change', e => me.dataset.value = me.value);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#controllerHandler?.disconnectedCallback();\r\n    me.#controllerHandler = undefined;\r\n\r\n    me.#maskController = undefined;\r\n    me.#patternController = undefined;\r\n    me.#listController = undefined;\r\n    me.#pattern = undefined;\r\n\r\n    GSEvents.detachListeners(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    const me = this;    \r\n    if (me.isCheckBox && name === 'required' && me.required) return me.required = false;\r\n    me.#preupdate(name);\r\n    me.willUpdate(name, oldValue, newValue);\r\n    me.#controllerHandler?.hostUpdated(name);\r\n  }\r\n\r\n  addController(controller) {\r\n    this.#controllerHandler?.addController(controller);\r\n  }\r\n\r\n  removeController(controller) {\r\n    this.#controllerHandler?.removeController(controller);\r\n  }\r\n\r\n  get owner() {\r\n    return this[Symbol.for('gs-owner')]();\r\n  }\r\n\r\n  /**\r\n   * Get parent GS-* component\r\n   */\r\n  get parentComponent() {\r\n    return this[Symbol.for('gs-parent')]();\r\n  }\r\n\r\n\r\n  get hasUpdated() {\r\n    return this.#hasUpdated;\r\n  }\r\n\r\n  get autocopy() {\r\n    return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autofocus() {\r\n    return this.hasAttribute('autofocus');\r\n  }\r\n\r\n  get autoselect() {\r\n    return this.hasAttribute('autoselect');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls reportValidity\r\n   */\r\n  get autoreport() {\r\n    return this.hasAttribute('autoreport');\r\n  }\r\n\r\n  /**\r\n   * If set, autoamtically calls checkValidity\r\n   */\r\n  get autovalidate() {\r\n    return this.hasAttribute('autovalidate');\r\n  }\r\n\r\n  get beep() {\r\n    return this.hasAttribute('beep');\r\n  }\r\n\r\n  get block() {\r\n    return this.hasAttribute('block');\r\n  }\r\n\r\n  get mask() {\r\n    return GSAttr.get(this, 'mask');\r\n  }\r\n\r\n  get multipattern() {\r\n    return this.#pattern;\r\n    //return GSDOM.getValue(this, 'multipattern');\r\n  }\r\n\r\n  // enable password reveal\r\n  get reveal() {\r\n    return this.hasAttribute('reveal');\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 0);\r\n  }\r\n\r\n  set autocopy(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autofocus(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoselect(value) {\r\n    GSAttr.toggle(this, 'autocopy', value);\r\n  }\r\n\r\n  set autoreport(value) {\r\n    GSAttr.toggle(this, 'autoreport', value);\r\n  }\r\n\r\n  set autovalidate(value) {\r\n    GSAttr.toggle(this, 'autovalidate', value);\r\n  }\r\n\r\n  set beep(value) {\r\n    GSAttr.toggle(this, 'beep', value);\r\n  }\r\n\r\n  set block(value) {\r\n    GSAttr.toggle(this, 'block', value);\r\n  }\r\n\r\n  set mask(value) {\r\n    GSAttr.set(this, 'mask', value);\r\n  }\r\n\r\n  set multipattern(value) {\r\n    let data = value;\r\n    // convert to array if not, and stringify if values are regex\r\n    if (GSUtil.isJsonType(value)) {\r\n      const tmp = (Array.isArray(value) ? value : [value]).map(v => v.source || v.toString?.() || v);\r\n      data = JSON.stringify(tmp);\r\n    }\r\n    GSAttr.set(this, 'multipattern', data);\r\n  }\r\n\r\n  /**\r\n   * Useds only on password type to reveal \r\n   * password with key shortcut ctrl-altt-shift\r\n   */\r\n  set reveal(value) {\r\n    if (this.type === 'password') GSAttr.toggle(this, 'reveal', value);\r\n  }\r\n\r\n  set timeout(value) {\r\n    GSAttr.setAsNum(this, 'timeout', value);\r\n  }\r\n\r\n  get required() {\r\n    return super.required;\r\n  }\r\n\r\n  set required(value) {\r\n    super.required = this.isCheckBox ? false : GSUtil.asBool(value);\r\n  }  \r\n\r\n  get raw() {\r\n    return super.value;\r\n  }\r\n\r\n  get value() {\r\n    return this.#maskController ? this.#maskController.value : super.value;\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = this.mask === val ? '' : val;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  get isCheckBox() {\r\n    return this.type === 'checkbox';\r\n  }\r\n\r\n  get form() {\r\n    const me = this;\r\n    return super.form || me.owner?.form || me.closest?.('form');\r\n  }\r\n\r\n  reset() {\r\n    const me = this;\r\n    me.setCustomValidity('');\r\n    GSDOM.reset(me);\r\n    return me.validate();\r\n  }\r\n\r\n  checkValidity() {\r\n    this.validate();\r\n    return super.checkValidity();\r\n  }\r\n\r\n  reportValidity() {\r\n    this.validate();\r\n    return super.reportValidity();\r\n  }\r\n\r\n  validate(e) {\r\n    return this.#controllerHandler.validate(e);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n\r\n  firstUpdated(changed) {\r\n    const me = this;\r\n    if (me.autofocus) me.focus();\r\n    const data = me.formComponent?.data;\r\n    if (data) GSDOM.fromObject2Element(me, data);\r\n  }\r\n\r\n  willUpdate(changed, oldValue, newValue) {\r\n\r\n    const me = this;\r\n\r\n    if ('mask' === changed) {\r\n      me.#updateMask();\r\n    }\r\n\r\n    if ('multipattern' === changed) {\r\n      me.#updateMultipattern(newValue);\r\n    }\r\n\r\n    if ('list' === changed) {\r\n      me.#updateList();\r\n    }\r\n\r\n    if (changed === 'required' || changed === 'disabled') {\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #preupdate(name) {\r\n    const me = this;\r\n    if (!me.#hasUpdated) {\r\n      me.#updateMask();\r\n      me.#updateMultipattern(me.pattern);\r\n      me.#updateList();\r\n      me.firstUpdated(name);\r\n      me.#controllerHandler?.hostUpdated(name);\r\n      me.#hasUpdated = true;\r\n      me.validate();\r\n    }\r\n  }\r\n\r\n  #updateMask() {\r\n    const me = this;\r\n    if (me.mask && me.type === 'text') {\r\n      me.placeholder = me.mask;\r\n      me.#maskController ??= new MaskController(me);\r\n    } else {\r\n      me.removeController(me.#maskController);\r\n      me.#maskController = null;\r\n    }\r\n  }\r\n\r\n  #updateMultipattern(newValue) {\r\n    const me = this;\r\n    if (GSUtil.isJsonString(newValue)) {\r\n      const tmp = GSUtil.toJson(newValue, []);\r\n      me.#pattern = (Array.isArray(tmp) ? tmp : []).map(v => new RegExp(v));\r\n    } else {\r\n      me.#pattern = undefined;\r\n    }\r\n\r\n    const isMulti = Array.isArray(me.#pattern) && me.#pattern.length > 0;\r\n    const isType = ['text', 'password'].includes(me.type);\r\n    if (isMulti && isType) {\r\n      me.#patternController ??= new MultipatternController(me);\r\n    } else {\r\n      me.removeController(me.#patternController);\r\n      me.#patternController = null;\r\n    }\r\n  }\r\n\r\n  #updateList() {\r\n    const me = this;\r\n    if (me.list) {\r\n      me.#listController ??= new ListController(me);\r\n    } else {\r\n      me.removeController(me.#listController);\r\n      me.#listController = null;\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <textarea is=\"gs-ext-textarea\"></textarea>\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends { HTMLTextAreaElement }\r\n */\r\nexport class GSTextAreaElement extends HTMLTextAreaElement {\r\n\r\n    static {\r\n        mixin(GSTextAreaElement);\r\n        GSDOM.define('gs-ext-textarea', GSTextAreaElement, { extends: 'textarea' });\r\n        Object.seal(GSTextAreaElement);\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.setCustomValidity('');\r\n        GSDOM.reset(me);\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-onwner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }\r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, automatically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set autoselect(value) {\r\n        GSAttr.toggle(this, 'autoselect', value);\r\n    }\r\n\r\n    set autocopy(value) {\r\n        GSAttr.toggle(this, 'autocopy', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        this.value = await GSLoader.loadSafe(url, 'GET', null, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport class GSSelectElement extends HTMLSelectElement {\r\n\r\n    static {\r\n        mixin(GSSelectElement);\r\n        GSDOM.define('gs-ext-select', GSSelectElement, { extends: 'select' });\r\n        Object.seal(GSSelectElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n        me.on('reset', me.#onReset);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    get form() {\r\n        const me = this;\r\n        return super.form || me.owner?.form || me.closest?.('form');\r\n    }\r\n\r\n    /**\r\n     * Support for multiple selections\r\n     */\r\n    get values() {\r\n        return Array.from(this.selectedOptions).map(el => el.value);\r\n    }\r\n\r\n    /**\r\n     * String array ov values to match for selection\r\n     */\r\n    set values(values) {\r\n        values ??= [];\r\n        if (GSUtil.isString(values)) values = values.split(',');\r\n        Array.from(el.options).forEach(el => el.selected = values.indexOf(el.value) > -1);\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    validate(e) {\r\n        return this.#controllerHandler.validate(e);\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }\r\n        \r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {text: v, value: v}});\r\n        me.apply(data);\r\n    }\r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n    #onReset(e) {\r\n        this.reset();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListElement class\r\n * @module components/ext/GSDataListElement\r\n */\r\n\r\n\r\nimport { GSID } from \"../../base/GSID.mjs\";\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSUtil } from \"../../base/GSUtil.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { mixin } from \"./EventsMixin.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport class GSDataListElement extends HTMLDataListElement {\r\n\r\n    static {\r\n        mixin(GSDataListElement);\r\n        GSDOM.define('gs-ext-datalist', GSDataListElement, { extends: 'datalist' });\r\n        Object.seal(GSDataListElement);\r\n    }\r\n\r\n    #data = [];\r\n\r\n    #controllerHandler = undefined;\r\n    #hasUpdated = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['url'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#controllerHandler?.connectedCallback();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n   \r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        if (me.autofocus) me.focus();\r\n        const data = me.form?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n\r\n        if (changed === 'url') this.load(newValue);\r\n        if (changed === 'required' || changed === 'disabled') {\r\n            this.validate();\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n    \r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get asJSON() {\r\n        return this.query('option').forEach(el => GSDOM.fromElement2Object(el, {}));\r\n    }\r\n\r\n    set asJSON(data) {\r\n        this.apply(data);\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage');\r\n    }\r\n\r\n    /**\r\n     * Storage records key to use to generate unique list\r\n     */\r\n    get key() {\r\n        return GSAttr.get(this, 'key', 0);\r\n    }   \r\n\r\n    /**\r\n     * For DataController read callback\r\n     * Convert record data to html JSON format \r\n     * \r\n     * @param {Array} data \r\n     */\r\n    onDataRead(data = []) {\r\n        const me = this;\r\n        const key = me.key;\r\n        data = Array.isArray(data) ? data : [data];\r\n        data = data.map(o => GSUtil.isString(o) ? o : o[key])\r\n            .filter(v => v)\r\n            .map(v => {return {value: v}});\r\n        me.apply(data);\r\n    }   \r\n\r\n    /**\r\n     * Load html definition in JSON format\r\n     * @param {string} url \r\n     * @returns \r\n     */\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.apply(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        queueMicrotask(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = { value: o };\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        if (o.text) {\r\n            seg.push('>')\r\n            seg.push(o.text);\r\n            seg.push('</option>')\r\n        } else {\r\n            seg.push('>')\r\n        }\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport { GSDOM } from \"../../base/GSDOM.mjs\";\r\nimport { GSEvents } from \"../../base/GSEvents.mjs\";\r\nimport { GSAttr } from \"../../base/GSAttr.mjs\";\r\nimport { ControllerHandler } from \"./ControllerHandler.mjs\";\r\nimport { mixin } from './EventsMixin.mjs';\r\nimport { GSLog } from \"../../base/GSLog.mjs\";\r\nimport { GSLoader } from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Extended native forn with additional functionality\r\n * \r\n * @class\r\n * @extends { HTMLFormElement }\r\n */\r\nexport class GSFormElement extends HTMLFormElement {\r\n\r\n    static {\r\n        mixin(GSFormElement);\r\n        GSDOM.define('gs-ext-form', GSFormElement, { extends: 'form' });\r\n        Object.seal(GSFormElement);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['disabled', 'url'];\r\n    }\r\n\r\n    #hasUpdated = false;\r\n    #controllerHandler = undefined;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#controllerHandler = new ControllerHandler(this);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.connectedCallback?.();\r\n        me.#preupdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#controllerHandler?.disconnectedCallback?.();\r\n        me.#controllerHandler = undefined;\r\n        GSEvents.detachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        me.#preupdate(name);\r\n        me.willUpdate(name, oldValue, newValue);\r\n        me.#controllerHandler?.hostUpdated?.(name);\r\n    }\r\n\r\n    #preupdate(name) {\r\n        const me = this;\r\n        if (!me.#hasUpdated) {\r\n            me.firstUpdated(name);\r\n            me.#controllerHandler?.hostUpdated?.(name);\r\n            me.#hasUpdated = true;\r\n        }\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        const me = this;\r\n        const data = me.formComponent?.data;\r\n        if (data) GSDOM.fromObject2Element(me, data);\r\n        if (me.autofocus) me.focus();\r\n    }\r\n\r\n    willUpdate(changed, oldValue, newValue) {\r\n        const me = this;\r\n        if (changed === 'url') me.load(newValue);\r\n        if (changed === 'disabled') {\r\n            me.disable ? me.disable(true) : me.enable(true);\r\n        }\r\n    }\r\n\r\n    addController(controller) {\r\n        this.#controllerHandler?.addController(controller);\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllerHandler?.removeController(controller);\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        // reset non shadeowed\r\n        super.reset();\r\n        // reset shadowed\r\n        me.inputs\r\n            .filter(el => GSDOM.isShadowed(el))\r\n            .forEach(el => GSDOM.reset(el));\r\n        me.validate();\r\n    }\r\n\r\n    checkValidity() {\r\n        this.validate();\r\n        return super.checkValidity();\r\n    }\r\n\r\n    reportValidity() {\r\n        this.validate();\r\n        return super.reportValidity();\r\n    }\r\n\r\n    checkValidity() {\r\n        return super.checkValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.checkValidity());\r\n    }\r\n\r\n    reportValidity() {\r\n        return super.reportValidity() &&\r\n            this.inputs\r\n                .filter(el => !el.disabled)\r\n                .every(el => el.reportValidity());\r\n    }\r\n    /**\r\n     * Validate each individual field, return true only if all fields are valid\r\n     * @returns \r\n     */\r\n    validate(e) {\r\n        return this.inputs\r\n            .filter(el => !el.disabled)\r\n            .every(c => c.validate ? c.validate(e) : true);\r\n    }\r\n\r\n    /**\r\n     * Find field by name\r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    field(name) {\r\n        return name && this.inputs.filter(f => f.name === name);\r\n    }\r\n\r\n    disable(all = false) {\r\n        GSDOM.disableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = true;\r\n    }\r\n\r\n    enable(all = false) {\r\n        GSDOM.enableInput(this, 'input, textarea, select', all, 'gs-ext-form');\r\n        const btn = this.submitButton;\r\n        if (btn) btn.disabled = false;\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        try {\r\n            const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n            this.onDataRead(data);\r\n        } catch (error) {\r\n            console.error('Failed to load data:', error);\r\n            GSLog.error(this, error);\r\n        }\r\n    }\r\n\r\n    #button(type) {\r\n        return this.queryAll(`button[type=\"${type}\"]`, true);\r\n    }\r\n\r\n    #childrens(shadow = false) {\r\n        return this.queryAll('input,select,output,textarea', shadow);\r\n    }\r\n\r\n    get owner() {\r\n        return this[Symbol.for('gs-owner')]();\r\n    }\r\n\r\n    get parentComponent() {\r\n        return this[Symbol.for('gs-parent')]();\r\n    }    \r\n\r\n    get hasUpdated() {\r\n        return this.#hasUpdated;\r\n    }\r\n\r\n    get asJSON() {\r\n        const data = {};\r\n        this.inputs.forEach(field => GSDOM.fromElement2Object(field, data));\r\n        return data;\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.inputs.forEach(field => GSDOM.fromObject2Element(field, data));\r\n        me.validate();\r\n    }\r\n        \r\n    /**\r\n     * If set, autoamtically calls reportValidity\r\n     */\r\n    get autoreport() {\r\n        return this.hasAttribute('autoreport');\r\n    }\r\n\r\n    /**\r\n     * If set, autoamtically calls checkValidity\r\n     */\r\n    get autovalidate() {\r\n        return this.hasAttribute('autovalidate');\r\n    }\r\n\r\n    get block() {\r\n        return this.hasAttribute('block');\r\n    }\r\n\r\n    get beep() {\r\n        return this.hasAttribute('beep');\r\n    }\r\n\r\n    get timeout() {\r\n        return GSAttr.getAsNum(this, 'timeout', 0);\r\n    }\r\n\r\n    set autoreport(value) {\r\n        GSAttr.toggle(this, 'autoreport', value);\r\n    }\r\n\r\n    set autovalidate(value) {\r\n        GSAttr.toggle(this, 'autovalidate', value);\r\n    }\r\n\r\n    set block(val = false) {\r\n        GSAttr.toggle(this, 'block', val);\r\n    }\r\n\r\n    set beep(val = false) {\r\n        GSAttr.toggle(this, 'beep', val);\r\n    }\r\n\r\n    set timeout(val = 0) {\r\n        return GSAttr.setAsNum(this, 'timeout', val);\r\n    }\r\n\r\n    get submitButton() {\r\n        return this.#button('submit');\r\n    }\r\n\r\n    get resetButton() {\r\n        return this.#button('reset');\r\n    }\r\n\r\n    /**\r\n     * Pickup all form elements, including custom ones\r\n     */\r\n    get elements() {\r\n        return super.elements;\r\n    }\r\n\r\n    /**\r\n     * Get all form attached native fields unwrapepd from GSWebComponents\r\n     */\r\n    get fields() {\r\n        return Array.from(this.elements).map(el => el.field || el);\r\n    }\r\n\r\n    /**\r\n     * Find all inputs by querying across inner shadow \r\n     */\r\n    get inputs() {\r\n        return this.#childrens(true);\r\n    }\r\n\r\n    get invalid() {\r\n        return this.inputs\r\n        .filter(el => !el.disabled)\r\n        .filter(el => !el.validity.valid);\r\n    }\r\n\r\n    get isValid() {\r\n        return this.invalid.length === 0;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html, ifDefined, repeat } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSBreadcrumbElement extends GSElement {\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Array },\r\n    color: { ...color },\r\n    divider: { reflect: true },\r\n    spacing: { reflect: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.spacing = 1;\r\n    me.divider = 'chevron-right';\r\n    me.#updateChildren();\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    this.#updateChildren();\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<nav part=\"base\" class=\"breadcrumb\" @click=\"${me.#onClick}\" dir=\"${ifDefined(me.direction)}\"><slot>\r\n      ${repeat(me.data || [], (item) => item, (item) => html`\r\n        <gs-breadcrumb-item  \r\n        href=\"${item.href}\"\r\n        color=\"${item.color}\"\r\n        .data=${item}     \r\n        .active=${item.active}\r\n        .divider=\"${item.divider || me.divider}\"\r\n        .spacing=\"${item.spacing || me.spacing}\">\r\n          ${item.$text}\r\n        </gs-breadcrumb-item>\r\n      `)}\r\n    </slot></nav>`;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  #updateChildren() {\r\n    const me = this;\r\n    me.queryAll('gs-breadcrumb-item').forEach(el => {\r\n      el.divider = me.divider;\r\n      el.spacing = me.spacing;\r\n      el.color = me.color;\r\n    });\r\n  }\r\n\r\n  #onClick(e) {\r\n    const el = e.target.closest('gs-bradcrumb-item');\r\n    el?.handle(e);\r\n  } \r\n\r\n  static {\r\n    this.define('gs-breadcrumb');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSBreadcrumbItemElement extends GSElement {\r\n\r\n  static properties = {\r\n    href: {},\r\n    color: { ...color },\r\n    data: { state: true, type: Object },\r\n    active: { reflect: true, type: Boolean },\r\n    divider: { state: true, type: Boolean },\r\n    spacing: { state: true, type: Number },\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = {};\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div part=\"base\" class=\"breadcrumb-item ${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\">\r\n        <span part=\"prefix\"><slot name=\"prefix\"></slot></span>        \r\n        ${me.#label}\r\n        <span part=\"suffix\"><slot name=\"suffix\"></slot></span>\r\n        <span part=\"separator\"><slot name=\"separator\">${me.#separator}</slot></span>\r\n      </div>`;\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const css = {\r\n      ...super.renderClass(),\r\n      'active': me.active,\r\n    }\r\n    return css;\r\n  }\r\n\r\n  get #label() {\r\n    const me = this;\r\n    if (me.active) return html`<slot></slot>`;\r\n    me.data.url = me.data.url || me.href;\r\n    me.data.part = 'label';\r\n    return GSLinklement.generate(me.data, {})\r\n  }\r\n\r\n  get #separator() {\r\n    const me = this;\r\n    return me.nextElementSibling && me.divider ? html`<gs-icon size=\"7\" color=\"${me.color}\" css=\"mx-${me.spacing}\" name=\"${me.divider}\"></gs-icon>` : '';\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.query('a', true), e);\r\n  }\r\n\r\n  static {\r\n    this.define('gs-breadcrumb-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport { classMap, createRef, ref, css, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSAttachment } from './Attachment.mjs';\r\nimport { GSEvents } from '../../base/GSEvents.mjs';\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport class GSFileBoxElement extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    static properties = {\r\n        cssList: { attribute: 'css-list' },\r\n        cssLabel: { attribute: 'css-label' },\r\n        cssInput: { attribute: 'css-input' },\r\n\r\n        multiple: { reflect: true, type: Boolean },\r\n        directory: { reflect: true, type: Boolean },\r\n        name: {},\r\n        title: {},\r\n        accept: {},\r\n        filter: {},\r\n        maxFileSize: { reflect: true, attribute: 'max-file-size', type: Number }, // New property\r\n    }\r\n\r\n    #listEl = createRef();\r\n    #fileEl = createRef();\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = GSFileBoxElement.CSS;\r\n        this.cssInput = 'd-none';\r\n        this.multiple = true;\r\n        this.title = GSFileBoxElement.TITLE;\r\n        this.filter = '^image\\/(gif|png|jpeg)$'\r\n        this.directory = false;\r\n        this.maxFileSize = 0; // Default to 0, meaning no limit\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div part=\"border\" class=\"${classMap(me.renderClass())}\"\r\n            dir=\"${ifDefined(me.direction)}\"\r\n            @click=\"${me.#onClick}\"\r\n            @dragenter=\"${me.#onDragenter}\"\r\n            @dragover=\"${me.#onDragenter}\"\r\n            @dragleave=\"${me.#onDragleave}\"\r\n            @drop=\"${me.#onDrop}\"\r\n            @paste=\"${me.#onPaste}\"\r\n            @change=\"${me.#onChange}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.translate(me.title)}</label>\r\n            <input ${ref(me.#fileEl)}  part=\"input\" \r\n                type=\"file\" accept=\"${me.accept}\" \r\n                class=\"${me.cssInput}\" \r\n                name=\"${me.name}\" \r\n                id=\"${me.name}\" \r\n                ${me.multiple ? \"multiple\" : \"\"} \r\n                ${me.directory ? \"directory webkitdirectory\" : \"\"}>\r\n            <pre ${ref(me.#listEl)} part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    get listEl() {\r\n        return this.#listEl.value;\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.#fileEl.value;\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        // Filter out files that exceed the maxFileSize\r\n        const validAttachments = me.maxFileSize > 0 \r\n            ? attachments.filter(a => a.file.size <= me.maxFileSize)\r\n            : attachments;\r\n\r\n        const accepted = me.emit('accept', { attachments: validAttachments }, true, false, true);\r\n        if (accepted && validAttachments.length) {\r\n            me.#accept(validAttachments);\r\n            me.emit('accepted', { attachments: validAttachments }, true);\r\n        }\r\n    }\r\n\r\n    static styles = css`\r\n        .dash {\r\n            border-style: var(--gs-fieldbox-border, dashed) !important;\r\n            border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n        }\r\n        input[type=file] {\r\n            color : var(--gs-fieldbox-color, transparent);\r\n        } \r\n        input[type=file]::file-selector-button {}             \r\n        input[type=file]::file-selector-button:hover {}`;\r\n\r\n    static {\r\n        this.define('gs-filebox');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/TimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSTimeFormat extends GSElement {\r\n\r\n    static properties = {\r\n        interval: {reflect:true, type:Number},\r\n        language: {reflect:true},\r\n    }\r\n\r\n    #id = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.interval = 1;\r\n        this.language = GSUtil.language;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    renderUI() {\r\n        const date = new Date();\r\n        return date.toLocaleTimeString(this.language);\r\n    }    \r\n\r\n    start() {\r\n        const me = this;\r\n        if (me.interval >0 && me.#id === 0) {\r\n            me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n        } else {\r\n            me.requestUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n        this.#id = 0;\r\n    }\r\n    \r\n    #update() {\r\n       requestAnimationFrame(() => this.requestUpdate());\r\n    }\r\n\r\n    static {\r\n        this.define('gs-time-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/DateFormat\r\n */\r\n\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDate } from '../../base/GSDate.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSDateFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        format: {},\r\n        language: {},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = navigator.language;\r\n        this.value = new Date();\r\n    }\r\n\r\n    renderUI() {\r\n        return this.result;\r\n    }    \r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.date;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.language, me.dataset).format(val);\r\n    }\r\n\r\n    get date() {\r\n        const me = this;\r\n        const o = Date.parse(me.value || new Date());\r\n        const date = new GSDate(o);\r\n        date.language = me.language;\r\n        return date;\r\n    }\r\n\r\n\r\n    static {\r\n        this.define('gs-date-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/YearFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSYearFormat extends GSElement {\r\n\r\n    static properties = {\r\n        offset: {type :Number},\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.offset = 0;\r\n    }\r\n\r\n    renderUI() {\r\n        return this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        this.define('gs-year-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/CurrencyFormat\r\n */\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport class GSCurrencyFormat extends GSElement {\r\n\r\n    static properties = {\r\n        value: {},\r\n        currency: {},\r\n        language: {},\r\n    }\r\n\r\n    renderUI() {\r\n        return this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.language, me.#options).format(me.value);\r\n    }\r\n\r\n    static {\r\n        this.define('gs-currency-format');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { GSCacheStyles } from \"../../base/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepElement class\r\n * @module components/steps/GSStepElement\r\n */\r\n\r\nimport { html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepElement extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-primary';\r\n    static COMPLETED = 'text-bg-secondary';\r\n\r\n    static ICON_CSS = 'border rounded-circle fs-1';\r\n    static TITLE_CSS = 'mb-0 fs-6 mt-3 fw-bold';\r\n\r\n    static properties = {\r\n        title: {},\r\n        icon: {},\r\n        color: {},\r\n        iconCSS: { attribute: 'icon-css' },\r\n        titleCSS: { attribute: 'title-css' },\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const clazz = GSStepElement;\r\n        this.icon = clazz.INACTIVE;\r\n        this.iconCSS = clazz.ICON_CSS;\r\n        this.titleCSS = clazz.TITLE_CSS;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"step d-block w-100 text-center mb-4\"  dir=\"${ifDefined(me.direction)}\">\r\n            <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color || GSStepElement.INACTIVE}\">\r\n                    ${me.#renderIcon()}\r\n                </div>\r\n            </div>\r\n            <div class=\"step-title ${me.titleCSS}\">${me.translate(me.title)}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    #renderIcon() {\r\n        return this.icon ? html`<gs-icon name=\"${this.icon}\"></gs-icon>` : html`<slot name=\"icon\"></slot>`;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-step');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStepsElement class\r\n * @module components/steps/GSStepsElement\r\n */\r\n\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSStepStyle } from \"./StepStyle.mjs\";\r\nimport GSStepElement from './Step.mjs';\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {Component}\r\n */\r\nexport default class GSStepsElement extends GSElement {\r\n\r\n    static CSS = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n\r\n    #index = -1;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldUpdate(changedProperties) { \r\n        return this.steps.length > 0;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div class=\"${classMap(me.renderClass())}\"  dir=\"${ifDefined(me.direction)}\"><slot></slot></div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        return this.mapCSS(GSStepsElement.CSS, super.renderClass());\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step', false, true);\r\n    }\r\n\r\n    get length() {\r\n        return this.steps.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length - 1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isLast) return false;\r\n        if (me.#index > - 1) me.current.color = GSStepElement.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.steps.length === 0) return;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStepElement.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStepElement.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStepElement.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStepElement.SELECTED;\r\n        });\r\n    }\r\n\r\n    static {\r\n        GSStepStyle.style;\r\n        this.define('gs-steps', GSStepsElement);\r\n    }\r\n\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSAttr } from '../../base/GSAttr.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\n\r\nexport class GSNotificationElement extends GSElement {\r\n\r\n    static TOP_START = \"position-fixed top-0 start-0\";\r\n    static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n    static TOP_END = \"position-fixed top-0 end-0\";\r\n\r\n    static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n    static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n    static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n    \r\n    static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n    static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n    static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n    static DEFAULT = GSNotificationElement.BOTTOM_END;\r\n\r\n    static properties = {\r\n        position: { reflect: true },\r\n        native: { reflect: true, type: Boolean }\r\n    };\r\n\r\n    #list = new Set();\r\n\r\n    constructor() {\r\n        super();\r\n        this.css = 'p-3';\r\n        this.position = GSNotificationElement.DEFAULT;\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n            class=\"toast-container z-10k ${classMap(me.renderClass())}\">\r\n            <slot></slot>\r\n        </div>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        return me.mapCSS(me.#positionCSS, super.renderClass());\r\n    }    \r\n\r\n    get #positionCSS() {\r\n        const clazz = GSNotificationElement;\r\n        const val = this.position || clazz.DEFAULT;\r\n        return val.indexOf('_') > 0 && clazz[val] ? clazz[val] : val;\r\n    }\r\n\r\n    clear() {\r\n        this.queryAll('gs-toast').forEach(el => el.dismiss());\r\n    }\r\n\r\n    info(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n    }\r\n\r\n    success(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n    }\r\n\r\n    warn(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n    }\r\n\r\n    danger(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n    }\r\n\r\n    primary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n    }\r\n\r\n    secondary(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n    }\r\n\r\n    dark(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n    }\r\n\r\n    light(title, message, closable, timeout, delay, options) {\r\n        return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n    }\r\n\r\n    /**\r\n     * Main function to show notification. \r\n     * It has support for Bootstrap based and web based notifications.\r\n     * \r\n     * @async\r\n     * @param {String} title Notification title\r\n     * @param {String} message Notification message\r\n     * @param {String} css CSS styling (web only)\r\n     * @param {Boolean} closable Can user close it (web only)\r\n     * @param {Number} timeout Timeout after which to close notification  (default 2 sec)\r\n     * @param {Number} delay Timeout after which to show notification (default 1 sec)\r\n     * @param {Object} options Options for native Notification\r\n     * @returns {Promise<Notification|GSToast>}\r\n     */\r\n    async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n        if (!message) return;\r\n        const me = this;\r\n        if (me.native) {\r\n            let sts = await GSNotificationElement.requestPermission();\r\n            if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n            if (sts) return sts;\r\n        }\r\n        return me.#showWeb(title, message, css, closable, timeout, delay);\r\n    }\r\n\r\n    #showWeb(title, message, css, closable, timeout, delay) {\r\n        const me = this;\r\n        const tpl = `<gs-toast css=\"${css}\"  opened ${closable ? 'closable' : ''} timeout=\"${timeout}\"  delay=\"${delay}\" message=\"${message}\" title=\"${title}\" language=\"${me.language}\" ></gs-toast>`;\r\n        const el = GSDOM.parse(tpl, true);\r\n        requestAnimationFrame(async () => {\r\n            await me.#delay(delay);\r\n            const toast = me.#dialogToast;\r\n            if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n            toast.appendChild(el);\r\n        });\r\n        return el;\r\n    }\r\n\r\n    async #showNative(title, message, timeout, delay, options = {}) {\r\n        const me = this;\r\n        await me.#delay(delay);\r\n        options.body = options.body || message;\r\n        const notification = new Notification(title, options);\r\n        me.#list.add(notification);\r\n        const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n        notification.addEventListener('close', callback);\r\n        if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n        return notification;\r\n    }\r\n\r\n    get #dialogToast() {\r\n        const dlg = customElements.get('gs-dialog')?.top;\r\n        return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n    }\r\n\r\n    async #delay(delay = 0) {\r\n        if (GSUtil.isNumber(delay) && delay > 0) await GSUtil.timeout(delay * 1000);\r\n    }\r\n\r\n    #clearNative() {\r\n        const me = this;\r\n        me.notification.close();\r\n        me.owner.#list.delete(me.notification);\r\n        if (me.notification.iid) clearTimeout(me.notification.iid);\r\n    }\r\n\r\n    /**\r\n     * Clear all triggered notifications\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n        me.#list.forEach(nn => nn.close());\r\n        me.#list.clear();\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is supported\r\n     * @returns {Boolean} \r\n     */\r\n    static get isNativeSupported() {\r\n        return \"Notification\" in self;\r\n    }\r\n\r\n    /**\r\n     * Check if native notification is allowed\r\n     * @returns {Boolean} \r\n     */\r\n    static get isGranted() {\r\n        return Notification.permission === \"granted\";\r\n    }\r\n\r\n    /**\r\n     * Request useage for browser native notification\r\n     * \r\n     * @async\r\n     * @returns {Promise<boolean>} Return granted status\r\n     */\r\n    static async requestPermission() {\r\n        const clazz = GSNotificationElement;\r\n        if (!clazz.isNativeSupported) return false;\r\n        if (!clazz.isGranted) await Notification.requestPermission();\r\n        return clazz.isGranted;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-notification');\r\n    }\r\n}","\r\nimport { classMap, html, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { GSUtil } from '../../base/GSUtil.mjs';\r\nimport { GSNotificationElement } from './Notification.mjs';\r\n\r\nexport class GSToastElement extends GSElement {\r\n\r\n    static properties = {\r\n        closable: { reflect: true, type: Boolean },\r\n        opened: { reflect: true, type: Boolean },\r\n        message: { reflect: true },\r\n        title: { reflect: true },\r\n        delay: { reflect: true, type: Number },\r\n        timeout: { reflect: true, type: Number }\r\n    }\r\n\r\n    #pending = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.timeout = 2;\r\n        me.delay = 2;\r\n        me.auto = true; \r\n    }\r\n\r\n    shouldUpdate(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.delay > 0 && me.opened && visibilityChange) {\r\n            me.#pending = true;\r\n            me.#pendingUpdate();\r\n        }\r\n        return me.#validParent && (!me.#pending);\r\n    }\r\n\r\n    #isVisibilityChanged(changedProperties) {\r\n        return changedProperties.has('opened');\r\n    }\r\n\r\n    async #pendingUpdate() {\r\n        const me = this;\r\n        await GSUtil.timeout(me.delay * 1000);\r\n        me.#pending = false;\r\n        me.requestUpdate();\r\n    }\r\n\r\n    async updated(changedProperties) {\r\n        const me = this;\r\n        const visibilityChange = me.#isVisibilityChanged(changedProperties);\r\n        if (me.timeout > 0 && me.opened) {\r\n            await GSUtil.timeout(me.timeout * 1000);\r\n            me.opened = false;\r\n        } else if (visibilityChange && !me.opened) { \r\n            me.remove();\r\n        };\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return me.title ? me.#renderWithHeader() : me.#renderSimple();\r\n    }\r\n\r\n    #renderWithHeader() {\r\n        const me = this;\r\n        return html`\r\n        <div dir=\"${ifDefined(me.direction)}\"\r\n            class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n            <div class=\"toast-header\">\r\n                ${me.translate(me.title)}\r\n                <slot name=\"header\"></slot>\r\n                ${me.closable ? me.#button : ''}\r\n            </div>\r\n            <div class=\"toast-body\">\r\n                ${me.translate(me.message)}\r\n                <slot name=\"body\"></slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    #renderSimple() {\r\n        const me = this;\r\n        return html`\r\n        <div class=\"mt-1 mb-1 toast fade ${classMap(me.renderClass())}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.translate(me.message)}\r\n              <slot name=\"body\"></slot>\r\n              </div>\r\n              ${me.closable ? me.#button : ''}\r\n          </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const css = {\r\n            ...super.renderClass(),\r\n            'show': me.opened,\r\n        }\r\n        return css;\r\n    }\r\n\r\n    dismiss() {\r\n        this.opened = false;\r\n    }\r\n\r\n    get #button() {\r\n        const me = this;\r\n        return html`<button type=\"button\" class=\"btn-close me-2 m-auto\" @click=\"${me.dismiss}\"></button>`;\r\n    }\r\n\r\n    get #validParent() {\r\n        const isToast = GSDOM.hasClass(this.parentElement, 'toast-container');\r\n        const isNotify = this.parentElement instanceof GSNotificationElement;\r\n        return isToast || isNotify;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-toast');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Controller managing data tree navigation.\r\n * Controller is added to every gs-tree-node and \r\n * reacts on Tree node changes to update UI\r\n */\r\nexport class AbstractTreeController {\r\n\r\n    #host;\r\n    #node;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        host.addController(me);\r\n    }\r\n    \r\n    hostConnected() {\r\n        const me = this;\r\n        me.#node = me.#host.node;\r\n        me.#addNodeController(me);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        const me = this;\r\n        me.#removeNodeController(me);\r\n        me.#host.removeController(me);\r\n    }\r\n\r\n    // before rendering\r\n    hostUpdate() {\r\n        const me = this;\r\n        const oldNode = me.#node;\r\n        me.#node = me.#host.node;\r\n        if (oldNode != me.#node) {\r\n            me.#removeNodeController(me);\r\n            me.#addNodeController(me);\r\n        }\r\n    }\r\n\r\n    // link Tree node callbacks with controller and component\r\n    #addNodeController(controller) {\r\n        this.#host.node?.addController?.(controller);\r\n    }\r\n\r\n    // unlink Tree node callbacks with controller and component\r\n    #removeNodeController(controller) {\r\n        this.#node?.removeController?.(controller);\r\n    }\r\n\r\n    host(node) {\r\n        return node[Symbol.for('gs-element')] || this.#host;\r\n    }\r\n\r\n    match(node) {\r\n        const host = this.host(node);\r\n        return host?.node === node;\r\n    }\r\n\r\n    get store() {\r\n        return this.#host.dataController?.store;\r\n    }\r\n\r\n    requestUpdate(node) {\r\n        if (this.match(node)) this.host(node).requestUpdate();\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { AbstractTreeController } from './AbstractTreeController.mjs';\r\n\r\n/**\r\n * Controller managing data TreeNode callbacks to reflect UI.\r\n */\r\nexport class TreeController extends AbstractTreeController {\r\n\r\n    constructor(host) {\r\n        super(host);\r\n    }\r\n\r\n    #toggleState(node, state = false) {\r\n        const el = this.host(node);\r\n        if (el) el.loading = state;\r\n    }\r\n\r\n    // Tree controller callbacks\r\n    onLoad(node) {\r\n        this.#toggleState(node, true);\r\n    }\r\n\r\n    onRefresh(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onAppend(node, addedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onInsert(node, insertedNode) {\r\n        this.#toggleState(node);\r\n        this.requestUpdate(node.root);\r\n    }\r\n\r\n    onExpand(node) {\r\n        const store = this.store;\r\n        if (store) {\r\n            store.onExpand(node);\r\n        } else {\r\n            this.requestUpdate(node);\r\n        }\r\n    }\r\n\r\n    onCollapse(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onFocusChanged(node) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onSelectionChanged(node, selectedNode) {\r\n        this.requestUpdate(node);\r\n    }\r\n\r\n    onRemove(node) {\r\n        if (this.match(node)) this.host(node).remove();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { html } from '../../lib.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSLinklement } from '../Link.mjs';\r\nimport { GSAttributeHandler } from '../../base/GSAttributeHandler.mjs';\r\n\r\nexport class GSTreeItemElement extends GSElement {\r\n\r\n  /*\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n    */\r\n\r\n  static properties = {\r\n    loading: { state: true },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode }\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.flat = true;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('node')) this.node[Symbol.for('gs-element')] = this;\r\n  }\r\n\r\n  updated() {\r\n    if (this.focused) this.#link?.focus();\r\n    this.dataset.visible = this.visible;\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const opt = me.value || {};\r\n    opt.tooltip = me.translate(opt.tooltip)\r\n    opt.title = me.translate(opt.title)\r\n    const before = me.loading ? me.#renderSpinner(node.level) : me.#renderIcon(node.level);\r\n    return GSLinklement.generate(opt, me.renderClass(), before);\r\n  }\r\n\r\n  renderClass() {\r\n    const me = this;\r\n    const opt = {\r\n      'list-group-item': true,\r\n      'list-group-item-action': true,\r\n      'user-select-none  ': true,\r\n      'border-0': me.#border ? false : true,\r\n      'gs-hide': !me.visible\r\n    };\r\n    return me.mapCSS(me.#cssFocus, me.mapCSS(me.#cssSelected, opt, me.selected && !me.multiselect), me.focused);\r\n  }\r\n\r\n  /**\r\n   * Toggle folder\r\n   */\r\n  toggle() {\r\n    this.opened ? this.close() : this.open();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open() {\r\n    this.#status(true);\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   */\r\n  close() {\r\n    this.#status(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle selection state\r\n   */\r\n  toggleSelection() {\r\n    this.select(!this.selected);\r\n  }\r\n\r\n  focus(val = true) {\r\n    if (val) super.focus();\r\n    this.focused = val == true;\r\n  }\r\n\r\n  select(val = true) {\r\n    this.selected = val == true;\r\n  }\r\n\r\n  handle(e) {\r\n    GSAttributeHandler.process(this.#link, e);\r\n    /*\r\n    const me = this;\r\n    const isIcon = e.target.tagName === 'GS-ICON';\r\n    if (me.multiselect && isIcon) {\r\n      me.toggleSelection();\r\n    } else {\r\n      GSAttributeHandler.process(me.#link, e);\r\n    }\r\n    */\r\n  }\r\n\r\n  get #link() {\r\n    return this.query('a');\r\n  }\r\n\r\n  get isLeaf() {\r\n    return this.node?.isLeaf;\r\n  }\r\n\r\n  get isFolder() {\r\n    return !this.isLeaf;\r\n  }\r\n\r\n  get key() {\r\n    return this.node?.key;\r\n  }\r\n\r\n  get value() {\r\n    return this.node?.value || {};\r\n  }\r\n\r\n  get level() {\r\n    return this.node?.level || -1;\r\n  }\r\n\r\n  get focused() {\r\n    return this.node?.focused;\r\n  }\r\n\r\n  get visible() {\r\n    const parent = this.parent;\r\n    return parent?.opened || parent?.level === -1;\r\n  }\r\n\r\n  get parent() {\r\n    return this.node?.parent;\r\n  }\r\n\r\n  get parentItem() {\r\n    const item = this.parent?.[Symbol.for('gs-element')];\r\n    return item instanceof GSTreeItemElement ? item : undefined;\r\n  }\r\n\r\n  set focused(val) {\r\n    val = val === true;\r\n    this.node.focused = val;\r\n  }\r\n\r\n  get selected() {\r\n    return this.node?.selected;\r\n  }\r\n\r\n  set selected(val) {\r\n    val = val === true;\r\n    const me = this;\r\n    if (me.isFolder && me.owner.leaf) val = false;\r\n\r\n    if (me.multiselect) {\r\n      if (val) {\r\n        me.node.selectAll();\r\n      } else {\r\n        me.node.deselectAll();\r\n      }\r\n    } else {\r\n      me.node.selected = val;\r\n    }\r\n  }\r\n\r\n  get opened() {\r\n    return this.node?.opened;\r\n  }\r\n\r\n  set opened(val) {\r\n    this.#status(val === true);\r\n  }\r\n\r\n  get owner() {\r\n    return this.closest('gs-tree');\r\n  }\r\n\r\n  get multiselect() {\r\n    return this.owner.multiselect;\r\n  }\r\n\r\n  get #cssFocus() { return this.owner.cssFocus || 'focus-ring'; }\r\n  get #cssSelected() { return this.owner.cssSelected || 'active'; }\r\n  get #cssCheck() { return this.owner.cssCheck || ''; }\r\n  get #checkColor() { return this.owner.checkColor || 'secondary'; }\r\n  get #checkColorSelected() { return this.owner.checkColorSelected || 'primary'; }\r\n\r\n  get #border() {\r\n    return this.value?.border === true || this.owner.border === true;\r\n  }\r\n\r\n  get #icon() {\r\n    const me = this;\r\n    const node = me.node;\r\n    const data = me.value;\r\n    const ui = me.owner;\r\n    let itemIco = data.icon || ui.itemIcon;\r\n    if (node.isFolder) itemIco = node.opened ? (data.openIcon || ui.openIcon) : (data.closeIcon || ui.closeIcon);\r\n    return itemIco;\r\n  }\r\n\r\n  #renderIndent(level) {\r\n    return html`<gs-indent size=\"${level}\"></gs-indent>`;\r\n  }\r\n\r\n  #renderSpinner(level) {\r\n    return html`${this.#renderIndent(level)}<gs-spinner small></gs-spinner>`;\r\n  }\r\n\r\n  #renderIcon(level) {\r\n    return html`${this.#renderIndent(level)}${this.#renderMulti()}<gs-icon size=\"5\" name=\"${this.#icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #renderMulti() {\r\n    const me = this;\r\n    if (!me.multiselect) return '';\r\n    const color = me.selected ? me.#checkColorSelected : me.#checkColor;\r\n    const icon = me.node.isPartialySelected ? 'dash-square-fill' : me.selected ? 'check-square-fill' : 'square';\r\n    return html`<gs-icon size=\"6\" data-type=\"state\" \r\n                css=\"me-1 text-${color} ${me.#cssCheck}\"\r\n                name=\"${icon}\"></gs-icon>`;\r\n  }\r\n\r\n  #status(val = false) {\r\n    const me = this;\r\n    if (me.node?.isFolder) {\r\n      me.node.opened = val;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree-item');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, html, css, createRef, ref, repeat, ifDefined } from '../../lib.mjs';\r\nimport { GSElement } from '../../GSElement.mjs';\r\nimport { GSDOM } from '../../base/GSDOM.mjs';\r\nimport { TreeNode } from '../../data/TreeNode.mjs';\r\nimport { TreeController } from './controllers/TreeController.mjs';\r\nimport { color } from '../../properties/color.mjs';\r\n\r\nexport class GSTreeElement extends GSElement {\r\n\r\n  static styles = css`            \r\n    :focus-visible {\r\n      outline: none !important;\r\n    }  \r\n    .list-group-item {\r\n      cursor: pointer;\r\n    }`;\r\n\r\n  static shared = {\r\n    itemIcon: { attribute: 'icon-item' },\r\n    closeIcon: { attribute: 'icon-close' },\r\n    openIcon: { attribute: 'icon-open' },\r\n    cssCheck: { attribute: 'css-check' },\r\n    cssFocus: { attribute: 'css-focus' },\r\n    cssSelected: { attribute: 'css-selected' },\r\n    checkColor: { attribute: 'check-color', ...color },\r\n    checkColorSelected: { attribute: 'check-color-selected', ...color },\r\n  }\r\n\r\n  static properties = {\r\n    storage: {},\r\n    data: { type: Object },\r\n    node: { type: Object, hasChanged: (newVal) => newVal instanceof TreeNode },\r\n    border: { type: Boolean, reflect: true },\r\n    guide: { type: Boolean, reflect: true },\r\n    leaf: { type: Boolean, reflect: true },\r\n    multiselect: { type: Boolean, reflect: true },\r\n    circular: { type: Boolean, reflect: true },\r\n    ...GSTreeElement.shared\r\n  }\r\n\r\n  // GS-ITEM attributes mapping\r\n  static options = {\r\n    ...GSTreeElement.shared,\r\n    css: {},\r\n    icon: {},\r\n    color: {},\r\n    title: {},\r\n    tooltip: {},\r\n    opened: { type: Boolean },\r\n    selected: { type: Boolean }\r\n  }\r\n\r\n  #queued = false;\r\n  #listRef = createRef();\r\n\r\n  #controller = null;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.leaf = false;\r\n    me.multiselect = false;\r\n    me.data = GSDOM.toJson(me, true, true).items;\r\n    me.node = new TreeNode(null, { '#tagName': this.tagName }, null, -1);\r\n    me.itemIcon = 'file-earmark';\r\n    me.closeIcon = 'folder'; // caret-right; chevron-right\r\n    me.openIcon = 'folder2-open'; // caret-down; chevron-down\r\n    me.cssSelected = 'active'; // fw-bold\r\n    me.cssFocus = 'focus-ring';\r\n    me.node[Symbol.for('gs-element')] = me;\r\n    me.#controller = new TreeController(me);\r\n  }\r\n\r\n  renderUI() {\r\n    const me = this;\r\n    return html`<div  dir=\"${ifDefined(me.direction)}\"\r\n          class=\"treeview ${classMap(me.renderClass())}\"          \r\n          @click=\"${me.#onClick}\"\r\n          @keydown=\"${me.#onKeyDown}\"\r\n          @keyup=\"${me.#onKeyUp}\">\r\n          <div class=\"list-group\" ${ref(me.#listRef)}>\r\n          ${repeat(me.node.walk(me.node, false, false), (node) => node.key, (node) => html`\r\n            <gs-tree-item .node=\"${node}\"></gs-tree-item>\r\n          `)}\r\n          </div>    \r\n        </div>`;\r\n  }\r\n\r\n  shouldUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('data') && me.data && !me.#queued) {\r\n      me.#queued = true;\r\n      queueMicrotask(() => {\r\n        me.node.clear();\r\n        me.node.fromJSON(me.data);\r\n        me.#queued = false;\r\n        me.requestUpdate();\r\n      });\r\n    }\r\n    return this.node ? true : false;\r\n  }\r\n\r\n  willUpdate(changed) {\r\n    super.willUpdate(changed);\r\n    if (changed.has('multiselect') && !this.multiselect) this.node?.deselectAll();\r\n    this.node.multi = this.multiselect;\r\n  }\r\n\r\n  onDataRead(data) {\r\n    if (data instanceof TreeNode) {\r\n      if (data.root !== this.node) this.node = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n\r\n  next(expand = false) {\r\n    const me = this;\r\n    let item = me.nextItem;\r\n    if (!item & me.circular) item = me.#first;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (expand && me.focused?.isFolder) me.focused.open();\r\n    }\r\n    return me.focused;\r\n  }\r\n\r\n  previous(collapse = false) {\r\n    const me = this;\r\n    let item = me.previousItem;\r\n    if (!item & me.circular) item = me.#last;\r\n    if (item?.visible) {\r\n      item.focus();\r\n      if (item.isFolder && collapse) item.close();\r\n    }\r\n    return me.focused;\r\n\r\n  }\r\n\r\n  expandAll() {\r\n    this.node?.expandAll();\r\n  }\r\n\r\n  collapseAll() {\r\n    this.node?.collapseAll();\r\n  }\r\n\r\n  /**\r\n   * Open folder\r\n   */\r\n  open(path) {\r\n    const me = this;\r\n    me.focused?.open();\r\n  }\r\n\r\n  /**\r\n   * Close folder\r\n   * TODO - path navigation\r\n   */\r\n  close(path) {\r\n    const me = this;\r\n    me.focused?.close();\r\n  }\r\n\r\n  clear() {\r\n    this.node?.clear();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  reload() {\r\n    this.clear();\r\n    this.dataController?.read();\r\n  }\r\n\r\n  get selected() {\r\n    return this.#host(this.node.selectedNodes());\r\n  }\r\n\r\n  get focused() {\r\n    return this.#host(this.node.focusedNode());\r\n  }\r\n\r\n  /**\r\n   * Previous visible ge-node-item\r\n   */\r\n  get previousItem() {\r\n    return this.focused?.node.find(n => n?.visible, true, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  /**\r\n   * Next visible ge-node-item\r\n   */\r\n  get nextItem() {\r\n    return this.focused?.node.find(n => n?.visible, true)?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  get #list() {\r\n    return this.#listRef.value;\r\n  }\r\n\r\n  get #first() {\r\n    return this.#list.firstElementChild;\r\n  }\r\n\r\n  get #last() {\r\n    return this.#list.lastElementChild;\r\n  }\r\n\r\n  #host(node) {\r\n    if (Array.isArray(node)) {\r\n      return node.map(n =>n[Symbol.for('gs-element')]).filter( n=> n);\r\n    }\r\n    return node?.[Symbol.for('gs-element')];\r\n  }\r\n\r\n  #onClick(e) {\r\n    const icon = e.target.tagName === 'GS-ICON' ? e.target : e.target.closest('gs-icon');\r\n    const isIcon = icon?.dataset.type === 'state';\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!el.node) return;\r\n\r\n    const me = this;\r\n\r\n    if (me.multiselect) {\r\n      if (isIcon) el.toggleSelection();\r\n    } else {\r\n      el.select(true);\r\n    }\r\n\r\n    const expandable = (me.multiselect && !isIcon) || (!me.multiselect);\r\n    if (el.isFolder && expandable) el.toggle();\r\n\r\n    el.focus();\r\n    el.handle(e);\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n\r\n    const me = this;\r\n    const el = me.focused;\r\n    if (!el) return;\r\n\r\n    switch (e.code) {\r\n      case 'ArrowUp':\r\n        me.previous();\r\n        break;\r\n      case 'ArrowDown':\r\n        me.next();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (el.isFolder) {\r\n          if (el.opened) {\r\n            me.close();\r\n          } else {\r\n            (el.parentItem || el)?.focus();\r\n          }\r\n        } else {\r\n          me.previous();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if (el.isFolder && !el.opened) {\r\n          me.open();\r\n        } else {\r\n          me.next();\r\n        }\r\n        break;\r\n      case 'Enter':\r\n          if (el.isFolder) {\r\n            el.toggle();\r\n          }        \r\n    }\r\n  }\r\n\r\n  #onKeyUp(e) {\r\n\r\n    const el = e.target.closest('gs-tree-item');\r\n    if (!(el?.node)) return;\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        el.handle(e);\r\n        break;\r\n      case 'Tab':\r\n        el.focus();\r\n        break;\r\n      case 'Space':\r\n        el.select(this.multiselect ? !el.selected : true);\r\n        el.focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  static {\r\n    this.define('gs-tree');\r\n  }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading ServiceWorkkerElement class\r\n * @module components/ServiceWorkkerElement\r\n */\r\n\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\n\r\n/**\r\n * An easy way to register a service worker in the browser.\r\n * @class\r\n * @extends { GSlement }\r\n */\r\nexport class ServiceWorkkerElement extends GSElement {\r\n\r\n    static properties = {\r\n        src: {},\r\n        scope: {},\r\n        module: { type: Boolean, default: false },\r\n        trace: { type: Boolean, reflect: true, default: false },\r\n        disabled: { type: Boolean, reflect: true, default: false }\r\n    }\r\n\r\n    #registration = false\r\n    #workerMessage = null;\r\n    #messageChannel = null;\r\n\r\n    #nocache = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#workerMessage = me.#onWorkerMessage.bind(me);\r\n        me.#load();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#unload();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('trace')) {\r\n            me.#ServiceWorkerTraceUpdate();\r\n        }\r\n        if (changed.has('disabled')) {\r\n            me.disabled ? me.#unload() : me.#load();\r\n        }\r\n        super.willUpdate(changed);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the service worker is available in the browser and the src is a valid URL.\r\n     */\r\n    get available() {\r\n        const me = this;\r\n        return 'serviceWorker' in navigator && me.src && GSUtil.isURL(me.src);\r\n    }\r\n\r\n    /**\r\n     * Returns the service worker registration object.\r\n     */\r\n    get registration() {\r\n        return this.#registration;\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to clear its cache.\r\n     * @returns \r\n     */\r\n    clearCache() {\r\n        return this.postMessage(\"CLEAR_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Request the service worker to pupdate preloads\r\n     * @returns \r\n     */\r\n    refresh() {\r\n        return this.postMessage(\"REFRESH_CACHE\");\r\n    }\r\n\r\n    /**\r\n     * Send a message to the service worker.\r\n     * @param {*} message The message to send to the service worker.\r\n     * @returns {boolean} Returns true if the message was sent, false if the service worker is not active or not registered.\r\n     */\r\n    postMessage(message) {\r\n        const me = this;\r\n        const sts = GSUtil.nonNull(message) && me.isLoaded;\r\n        if (sts) {\r\n            if (me.#messageChannel) {\r\n                me.#messageChannel.port1.postMessage(message);\r\n            } else {\r\n                me.#registration?.active?.postMessage(message);\r\n            }\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Method to handle messages from the service worker.\r\n     * Override this method to handle messages from the service worker.\r\n     * The default implementation does nothing.\r\n     * @param {Event} event \r\n     * @returns {boolean} Return false to stop the event propagation, true to continue.\r\n     */\r\n    onMessage(event) {\r\n        me.#trace('ServiceWorker message received:', event);\r\n        return true;\r\n    }\r\n\r\n    #onWorkerMessage = (event) => {\r\n        const me = this;\r\n        if (event.data) {\r\n            if (me.onMessage(event)) {\r\n                me.emit('message', event.data, true, true, true);\r\n            }\r\n        } else {\r\n            me.#trace('ServiceWorker message is empty:', event);\r\n        }\r\n    }\r\n\r\n    #initChannel() {\r\n        const me = this;\r\n        if (me.#registration?.active) {\r\n            me.#messageChannel = new MessageChannel();\r\n            me.#messageChannel.port1.onmessage = me.#workerMessage;\r\n            me.#ServiceWorkerTraceUpdate();\r\n            me.#registration.active.postMessage('INIT_PORT', [me.#messageChannel.port2]);\r\n            //me.emit('activated', isActive, true, true, true);\r\n        }\r\n    }\r\n\r\n    #ServiceWorkerTraceUpdate() {\r\n        const me = this;\r\n        me.#registration?.active?.postMessage(me.trace ? 'TRACE_ON' : 'TRACE_OFF');\r\n    }\r\n\r\n    // Show a notification to the user that a new version of the app is available\r\n    async #invokeServiceWorkerUpdateFlow(registration) {\r\n        return registration?.waiting?.postMessage('NOTIFICATION_WAITING');\r\n    }\r\n\r\n    // detect Service Worker update available and wait for it to become installed\r\n    #monitorServiceWorkerUpdate(registration) {\r\n        const me = this;\r\n        registration.addEventListener('updatefound', () => {\r\n            // wait until the new Service worker is actually installed (ready to take over)\r\n            registration.installing?.addEventListener('statechange', () => {\r\n                if (registration.waiting) {\r\n                    // if there's an existing controller (previous Service Worker), show the prompt\r\n                    if (navigator.serviceWorker.controller) {\r\n                        me.#invokeServiceWorkerUpdateFlow(registration);\r\n                    } else {\r\n                        // otherwise it's the first install, nothing to do\r\n                        me.#trace('Service Worker initialized for the first time');\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // detect controller change and refresh the page\r\n    #monitorController() {\r\n        let refreshing = false;\r\n        navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n            if (!refreshing) {\r\n                window.location.reload();\r\n                refreshing = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    async #unload() {\r\n        const me = this;\r\n        GSLoader.NO_CACHE = me.#nocache;\r\n        if (me.disabled) {\r\n            await me.#registration?.unregister();\r\n        }\r\n        me.#messageChannel?.port1.close();\r\n        me.#messageChannel?.port2.close();\r\n        me.#messageChannel = null;\r\n        me.#registration = null;\r\n    }\r\n\r\n    // Load the service worker\r\n    async #load() {\r\n        const me = this;\r\n        if (me.disabled) return;\r\n        me.#nocache = GSLoader.NO_CACHE;\r\n        GSLoader.NO_CACHE = false;\r\n\r\n        if (!me.available) {\r\n            console.warn('Service Worker is not available in this browser or src is not valid.');\r\n            return;\r\n        }        \r\n        try {\r\n            const opt = me.scope ? { scope: me.scope } : {};\r\n            if (me.module) opt.type = 'module';\r\n            me.#registration = await navigator.serviceWorker.register(me.src, opt);\r\n            me.#trace('ServiceWorker registration started:', me.#registration);\r\n\r\n            me.#monitorController();\r\n            me.#invokeServiceWorkerUpdateFlow(me.#registration);\r\n            me.#monitorServiceWorkerUpdate(me.#registration);\r\n            me.#initChannel(me.#registration);\r\n\r\n            me.#trace('ServiceWorker registration successful with scope: ', me.#registration.scope);\r\n\r\n        } catch (error) {\r\n            me.#registration = false;\r\n            console.error('Service Worker registration failed:', error);\r\n        }\r\n        me.emit('loaded', me.isLoaded, true, true, true);\r\n    }\r\n\r\n    #trace(message, data = '') {\r\n        if (this.trace) {\r\n            console.log(message, data);\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-service-worker');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ifDefined, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSLog } from '../base/GSLog.mjs';\r\n\r\nexport class GSChartElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/bootstrap-lit';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        config: {},\r\n        storage: {},\r\n        height: { type: Number },\r\n        width: { type: Number },\r\n        data: { type: Array },\r\n        options: { type: Object },\r\n    }\r\n\r\n    #canvasRef = createRef();\r\n    #chart = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.height = 0;\r\n        this.width = 0;\r\n        GSChartElement.#init();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.#waitInit();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    shouldUpdate(changed) {\r\n        return GSChartElement.#isChart;\r\n    }\r\n\r\n    firstUpdated(changed) {\r\n        this.#render();\r\n        super.firstUpdated(changed);\r\n    }\r\n\r\n    updated(changed) {\r\n        const me = this;\r\n        if (changed.has('url') || changed.has('config')) me.#render();\r\n        if (changed.has('data') || changed.has('options')) me.#renderData(me.data, me.options);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<canvas ${ref(me.#canvasRef)} \r\n                class=\"${classMap(me.renderClass())}\"\r\n                width=\"${ifDefined(me.width > 0 ? me.width : false)}\" \r\n                height=\"${ifDefined(me.height > 0 ? me.height : false)}\" >\r\n            </canvas>`;\r\n    }\r\n\r\n    onDataRead(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.#canvasRef.value;\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    refresh() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    updateChart(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n        const me = this;\r\n        try {\r\n            const options = await GSLoader.loadSafe(me.config, 'GET', null, true, {});\r\n            const data = await GSLoader.loadSafe(me.url, 'GET', null, true, []);\r\n            me.data = data;\r\n            me.options = options;\r\n        } catch (error) {\r\n            GSLog.error(null, error);\r\n        }\r\n    }\r\n\r\n    #renderData(data, options) {\r\n        const me = this;\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChartElement.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => o.data = sets.length === 1 ? data : data[i] || []);\r\n\r\n        if (me.#chart) return me.updateChart(opt);\r\n\r\n        const ctx = me.canvas?.getContext('2d');\r\n        if (ctx) {\r\n            me.#chart = new GSChartElement.#Chart(ctx, opt);\r\n        } else {\r\n            GSLog.error(null, 'Failed to get canvas context');\r\n        }\r\n    }\r\n\r\n    async #waitInit() {\r\n        if (!GSChartElement.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        this.requestUpdate();\r\n    }\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    static async #init() {\r\n        const me = GSChartElement;\r\n        if (me.URL_LIB === false) return;\r\n        if (me.#isChart || me.#initializing) return;\r\n        me.#initializing = true;\r\n        try {\r\n            const origin = GSChartElement.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);\r\n            me.#Chart = Chart;\r\n            me.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            me.#initializing = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert DOM tree into a JSON structure\r\n     * \r\n     * @param {HTMLElement} obj HTML element instance to convert\r\n     * @param {string} name DOM attribute name for object key\r\n     * @param {string} value DOM attribute name for object value\r\n     * @param {string} type DOM attribute name for object type\r\n     * @returns {object}\r\n     */\r\n    static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n        if (!(el instanceof HTMLElement)) return {};\r\n\r\n        const nameV = el.getAttribute(name);\r\n        const valV = el.getAttribute(value);\r\n        const typeV = el.getAttribute(type);\r\n\r\n        let obj = null;\r\n\r\n        switch (typeV) {\r\n            case 'array':\r\n                obj = [];\r\n                break;\r\n            case 'object':\r\n                obj = {};\r\n                break;\r\n            default:\r\n                return GSChartElement.#toType(valV, typeV);\r\n        }\r\n\r\n        const childs = Array.from(el.children);\r\n        const isArray = typeV === 'array';\r\n        const isObject = typeV === 'object';\r\n\r\n        childs.forEach(el => {\r\n            const _nam = el.getAttribute(name);\r\n            if (isArray) {\r\n                obj.push(GSChart.toJson(el, name, value, type));\r\n            } else if (isObject) {\r\n                const tmp = GSChartElement.toJson(el, name, value, type);\r\n                obj[_nam] = tmp;\r\n            } else {\r\n                const _val = el.getAttribute(value);\r\n                const _typ = el.getAttribute(type);\r\n                obj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    static #toType(val, type) {\r\n        switch (type) {\r\n            case 'boolean': return val === 'true';\r\n            case 'number': return parseFloat(val);\r\n            default: return val\r\n        }\r\n    }\r\n\r\n    static {\r\n        this.define('gs-chart');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        try {\r\n            const data = await GSLoader.load(me.url);\r\n            if (!data) throw new Error(`Code URL ${me.url} unreachable!`);\r\n            me.#data = data;\r\n            me.#onHighlight(data);\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        try {\r\n            const response = me.#worker;\r\n            const blob = new Blob([response], { type: 'application/javascript' });\r\n            const blobURL = URL.createObjectURL(blob);\r\n            const worker = new Worker(blobURL);\r\n            worker.onmessage = me.#onMessage.bind(me);\r\n            worker.postMessage({ data: data, url: blobURL, append: append });\r\n        } catch (error) {\r\n            GSDOM.setHTML(me.#code, error.message);\r\n        }\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSID } from '../base/GSID.mjs';\r\n\r\nexport class GSMarkdownElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        history: { type: Number },\r\n        maxHeight: { type: Number, attribute: 'max-height' },\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    #styleID = GSID.id;\r\n\r\n    constructor() {\r\n        super();\r\n        this.history = 10;\r\n        this.dynamicStyle(this.#styleID);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const me = this;\r\n        await me.#initLib();\r\n        if (globalThis.showdown) {\r\n            const opt = { tasklists: true, tables: true };\r\n            me.#converter = new globalThis.showdown.Converter(opt);\r\n            super.connectedCallback();\r\n        }\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('url')) {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url);\r\n        }\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        const height = me.maxHeight > 0 ? `${me.maxHeight}px;` : false;\r\n        const opt = { 'max-height': height }\r\n        me.dynamicStyle(me.#styleID, opt);\r\n        return html`<div ${ref(me.#containerRef)} class=\"overflow-auto ${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [me.#styleID] : true,\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        me.#onURL(url);\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n\r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n\r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });\r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n            GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n\r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list = GSDOM.queryAll(me.#container, qry);\r\n        requestAnimationFrame(() => list.forEach(el => GSDOM.toggleClass(el, css)) );\r\n    }\r\n\r\n    #handleLinks() {\r\n        const me = this;\r\n        const links = GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n            .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')))\r\n            .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n            .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/'))\r\n            .forEach(el => GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me)));\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        if (me.#cache.length === 0 ) return me.#first;\r\n        const url = me.#cache.pop();\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if (me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdownElement.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-markdown');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2025; Green Screens Ltd.\r\n */\r\n\r\nimport { classMap, createRef, html, ref } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\nexport class GSMonacoElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #containerRef = createRef();\r\n    #editor = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.language = '';\r\n        this.theme = 'vs-dark';\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonacoElement.#init();\r\n        super.connectedCallback();\r\n    }\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n\r\n    firstUpdated() {\r\n        this.#onMonacoReady();\r\n        super.firstUpdated();\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        if (changed.has('theme')) me.#onTheme(me.theme);\r\n        if (changed.has('target')) me.#onTarget(me.target);\r\n        if (changed.has('url')) me.#onURL(me.url);\r\n        if (changed.has('language')) me.#onLanguage(me.language);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<div ${ref(me.#containerRef)} class=\"${classMap(me.renderClass())}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        return this.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    get owner() {\r\n        return this.parentElement;\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        try {\r\n            const data = url ? await GSLoader.load(url) : null;\r\n            if (!data) throw new Error(`Code URL ${url} unreachable!`);\r\n            me.code = '';\r\n            me.#onLanguage(me.language);\r\n            me.code = data;\r\n        } catch (error) {\r\n            me.code = error.message;\r\n        }\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n\r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        if (!me.#editor) return;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner?.getBoundingClientRect();\r\n            if (rect) {\r\n                me.#editor.layout({ width: rect.width, height: rect.height });\r\n            }\r\n        });\r\n    }\r\n\r\n    get #container() {\r\n        return this.#containerRef.value;\r\n    }\r\n\r\n    static #initialized;\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonacoElement.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        const url = GSMonacoElement.URL_LIB;\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${url}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${url}'};\r\n                importScripts('${url}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({\r\n                paths: { 'vs': `${GSMonacoElement.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false }\r\n            });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static async #init() {\r\n        const me = GSMonacoElement;\r\n        if (me.#initialized) return;\r\n        me.#initEnv();\r\n        await me.#initLib();\r\n        await me.#initMonaco();\r\n        me.#initialized = true;\r\n    }\r\n\r\n    static {\r\n        this.define('gs-monaco');\r\n    }\r\n\r\n}"],"names":["GSVersion","version","build","gsstyles","GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil$1","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","normalize","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","o","Array","isArray","isBool","isDate","isNumber","isString","min","max","Math","match","isNull","dft","language","sep","numberSeparator","extractNumber","replaceAll","url","test","trim","startsWith","endsWith","pattern","charset","floor","random","length","navigator","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","string","reg","keys","isJsonString","isJsonType","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSID","prefx","next","s","l","h","charCodeAt","isProxy","GSAttr","isHTMLElement","asBool","setAttribute","removeAttribute","isInstance","getAttribute","attr","asNum","toJson","set","NaN","stringify","entries","kv","attributes","host","opt","recursive","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","children","proxify","safe","unsafe","dflt","default","multi","hasAttribute","toStringArray","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","num","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","m","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Y","valueOf","GSData","currency","extract","key","Set","b","every","index","toSorted","compareArrays","second","advanced","arr","indexOf","list","it","cfg","toType","rule","toRegex","childElementCount","querySelector","fmt","style","fields","limit","sts","rec","filterRecord","isPrimitive","filterSimple","filterComplex","filterValue","primitive","found","flt","toCheck","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToObject","tree","hasOwnProperty","partial","r","readFromProperty","readFromObject","GSDOM","walk","isTemplateElement","cleanup","content","remove","nodeValue","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","wrap","appendChild","link","slot","isText","tagName","FORMEL","shadow","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","parentAll","ShadowRoot","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","childAll","child","parentElement","offsetParent","c","HTMLBodyElement","root","getByID","documentElement","qry","levels","proxy","res","receiver","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","toggleClass","contains","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","noEmpty","writeToObject","toValue","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","for","sub","location","hash","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","CLEANUP1","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","properties","mergeObjects","template","CustomEvent","globalDispatch","detail","message","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","suspended","removeEventListener","unlisten","toSignal","internal","evt","propagate","immediate","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","hasFunction","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","waitPageLoad","GSAbortController","AbortController","super","abort","clearInterval","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","isFunctions","getFilter","exec","create","GSDynamicStyle","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","GSCacheStyles","store","dynamic","styles","adopt","adoptedId","GSAdoptedEngine","now","preload","timerID","setInterval","sheets","adoptable","adoptSheet","update","scheduled","sorted","ID","cssText","monitorAttributes","ownerNode","adoptStyle","disconnect","mutationList","onAttributeChange","attributeFilter","attributeOldValue","HTMLLinkElement","rel","as","HTMLStyleElement","then","adoptLink","registerFilter","onMonitorFilter","onMonitorConnect","onMonitorDisconnect","init","GSLoader","GS_TEMPLATE_URL","origin","GS_ROUTER_URL","rootURL","defaultURL","TEMPLATE_URL","ROUTER_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","UNIQUE","searchParams","append","level","isHTML","getRouterURL","loadSafe","routerURL","normalizeURL","routerPath","getTemplateURL","templateURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSTemplateCache","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","inject","property","swap","trigger","hashed","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleSwap","handleInject","handleAttribute","handleProperty","handleToggle","handleTrigger","handleEvent","handleCall","handleExec","handleTemplate","field","form","isForm","HTMLFormElement","isField","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","toggleProperty","tout","symbol","handleContent","clean","useDef","definition","toHTML","gsHashed","applyContent","applyTemplate","clone","insertAdjacent","detach","off","parentComponent","DEFINITION","override","GSBeep","AudioContext","webkitAudioContext","audioContext","duration","frequency","volume","isAvailable","audioCtx","oscillatorNode","createOscillator","gainNode","createGain","connect","destination","gain","start","currentTime","stop","onended","isActive","hasBeenActive","userActivation","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","ps","p","GSEvent","EventTarget","listeners","listener","abortable","controller","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSItem","autofocus","validate","GSElement","tags","collect","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","isDefault","hk","details","GSPopper","asRect","sx","scrollX","sy","scrollY","top","bottom","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","arrow","pos","fromPlacement","isPlacementValid","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","aopt","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","applyDynamicStyle","GSQueryCSS","object","GSQuery","instance","GSRouter","enabled","hashCallback","onHashChange","getRouter","loadDefinition","enable","disable","route","unregister","deepClone","fromJson","px","process","GS_DEFINITION_URL","initialize","GS_ROUTER_WAIT","GSTheme","switch","theme","STORAGE","htmlEl","bsTheme","matchMedia","q","URLSearchParams","onTheme","settings","getSystemDefaultTheme","darkMode","lightMode","setup","BinaryTreeNode","isLeaf","hasChildren","isRoot","BinaryTree","inOrderTraversal","postOrderTraversal","preOrderTraversal","insert","parentNodeKey","canInsertLeft","canInsertRight","find","Node","previous","release","toJSON","DoublyLinkedList","tail","previousNode","insertAt","splice","insertFirst","insertLast","getAt","removeAt","full","acc","toArray","iterator","isInvalid","isInvalidIndex","isInteger","LinkedList","cb","asValues","asNodes","Stack","item","unshift","peek","isEmpty","Queue","enqueue","dequeue","Tree","folder","leaf","up","levelID","nodeID","isFolder","hasMore","firstChild","lastChild","down","previousSibling","inclusive","flat","iterate","filtered","ur","newOne","findByKey","flatten","fromJSON","raw","hasParent","DataSelector","SELECT","asArray","removeSelected","isSelected","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","verify","rw","resetRegistry","GSReadWriteRegistry","GSAbstractReadWrite","processors","addProcessor","processor","removeProcessor","isRegistered","notify","onRead","postRead","onWrite","postWrite","addSelected","clearSelected","getSelected","GSReadWrite","reader","writer","mode","skip","TYPE","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCachedReadWrite","reformat","records","postFilter","sortData","filterData","search","read","TreeNode","opened","focused","focusedNode","selectedNode","controllers","select","focus","open","addController","removeController","visible","expand","collapse","changed","onFocusChanged","onSelectionChanged","isPartialySelected","selectAll","deselectAll","selectionFlag","onSelectAll","onDeselectAll","selectedNodes","refresh","onRefresh","loading","onLoad","expandAll","collapseAll","expanded","collapsed","onExpand","onCollapse","onAppend","onInsert","GSTreeReader","resetData","litUrl","GS_LIT_URL","litModule","AsyncDirective","AsyncReplaceDirective","AttributeConverter","AttributePart","BasePart","BooleanAttributePart","CSS","CSSResult","ChildPart","ContextConsumer","ContextProvider","ContextProviderEvent","ContextRequestEvent","ContextRoot","Directive","DynamicHTML","ENABLE_EXTRA_SECURITY_HOOKS","ElementPart","EventPart","PartType","Pauser","PropertyPart","PseudoWeakRef","ReactiveComponent","ReactiveController","ReactiveControllerHost","ReactiveElement","ResultType","StaticHTML","Task","TaskStatus","Template","TemplateInstance","UnsafeHTMLDirective","UntilDirective","ValueNotifier","asyncAppend","asyncReplace","boundAttributeSuffix","choose","classMap","clearPart","constructionToken","createMarker","createRef","createSanitizer","deepArrayEquals","deepEquals","directive","directiveSymbol","forAwaitOf","getCommittedValue","getDirectiveClass","getTemplateHtml","guard","ifDefined","initialState","insertPart","isCompiledTemplateResult","isDirectiveResult","isIterable","isNoOp","isSingleExpression","isTemplateResult","keyed","live","marker","markerMatch","noChange","nodeMarker","nothing","notifySymbol","partSymbol","range","rawTextElement","ref","removePart","sanityze","setChildPartValue","setCommittedValue","setSanitizer","shallowArrayEquals","styleMap","supportsAdoptingStyleSheets","symbolResult","templateContent","trustFromTemplateString","typeSymbol","unsafeHTML","unsafeSVG","until","walker","when","LitElement","svg","render","unsafeStatic","withStatic","literal","unsafeCSS","adoptStyles","notEqual","TemplateResultType","_$LE","_$LH","defaultConverter","isServer","gsAction","gsAnchor","gsAttribute","gsCall","gsExec","gsInject","gsProperty","gsSwap","gsTarget","gsTemplate","gsToggle","gsTrigger","gsValue","gsTimeout","DatasetDirective","part","srcset","DOMStringMap","remap","hasOwn","descriptors","getOwnPropertyDescriptors","listProperties","listGetters","getPrototypeOf","literalTemplate","listGettable","cssMap","CssMapDirective","partInfo","ATTRIBUTE","strings","classInfo","_previousClasses","_staticClasses","notEmpty","newVal","oldVal","numGT0","numGE0","numLT0","numLE0","AutocapitalizeTypes","autocapitalize","hasChanged","AutocompleteTypes","autocomplete","AutocorrectTypes","autocorrect","ButtonTypes","isType","buttonType","is","ColorTypes","color","EnvironmentTypes","environment","InputTypes","inputType","NavTypes","nav","OrientationTypes","PlacementTypes","PositionTypes","ProtocolTypes","SizeTypes","normal","medium","small","large","big","extra","stringArrayConverter","fromAttribute","toAttribute","AdoptedController","hostConnected","hostDisconnected","isGlobal","rules","removeRule","renderRoot","onAdopted","AttributeController","eventName","onNotify","isFormEl","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","renderOptions","renderBefore","previousElementSibling","keep","DataController","readCallback","writeCallback","errorCallback","selectCallback","onSelect","write","storeID","firstPage","page","lastPage","nextPage","prevPage","storage","requestUpdate","onDataRead","onDataWrite","onDataError","ElementMoveController","attached","cursorX","cursorY","mouseUpCallback","mouseDownCallback","mouseMoveCallback","onMouseUp","onMouseDown","onMouseMove","attachEvent","removeEvent","onStartMove","onEndMove","onCursorRight","onCursorLeft","onCursorUp","onCursorDown","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","onLanguage","OrientationController","hosts","onOrientation","RENDER_SYMBOL","TemplateController","lastRef","isPrefetch","GS_TEMPLATE_PREFETCH","templateRef","toKey","schedule","templateInjected","simple","slots","hasSlots","hasSimple","preprocessTemplate","templateSimple","templateSlots","templates","isTplEl","cacheable","err","gsCache","tasks","task","finally","ThemeController","updateTheme","updateThemeExt","SlotController","onSlotChanged","assignedElements","onSlotInjected","rtl","reflect","hide","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","slotController","themes","refx","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","detachListeners","shouldUpdate","changedProperties","createRenderRoot","firstUpdated","willUpdate","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","direction","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","isGenerated","elementStyles","styleSheet","cssRule","setCSSProperty","ElementNavigationController","circular","multiple","onKeyUp","onClick","onFocusIn","onFocusOut","lastElementChild","blur","onSelected","onDeselected","onFocused","isNavigable","isNav","relatedTarget","composedPath","GroupController","busEvent","busCallback","onBusEvent","GSRouterElement","router","updated","GSAccordionElement","autoclose","cssItem","cssHeader","cssBody","renderItems","close","isItemCloser","GSAccordionItemElement","component","GSAlertElement","closed","closable","pause","interval","handleBillboard","show","isBillboard","button","billboard","GSButtonElement","clickCss","hoverCss","toggleColor","outline","toggling","icon","tooltip","refEl","refIco","onMouseOver","onMouseOut","onDisabled","iconEl","animate","onHref","isReset","isSubmit","submit","buttonEl","hover","iconHtml","renderIcon","GSCalendarElement","editable","minYear","maxYear","arrovPrev","arrowNext","cssDays","cssToday","cssWeeks","cssMonth","cssYear","cssNav","cssSelected","arrowPrev","previousMonth","nextMonth","previousYear","nextYear","formatted","updateTarget","week","dayList","months","monthsHTML","yearHTML","onKey","onDay","daysHTML","tgt","HTMLInputElement","valueAsDate","isToday","today","c1","c2","current","monthList","onMonth","optionsHTML","onYear","isList","listID","selectedIndex","yearEl","validity","valid","GSCardElement","imageStyle","overlay","align","image","subtitle","footer","header","colorText","colorBack","colorBorder","cssTitle","cssSubtitle","cssFooter","cssImage","styleID","isVertical","renderVertical","renderHorizontal","imageTop","imageBottom","isBefore","startClass","endClass","startHtml","images","endHtml","isHorizontal","imageSlot","GSCenterElement","GSMenuElement","auto","dark","menuRef","closeSubmenus","updatePosition","onMouseLeave","submenu","dropend","dropstart","popup","caller","isMouseOrPointerEvent","renderSubmenu","renderHeader","renderMenu","renderDivider","menu","toSubmenu","menuItem","isSubmenu","innerWidth","GSContextElement","isInTable","attachTarget","assignedSlot","onPopup","GSCompareElement","background","before","after","elRef","clipRef","slideRef","mouseController","elPosition","splitter","onDoubleClick","isAuto","pct","isFixed","slider","clip","GSControllerElement","module","changes","GSCopyrightElement","company","isCompany","isYear","GSDataHandler","autoload","autorefresh","config","handler","lifoReadRef","lifoWriteRef","itemHolder","PROPERTIES","initLIFO","updateHandler","formatSort","formatFilter","isDebug","gsDebug","isCached","formated","save","verifyHandler","callOnceLifo","lifoReadRefCallback","lifoWriteRefCallback","lifoCall","GSDialogElement","standard","escapable","cancelText","confirmText","minWidth","buttonAlign","iconCancel","iconConfirm","colorCancel","colorConfirm","cssCancel","cssConfirm","cssContent","pass","dialogRef","btnConfirmRef","btnCancelRef","TITLE_CSS","HEADER_CSS","ALIGN","CANCEL","CONFIRM","updateStack","_shouldUpdate","allowed","onOpenChanged","STACK","dialog","showModal","focusable","isHashed","renderConfirm","onConfirm","renderCancel","onCancel","renderFooter","renderContent","card","onForm","onSubmit","info","confirm","prompt","forms","f","tab","btnConfirm","btnCancel","QUERY_INPUT","isVisible","GSDrawerElement","backdrop","scroll","fingers","transition","cssHead","onLeave","onEnter","hasHeader","headSlot","GSDropdownElement","renderButton","buttonClass","btn","GSEmailElement","user","domain","dev","updateUser","updateDomain","GSFormElement","acceptCharset","autocopy","autoselect","autovalidate","autoreport","enctype","novalidate","block","beep","formRef","lastState","onBlur","onChange","onInvalid","elementTemplate","submitButton","resetButton","elements","inputs","reportValidity","onValidate","tplEl","GSFormGroupElement","layout","label","description","placeholder","mask","spellcheck","noAccessor","rows","cols","step","minLength","maxLength","selectable","autoid","reveal","readonly","required","invalidMessage","cellField","cellLabel","cssLabel","cssField","inputRef","ouptutRef","patterns","internals","attachInternals","validateAllowed","ICON","CSS_LABEL","CSS_LABEL_CELL","formComponent","SELECTOPT","renderFloating","cssCheck","renderInput","renderOutput","renderLabel","renderInfo","renderLabelWrap","renderField","isIcon","CSS_ICON","renderTooltip","isRange","idattr","isFieldset","radioLayout","fieldSet","inputHTML","selectHTML","isTextArea","fld","vertical","initStyle","renderOption","listHTML","outerHTML","isBlock","isBeep","onInput","isSwitch","isCheckable","isFloating","setFormValue","setValidity","validationMessage","tagList","isCheck","isRadio","isChecked","isPassword","isEmail","isURL","GSFormPanelElement","renderFormGroup","formaction","formenctype","formmethod","formnovalidate","formtarget","maxlength","minlength","GSGroupElement","controllerGroup","initData","prerender","of","renderWrappedUI","renderWrappedClass","childTagName","generated","childByName","getName","GSIconElement","superColor","_clicked","_hovered","postAnimate","fs","GSIndentElement","multiplier","numdef","GSImageElement","invert","grayscale","brightness","contrast","saturate","hue","sepia","alt","imageRef","complete","renderStyle","buildFilter","GSLayoutElement","resizable","autofit","vPos","hPos","els","dyncss","horizontal","lev","tc","dir","did","panelCSS","panelStyle","resize","grow","vpos","hpos","GSLinklement","ping","GSListElement","GSListItemElement","initial","renderFirst","renderSecond","itemCSS","isSelectable","itemStatusCSS","renderText","activeCSS","cssActive","inactiveCSS","cssInactive","GSMouseElement","pageX","pageY","screenX","screenY","offsetX","offsetY","onMouse","GSMovableElement","onMove","cursor","updateCursor","GSNavElement","isTab","GSNavItemElement","badge","badgeColor","badgeValue","parentType","badgeUI","itemsCSS","buttonCSS","buildCSS","cssButton","navType","GSOverlayElement","autoremove","radius","styleID2","innerHeight","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathStr","createSVGPathString","fill","pointerEvents","windowX","windowY","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPagerElement","pages","labelFirst","labelLast","labelNext","labelPrevious","half","renderPrevious","renderItem","renderNext","renderLast","pagination","decodeHTMLEntities","toTarget","ctrl","GSPopupElement","wMin","wMax","hMin","hMax","panelRef","onAuto","reposition","postPopup","popupFixed","panel","overflowH","overflowV","GSPopoverElement","arrowRef","arrowID","attachEvents","popover","fade","isFocusTrigger","isHoverTrigger","popupAbsolute","onFocus","GSProgressElement","updateStyle","percentage","onKeySelect","increase","decrease","trunc","old","GSSpinnerElement","pulsar","GSSplitterElement","styleTGT","cssUpdate","lock","updateMouse","isPreceeding","isStyleValue","styleDynamic","lockable","csize","cls","gsSplitter","updateX","updateY","dx","GSTabItemElement","updateCSS","tabCSS","panelByName","GSTabPanelElement","tabByName","tabs","GSTabGroupElement","findPanel","isAfter","renderTabs","panels","renderPanels","GSTableElement","colspan","hidden","fixed","filterType","cssFilter","colorFilter","colorHead","colorSelect","colorSort","stripedColumn","divider","striped","grid","borderless","columns","datacolumn","multisort","multiselect","protected","sortable","sortOrder","headColor","CELLS","table","stripedColumns","renderFilters","onSort","entry","renderColumn","renderRecord","renderEmpty","renderHandler","columnType","columType","input","valueAt","row","cell","cfgType","timestamp","dataType","renderFilter","hasSub","onFilter","listid","icons","sortType","cells","remapRecord","renderCell","record","elementTofilter","column","getElementIndex","prepareSorter","isComplex","tr","GSTagElement","converter","appendable","closeColor","cssClose","cssTag","dataListRef","renderTags","renderList","updateTag","KEYS","srcElement","removeTag","addTag","isMax","datalist","optEl","tagEl","renderTag","tagClass","btnClass","GSTextElement","GSTooltipElement","arrowStyle","arrowEl","panelEl","refLocal","refGlobal","GSTemplateElement","CopySelectController","clickCallback","copyCallback","onCopy","writeToClipboard","MaskController","_","back","prev","initRules","j","buildSlots","findIndex","buildAccept","toPattern","isMatch","setCustomValidity","setSelectionRange","substring","selectionStart","selectionEnd","lastIndex","maskType","chars","masks","special","MultipatternController","multipattern","NumberController","PasswordController","revealing","isReveal","altKey","TextController","InteractiveController","monitorCallback","onMonitor","hasUpdated","formElements","strict","isInList","togleEl","dataGroup","togleOption","isButtonElement","ComboController","ListController","ValidityController","processing","togglUI","onBlock","report","onAutoValidity","EventsMixin","mixin","prototype","FormController","onReset","onFormData","ControllerHandler","copyselect","typeController","validityController","comboController","formController","invoke","initControllers","prepare","isInput","initIinputControllers","initTextAreaControllers","isDataList","observedAttributes","controllerHandler","formEl","preupdate","onFormState","requestSubmit","GSInputElement","maskController","patternController","listController","isCheckBox","updateMask","updateMultipattern","updateList","isMulti","GSTextAreaElement","HTMLTextAreaElement","GSSelectElement","objToHTML","GSDataListElement","HTMLDataListElement","setIf","isShadowed","disableInput","enableInput","childrens","GSBreadcrumbElement","spacing","updateChildren","$text","GSBreadcrumbItemElement","generate","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBoxElement","cssList","cssInput","maxFileSize","listEl","fileEl","dragging","TITLE","onDragenter","onDragleave","onDrop","onPaste","dataTransfer","hasFile","dropEffect","clipboardData","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","validAttachments","GSTimeFormat","toLocaleTimeString","GSDateFormat","GSYearFormat","GSCurrencyFormat","GSStepStyle","GSStepElement","iconCSS","titleCSS","INACTIVE","ICON_CSS","GSStepsElement","steps","isFirst","isLast","COMPLETED","SELECTED","GSNotificationElement","BOTTOM_END","DEFAULT","positionCSS","dismiss","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","dlg","nn","isNativeSupported","isGranted","permission","GSToastElement","pending","visibilityChange","isVisibilityChanged","pendingUpdate","validParent","renderWithHeader","renderSimple","isToast","isNotify","AbstractTreeController","addNodeController","removeNodeController","oldNode","TreeController","toggleState","addedNode","insertedNode","onRemove","GSTreeItemElement","renderSpinner","cssFocus","status","toggleSelection","parentItem","checkColor","checkColorSelected","ui","itemIco","itemIcon","openIcon","closeIcon","renderIndent","renderMulti","GSTreeElement","guide","shared","listRef","nextItem","previousItem","reload","expandable","ServiceWorkkerElement","scope","trace","registration","workerMessage","messageChannel","nocache","onWorkerMessage","unload","ServiceWorkerTraceUpdate","available","clearCache","postMessage","nonNull","isLoaded","port1","onMessage","initChannel","MessageChannel","onmessage","port2","waiting","monitorServiceWorkerUpdate","installing","serviceWorker","invokeServiceWorkerUpdateFlow","monitorController","refreshing","GSChartElement","URL_LIB","GS_URL_CHART","canvasRef","chart","waitInit","destroy","isChart","renderData","canvas","updateChart","div","toBase64Image","quality","sets","datasets","ctx","getContext","Chart","initializing","registerables","nameV","valV","typeV","childs","isObject","_nam","GSChart","_val","_typ","GSHighlightElement","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","terminate","response","worker","blobURL","Worker","langs","GSMarkdownElement","GS_URL_MARKDOWN","history","maxHeight","containerRef","initLib","showdown","tasklists","tables","Converter","toCache","fromCache","container","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","script","GSMonacoElement","GS_URL_MONACO","editor","onMonacoReady","monaco","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","automaticLayout","minimap","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","paths","vs","initialized","initEnv","initMonaco"],"mappings":"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"}