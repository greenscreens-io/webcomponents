{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot && el.unstyled !== true).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","documentElement","disconnect","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}