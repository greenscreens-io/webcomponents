{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.5';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all templates inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","string","reg","keys","tpl","params","names","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr$1","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","recursive","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","Event","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}