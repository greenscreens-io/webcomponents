{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tconst has = GSData.objectPathExist(obj, el.name);\t\t\r\n\t\tif (GSUtil.isNull(has)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","has","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"AAce,MAAMA,eAAeC,YAEnCC,SAAa,EAEbC,GAAS,GAEEC,gCACV,MAAO,EACP,CAMDF,gBAEC,OADAF,QAAOK,IACA,SAASL,QAAOK,GACvB,CAODH,gBAAgBI,GACf,IAAIC,EAAI,EACPC,EAAIF,EAAEG,OACNC,EAAI,EAEL,GAAIF,EAAI,EAEP,KAAOE,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAKzC,OAAOH,CACP,CAaDL,iBAAiBU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACnG,MAAMC,EAAQ,IAAIC,YAAYN,EAAM,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IACrG,OAAON,EAAOU,cAAcH,EAC5B,CASDjB,0BAA0BU,EAASC,SAAUC,EAAMC,EAAM,IACxDQ,uBAAsB,KACrBvB,OAAOwB,UAAUZ,EAAQE,EAAMC,EAAI,GAEpC,CAKDU,oBAEC,MAAMC,EAAKC,KAEX,GAAID,EAAGE,KAAOF,EAAGG,eAAgB,CAEhC,MAAMC,EAAO9B,OAAO+B,SAASL,EAAGE,KAGhC,GADYf,SAASmB,cAAc,eAAeF,OAIjD,YADAJ,EAAGO,SAIJ,MAAMC,EAAKR,EAAGS,SAGVD,KAFcA,aAAcE,WAI/BF,EAAGG,QAAQP,KAAOA,EAEdJ,EAAGY,OACNzB,SAAS0B,KAAKC,YAAYN,GAG1BR,EAAGe,sBAAsB,WAAYP,GAGlCR,EAAGgB,SACNR,EAAG7B,GAAK6B,EAAG7B,GAAK6B,EAAG7B,GAAKL,OAAO2C,SAC/BjB,GAAGvB,EAAS+B,EAAG7B,IAIjB,CAEIqB,EAAGgB,QACPhB,EAAGO,QAGJ,CAKDW,uBAEC,MAAMlB,EAAKC,KACX,GAAID,EAAGgB,QAAUhB,GAAGvB,EAAQ,CAC3B,MAAM+B,EAAKrB,SAASmB,cAAc,IAAIN,GAAGvB,KACrC+B,GAAIA,EAAGD,QACX,CACDP,EAAGmB,SAEH,CASDC,yBAAyBhC,EAAMiC,EAAUC,GACxC,MAAMtB,EAAKC,KACXJ,uBAAsB,KACrBG,EAAGuB,kBAAkBnC,EAAMiC,EAAUC,EAAS,GAE/C,CAQDC,kBAAkBnC,EAAMiC,EAAUC,GAEjC,CAKDb,SAEC,CAKDU,UAEC,CAMGK,eACH,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UACvF,CAMGC,iBACH,MAAMC,EAAS9B,KAAK+B,SACpB,IAAKD,EAAQ,OAAO,EACpB,MAAMC,EAAWC,SAASD,SAASE,QAAQ,IAAK,IAChD,MAAI,SAAWH,GAAUC,IAAaD,GAClC,UAAYA,GAAUC,IAAaD,CAEvC,CAMGI,cACH,OAAOlC,KAAKmC,SAAS,eACrB,CAQDA,SAASC,EAAQ,IAEhB,IAAKA,EAAO,OAAO,EACnB,MAAMC,EAASD,EAAME,cACrB,GAAId,UAAUC,cAAe,CAC5B,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IACnCA,EAAEC,MAAML,cAAcM,SAASP,KAClCE,GAAM,EACN,IAEKA,CACP,CAED,MAAMM,EAAQ,IAAIC,OAAO,GAAGV,IAAS,KAErC,QADYZ,UAAUI,UAAUmB,MAAMF,EAEtC,CAMD3C,eAEC,MAAMH,EAAKC,KAELuB,EAAWxB,EAAGwB,SACdW,EAAUnC,EAAGmC,QACbL,EAAa9B,EAAG8B,WAChBmB,EAASjD,EAAGiD,OACZC,EAAMlD,EAAGkD,IAEf,QAAKpB,KAEO,WAARoB,IAAgC,IAAZf,MAIZ,YAARe,IAAiC,IAAZf,MAIb,WAARe,IAAiC,IAAb1B,MAIZ,YAAR0B,IAAkC,IAAb1B,MAIpBxB,EAAGoC,SAASa,MAKjB,CAMGC,UACH,OAAOjD,KAAKkD,aAAa,QAAU,EACnC,CAMGF,aACH,OAAOhD,KAAKkD,aAAa,WAAa,EACtC,CAMGjD,UAEH,MAAMF,EAAKC,KACX,IAAIC,EAAMF,EAAGmD,aAAa,QAAU,GAEpC,GAAe,WAAXnD,EAAGkD,IACN,MAAO,KAAOhD,EAKf,GAAIF,GAAGoD,EACN,IACC,IAAIC,EAAO,GAAGpB,SAASqB,SAASrB,SAASsB,WACrCrD,EAAIsD,WAAW,OAAMH,EAAOpB,SAASqB,QACrCpD,EAAIsD,WAAW,UAASH,OAAOI,GACnC,MAAMC,EAAM,IAAIC,IAAIzD,EAAKmD,GACzBK,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OACpC7D,EAAMwD,EAAIM,IACV,CAAC,MAAOC,GAER,CAGF,OAAO/D,CACP,CAMGgE,WACH,MAAMlE,EAAKC,KACX,IAAIiE,EAAOlE,EAAGmD,aAAa,SAAW,GAQtC,OAPKe,IACAlE,EAAGE,IAAI2C,SAAS,OACnBqB,EAAO,kBACGlE,EAAGE,IAAI2C,SAAS,UAC1BqB,EAAO,aAGFA,CACP,CAMGC,YACH,OAAOlE,KAAKmE,aAAa,QACzB,CAMGC,YACH,OAAOpE,KAAKmE,aAAa,QACzB,CAMGxD,aACH,OAAOX,KAAKmE,aAAa,OACzB,CAMGpD,aACH,OAAOf,KAAKmE,aAAa,OACzB,CAOGpC,eACH,OAAO/B,KAAKkD,aAAa,aAAe,EACxC,CAMGmB,YACH,OAAOrE,KAAKkD,aAAa,UAAY,EACrC,CAEGoB,kBACH,OAAOtE,KAAKkD,aAAa,cACzB,CAEGqB,oBACH,OAAOvE,KAAKkD,aAAa,kBAAoB,MAC7C,CAEGsB,gBACH,OAAOxE,KAAKkD,aAAa,YACzB,CAEGuB,qBACH,OAAOzE,KAAKkD,aAAa,iBACzB,CAEGC,QAGH,MADe,gBAAiBuB,WAExBA,WAAWC,cAEZC,cAAsD,QAAvCA,aAAaC,QAAQ,cAC3C,QAGAC,OAAOC,KAAK1G,OACZ,EC1Za,MAAM2G,uBAAuBC,cAExCC,YAAYxG,GACRyG,QACAnF,KAAKtB,GAAKA,GAAML,OAAO2C,QAC1B,CAMJoE,WAAW1G,EAAK,IACT,MAAMqB,EAAKC,KACjBqF,MAAMC,KAAKvF,EAAGwF,UACZC,KAAI,CAAC9C,EAAG3D,IAAM2D,EAAE+C,eAAiB,IAAI/G,IAAOK,GAAK,IACjD2G,QAAOhD,GAAKA,GAAK,IACjBD,SAAQC,GAAK3C,EAAGqF,WAAW1C,IAC7B,CAOEiD,QAAQjH,EAAK,IACT,OAAO2G,MAAMC,KAAKtF,KAAKuF,UAAUG,QAAOhD,GAAKA,EAAE+C,eAAiB,IAAI/G,MAAMkH,KAC7E,CAODC,QAAQnH,EAAIoH,EAAQ,GAAIC,GAAO,GAE3B,MAAMhG,EAAKC,KAEX,IAAKtB,EAAI,OAEf,IAAIsH,EAAOjG,EAAG4F,QAAQjH,GACtB,IAAKsH,EAEJ,OADAjG,EAAGkG,WAAW,IAAIvH,QACXqB,EAAG8F,QAAQnH,EAAIoH,EAAOC,GAGxB,IAAKD,EAAO,OAAOE,EAEnB,IAAIE,EAAO,GAeX,OAbIA,EADiB,iBAAVJ,EACAA,EAAMK,WAAW,KAAM,IAAIC,MAAM,KAAKZ,KAAI9C,GAAKA,EAAE2D,OAAOD,MAAM,OAAMV,QAAOhD,GAAkB,IAAbA,EAAE5D,SAElFgG,OAAOwB,QAAQR,GAGtBC,EACAG,EAAKzD,SAAQ8D,GAAMxG,GAAGyG,EAAYR,EAAMO,EAAG,GAAIA,EAAG,MAElD3G,uBAAsB,KAClBsG,EAAKzD,SAAQ8D,GAAMxG,GAAGyG,EAAYR,EAAMO,EAAG,GAAIA,EAAG,KAAI,IAIvDP,CACV,CAEDQ,GAAYR,EAAMS,EAAO,GAAIX,EAAQ,IAEjC,MAAMY,GADNZ,EAAQA,GAAS,IACSlD,SAAS,cACnCkD,EAAQA,EAAM7D,QAAQ,aAAc,IACpCwE,EAAOA,EAAKJ,OACZL,EAAKF,MAAMa,YAAYF,EAAMX,EAAOY,EAAc,YAAc,GACnE,EC3DU,MAAME,cAEpBrI,SAAgB,IAAIsI,IAEpBtI,cAAcG,GACb,MAAMoI,EAAQ,IAAI9B,eAAetG,GAEjC,OADAsB,MAAK+G,EAAOC,IAAItI,EAAIoI,GACbA,CACP,CAQDvI,WAAWG,EAAIoH,GACd,MAAM/F,EAAKC,KAKX,GAJI8F,aAAiBb,eACpBlF,GAAGgH,EAAOC,IAAItI,EAAIoH,GAGfA,GAA0B,iBAAVA,EAAoB,CACzBc,cAAcK,OAAOvI,GAC7BwI,YAAYpB,EAClB,CAED,OAAO/F,EAAGoH,IAAIzI,EAEd,CAODH,cAAcG,GACb,OAAOsB,MAAK+G,EAAOK,OAAO1I,EAC1B,CAODH,WAAWG,GACV,OAAOsB,MAAK+G,EAAOI,IAAIzI,EACvB,CAMU2I,qBACV,MACM3I,EAAK,aACX,IAAIoI,EAFOF,cAEIO,IAAIzI,GAKnB,OAJKoI,IACJA,EAAQF,cAAcK,OAAOvI,GAC7BQ,SAASoI,mBAAqBV,cAAcW,QAEtCT,CACP,CAODvI,eAAeG,EAAK,IACnB,OAAOkI,cAAcS,QAAQ1B,QAAQjH,EACrC,CAODH,eAAeG,EAAK,GAAIoH,EAAQ,GAAIC,GAAO,GAC1C,OAAOa,cAAcS,QAAQxB,QAAQnH,EAAGoH,EAAOC,EAC/C,CAMDxH,kBAAkBG,EAAK,IACtBkI,cAAcS,QAAQjC,WAAW1G,EACjC,CAMU6I,oBACV,OAAOlC,MAAMC,KAAK,IAAIuB,IAAI,IAAID,eAAcG,GAAQS,MAAK,CAACC,EAAGC,IAAMC,OAAOF,EAAE,IAAIG,cAAcF,EAAE,OAAMG,SACtG,CAKDtJ,aAAauJ,EAAM,GAAI3H,EAAO,GAC7B,GAAK2H,EACL,IACC3H,EAAOA,GAAQ9B,OAAO+B,SAAS0H,GAC/BlB,cAAcI,IAAI7G,EAAM2H,GACxB5I,SAASoI,mBAAqBV,cAAcW,MAC5C,CAAC,MAAOvD,GAER,CACD,CAEU8D,eACV,MAAO,+JACP,QAGAhD,OAAOiD,OAAOnB,eACdlC,WAAWkC,cAAgBA,cAC3BA,cAAcoB,MAAMpB,eAAckB,EAClC,ECvHa,MAAMG,kBAAkBC,gBAEtCC,GAAY,KAEZjD,cACCC,QACA,MAAMpF,EAAKC,KACND,EAAGqI,QAAOrI,EAAGqI,MAAQ/J,OAAO2C,UAC5BjB,EAAGsI,QACRtI,GAAGoI,EAAYG,YAAYvI,GAAGwI,EAAQC,KAAKzI,GAAK,GAChD,CAEDD,oBACC,CAEDmB,uBACC,MAAMlB,EAAKC,KAEX,GADAyI,cAAc1I,GAAGoI,IACZpI,EAAGsI,MAAO,OACf,MAAMvB,EAAQF,cAActG,OAAOP,EAAGqI,OACtC/J,OAAOqK,mBAAmBxJ,SAAU,WAAY4H,EAChD,CAEDyB,KACC,MAAMxI,EAAKC,KAEX,IADcD,EAAG+G,MACL,OACZ2B,cAAc1I,GAAGoI,GACjBvB,cAAcoB,MAAMjI,EAAG4I,OAAQ5I,EAAGqI,OAClC,MAAMQ,EAAQhC,cAAcO,IAAIpH,EAAGqI,OACnC/J,OAAOqK,mBAAmBxJ,SAAU,WAAY0J,EAChD,CAMGD,aACH,OAAO7D,OAAO+C,OAAO7H,KAAK8G,MAAMvB,UAAUC,KAAIqD,GAAKA,EAAEC,UAASC,KAAK,GACnE,CAMGjC,YACH,MAAM/G,EAAKC,KACX,OAAO8E,OAAO+C,OAAO3I,SAAS8J,aAAatD,QAAOuD,GAAMA,EAAGC,YAAcnJ,IAAI6F,KAC7E,CAMGyC,YAEH,MAAkB,eADPrI,KACDmJ,KADCnJ,KAC0B+D,KAAKnB,SAAS,OACnD,CAMGwF,YACH,OAAOpI,KAAKkD,aAAa,QACzB,CAEGkF,UAAMgB,EAAM,IACf,OAAOpJ,KAAKqJ,aAAa,QAASD,EAClC,QAGAE,eAAeC,OAAO,cAAetB,UAAW,CAAEuB,QAAS,SAC3D1E,OAAOiD,OAAOE,UACd,EC1Ea,MAAMwB,mBAAmBC,iBAEvCxE,cACCC,QACWnF,KACHoI,QADGpI,KACOoI,MAAQ/J,OAAO2C,SACjC,CAEDlB,oBACC,MAAMC,EAAKC,KAEX,IADcD,EAAG+G,MACL,OACZF,cAAcoB,MAAMjI,EAAG4I,OAAQ5I,EAAGqI,OAClC,MAAMQ,EAAQhC,cAAcO,IAAIpH,EAAGqI,OACnC/J,OAAOqK,mBAAmBxJ,SAAU,WAAY0J,EAChD,CAED3H,uBACC,MACM6F,EAAQF,cAActG,OADjBN,KAC2BoI,OACtC/J,OAAOqK,mBAAmBxJ,SAAU,WAAY4H,EAChD,CAEG6B,aACH,OAAO7D,OAAO+C,OAAO7H,KAAK8G,MAAMvB,UAAUC,KAAIqD,GAAKA,EAAEC,UAASC,KAAK,GACnE,CAEGjC,YACH,MAAM/G,EAAKC,KACX,OAAO8E,OAAO+C,OAAO3I,SAAS8J,aAAatD,QAAOuD,GAAMA,EAAGC,YAAcnJ,IAAI6F,KAC7E,CAEGwC,YACH,OAAOpI,KAAKkD,aAAa,QACzB,CAEGkF,UAAMgB,EAAM,IACf,OAAOpJ,KAAKqJ,aAAa,QAASD,EAClC,QAGAtE,OAAOiD,OAAO0B,YACdH,eAAeC,OAAO,eAAgBE,WAAY,CAAED,QAAS,SAC7D,ECjCa,MAAMG,cAActL,OAEvBI,gCACV,MAAO,CAAC,cAAe0G,MAAM1G,mBAC7B,CAED6C,kBAAkBnC,EAAMiC,EAAUC,GACjC,MAAMtB,EAAKC,KACX,GAAa,aAATb,EACJ,OAAOY,EAAG6J,SAAW7J,EAAGmB,UAAYnB,EAAGS,QACvC,CAED0E,cACCC,QACA,MAAMpF,EAAKC,KACND,EAAGqI,QAAOrI,EAAGqI,MAAQ/J,OAAO2C,UACjCjB,EAAG6J,SAAyB,GAAd7J,EAAG8J,SAAoB9J,EAAG+J,QAAUH,MAAMI,WAExD,CAQD7F,eACC,MAAMnE,EAAKC,KACX,IAAID,EAAG6J,SAEP,IACC,MAAMI,QAAYC,MAAMlK,EAAGE,KAC3B,IAAK+J,EAAIE,GAAI,OACb,MAAMpC,QAAYkC,EAAIG,OACtBvD,cAAcoB,MAAMF,EAAK/H,EAAGqI,OAC5B,MAAMtB,EAAQF,cAAcO,IAAIpH,EAAGqI,OAC/BtB,GAAOzI,OAAOqK,mBAAmBxJ,SAAU,WAAY4H,EAC3D,CAAC,MAAO9C,GACR4C,cAActG,OAAOP,EAAGqI,MAExB,CAED,CAEDlH,UACC,MAAMnB,EAAKC,KACX,IAAKD,EAAGgB,OAAQ,OAChB,MAAM+F,EAAQF,cAAcO,IAAIpH,EAAGqI,OACnCxB,cAActG,OAAOP,EAAGqI,OACxB/J,OAAOqK,mBAAmBxJ,SAAU,WAAY4H,GAChD5H,SAASoI,mBAAqBV,cAAcW,MAC5C,CAMGa,YACH,OAAOpI,KAAKkD,aAAa,QACzB,CAEGkF,UAAMgB,EAAM,IACf,OAAOpJ,KAAKqJ,aAAa,QAASD,EAClC,CAMGS,cACH,MAAwC,SAAjC7J,KAAKkD,aAAa,UACzB,CAMG0G,eACH,OAAO5J,KAAKmE,aAAa,WACzB,CAEGyF,aAASR,GAAM,GAClB,OAAOA,EAAMpJ,KAAKqJ,aAAa,WAAY,IAAMrJ,KAAKoK,gBAAgB,WACtE,CAMGN,YACH,OAAO9J,KAAKkD,aAAa,UAAY,SACrC,CAMU6G,yBAEV,OADW,IAAIM,gBAAgBrI,SAAS7B,KAAKmK,MAAM,IACzCnD,IAAI,UAAY,SAC1B,CAED5I,SAAgByF,GACf,MAAM8F,EAAQH,MAAMI,YACpB1E,MAAMC,KAAKpG,SAASqL,iBAAiB,WACnC7E,QAAOnF,GAAoB,GAAdA,EAAGsJ,UAChBpH,SAAQlC,GAAMA,EAAGqJ,SAAWrJ,EAAGuJ,QAAUA,GAC3C,QAGAhF,OAAOiD,OAAO4B,OACdL,eAAeC,OAAO,SAAUI,OAChCa,OAAOC,iBAAiB,aAAcd,OAAMe,GAAU,EACtD,EC7Ha,MAAMC,iBAAiBtM,OAKrCmC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAAS0L,cAAc,UAKlC,OAHArK,EAAGsK,IAAM9K,EAAGE,IACZF,EAAG+K,oBAAoBpF,QAAOhD,GAAW,QAANA,IAAaD,SAAQC,GAAKnC,EAAG8I,aAAa3G,EAAG3C,EAAGmD,aAAaR,MAEzFnC,CAEP,QAGA+I,eAAeC,OAAO,YAAaoB,UACnC7F,OAAOiD,OAAO4C,SACd,ECnBa,MAAMI,eAAe1M,OAKnCmC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAAS0L,cAAc,QAOlC,OALArK,EAAGwD,KAAOhE,EAAGE,IACbF,EAAG+K,oBAAoBpF,QAAOhD,GAAW,QAANA,IAAaD,SAAQC,GAAKnC,EAAG8I,aAAa3G,EAAG3C,EAAGmD,aAAaR,MAE5F3C,EAAGiL,QAAqB,eAAXzK,EAAG4I,KAAsB5I,EAAG8I,aAAa,KAAM,eAEzD9I,CAEP,CAEG4I,UACH,MAAMpJ,EAAKC,KACX,IAAImJ,EAAMpJ,EAAGmD,aAAa,QAAU,GAMpC,OALKiG,GACApJ,EAAGE,IAAI2C,SAAS,UACnBuG,EAAM,cAGDA,CACP,CAEG6B,aACH,OAAOhL,KAAKmE,aAAa,SACzB,QAGAmF,eAAeC,OAAO,UAAWwB,QACjCjG,OAAOiD,OAAOgD,OACd,ECzCa,MAAME,MAKpB1M,gBAAiB,EACjBA,gBAAiB,EAOjBA,YAAYgC,EAAI2K,GACflL,MAAKmL,EAAO5K,EAAI2K,GAAK,EAAM,OAC3B,CAOD3M,YAAYgC,EAAI2K,GACflL,MAAKmL,EAAO5K,EAAI2K,GAAK,EAAM,OAC3B,CAOD3M,aAAagC,EAAI2K,GAChBlL,MAAKmL,EAAO5K,EAAI2K,GAAK,EAAM,QAC3B,CAOD3M,aAAagC,EAAI2K,GACZD,MAAMG,SAASpL,MAAKmL,EAAO5K,EAAI2K,GAAK,EAAO,QAC/C,CAQD3M,WAAWgC,EAAI2K,EAAKG,GACnBrL,MAAKmL,EAAO5K,EAAI2K,EAAKG,EACrB,CAED9M,SAAcgC,EAAI2K,EAAKG,EAAQpH,GAC9B,IAAMoH,IAAUrL,KAAKsL,QAAU,OAC/B,MAAMC,EAAMhL,EAAK,GAAGA,EAAGiL,eAAejL,EAAG7B,OAAOwM,IAAQA,EACxD,IAAIO,EAAKC,QAAQzH,GAAQ,OACzBwH,EAAmB,mBAAPA,EAAoBA,EAAKC,QAAQC,IAC7CF,EAAGF,GACCL,aAAeU,OAAOH,EAAGP,EAC7B,QAGApG,OAAOC,KAAKkG,MACZ,ECjEa,MAAMY,KAEpBtN,SAAa,EAKbA,eACCyB,MAAKtB,EAAM,CACX,CAODH,YAAYuN,EAAQ,SACnB,MAAO,GAAGA,IAAQ9L,MAAKtB,KACvB,CAMUA,gBACV,OAAOsB,KAAK+L,MACZ,CAODxN,gBAAgBI,GACf,MAAME,GAAKF,GAAK,IAAIG,OACpB,IAAIF,EAAI,EAAGG,EAAI,EACf,GAAU,IAANF,EAAS,OAAOD,EACpB,KAAOG,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAExC,OAAOH,CACP,CAMDL,aAAagC,GACRA,IACHA,EAAG7B,GAAsB,iBAAV6B,EAAG7B,GAAkBmN,KAAKnN,GAAK6B,EAAG7B,IAAMmN,KAAKnN,GAE7D,QAGAoG,OAAOiD,OAAO8D,KACd,ECrDa,MAAMG,OAEpBzN,YAAoC,GAAtBmG,WAAWuH,QACzB1N,gBAAkB,mBAClBA,SAAyB,qCAEzBA,gBAAmB2N,IAAgBC,MAAMC,WAAWF,KAAOG,SAASH,GAEpE3N,cAAiBmE,GAA4B,kBAANA,GAAmBA,aAAa4J,QAEvE/N,gBAAkB6D,GAA0B,iBAAVA,EAElC7D,cAAgB6D,GAASA,QAEzB7D,gBAAkB,CAAC6D,EAAQ,IAAMA,EAAMmK,SAAS,GAEhDhO,aAAe,CAAC6K,EAAM,EAAGoD,EAAM,IAAMR,OAAOS,SAASrD,GAAOgD,WAAWhD,GAAOoD,EAE9EjO,cAAgB,CAAC6K,GAAM,IAAmD,SAAzCA,GAAKmD,WAAWlG,OAAO/D,cAExD/D,mBAAqB,CAACmO,EAAM,GAAItN,IAAQsN,EAAIzK,QAAQ,cAAc,CAAC0K,EAAGC,IAAMxN,EAAIwN,KAEhFrO,kBAAoB,CAACsO,EAAO,KAAOA,EAAOA,EAAK,GAAGC,cAAgBD,EAAKvC,MAAM,GAAGhI,cAAgB,GAEhG/D,qBAAuB,CAACsO,EAAO,GAAIzG,EAAQ,MAAQyG,EAAKzG,MAAMA,GAAOZ,KAAI,CAAC9C,EAAG3D,IAAMiN,OAAOe,WAAWrK,KAAIqG,KAAK3C,GAE9G7H,sBAAwB,CAACsO,EAAO,KAAOA,EAAKzG,MAAM,KAAKZ,KAAI,CAAC9C,EAAG3D,IAAMA,EAAIiN,OAAOe,WAAWrK,GAAKA,IAAGqG,KAAK,IAExGxK,iBAAmB,KAAQ,MAAM,IAAIqN,MAAM,oCAAmC,EAE9ErN,kBAAqBgC,GAAOA,aAAcA,EAAG2E,YAO7C3G,aAAe,CAAC0B,EAAM,KAAO,8CAA8C0B,KAAK1B,EAAIoG,QAEpF9H,cAAgB,CAAC6K,EAAM,KAAOA,EAAI/C,OAAO9C,WAAW,MAAQ6F,EAAI/C,OAAO2G,SAAS,KAQhFzO,oBAAsB,CAAC0O,EAAU,2BAA4BC,EAAU,qBAAuBD,EAAQhL,QAAQ,QAAQ,IAAMiL,EAAQC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQpO,WAM5JwO,oBACV,OAAO9L,UAAU+L,SAAW/L,UAAU+L,SAAW/L,UAAUgM,UAAU,EACrE,CAEDjP,oBAAoB6K,EAAM,IACzB,MAAqB,iBAAPA,IAAoBA,EAAI7F,WAAW,MAAQ6F,EAAI7F,WAAW,KACxE,CAODhF,kBAAkB6K,EAAM,IACvB,OAAOA,GAAO/D,MAAMoI,QAAQrE,IAAsB,iBAAPA,CAC3C,CAOD7K,cAAc6K,EAAM,IACnB,OAAO4C,OAAO0B,aAAatE,IAAQ4C,OAAO2B,WAAWvE,EACrD,CAOD7K,cAAc6K,EAAM,GAAIoD,EAAM,CAAE,EAAEoB,GAAY,GAC7C,OAAI5B,OAAO0B,aAAatE,GAAayE,KAAKC,MAAMF,EAAY5B,OAAO+B,cAAc3E,GAAOA,GACpF4C,OAAO2B,WAAWvE,GAAaA,GAC/BA,GAAK6B,MAAM+C,KAAK,KAAM,sCAAsC5E,KACzDoD,EACP,CAODjO,qBAAqB6K,EAAM,IAC1B,OAAOA,GAAKnH,QAAQ+J,QAAOiC,EAAiB,SAC5C,CAOD1P,iBAAiB6K,EAAK8E,EAAM,IAC3B,OAAQ9E,GAAO8E,GAAK3B,WAAWlG,MAC/B,CAQD9H,qBAAqB4P,EAAS,GAAI/L,EAAQ,IACzC,OAAQ+L,GACP,IAAK,YACJ/L,EAAQA,EAAME,cACd,MACD,IAAK,YACJF,EAAQA,EAAM0K,cACd,MACD,IAAK,aACJ1K,EAAQ4J,OAAOoC,cAAchM,GAG/B,OAAOA,CACP,CAYD7D,2BAA2B8P,EAAKC,GAC/B,MAAMC,EAAQzJ,OAAO0J,KAAKF,GACpBG,EAAO3J,OAAO+C,OAAOyG,GAC3B,OAAO,IAAII,YAAYH,EAAO,YAAYF,OAAnC,IAAgDI,EACvD,CAODlQ,kBAAkB6D,GACjB,IAAK4J,OAAO2C,SAASvM,GAAQ,OAC7B,IAAK4J,OAAO4C,iBAAiBxM,GAAQ,OACrC,IAAIyG,EAAI2B,OACJiB,EAAK,KAQT,OAPArJ,EAAMiE,OAAOD,MAAM,KAAK3D,SAAQ,CAACC,EAAG3D,EAAG0I,KACtC,GAAKoB,EACL,OAAI9J,EAAI0I,EAAE3I,OAAS,EACX+J,EAAIA,EAAEnG,QAEd+I,EAAK5C,EAAEnG,GAAE,IAEH+I,CACP,CAQDlN,wBAAwB6K,EAAM,IAC7B,OAAQ4C,OAAO6C,cAAczF,EAC7B,CAQD7K,qBAAqB6K,EAAM,IAC1B,OAA+C,IAAxC4C,OAAO4B,UAAUxE,GAAK/C,OAAOvH,MACpC,CASDP,qBAAqBuQ,EAAMC,GAC1B,MAAMC,EAAShD,OAAO4C,iBAAiBE,GACjCG,EAASjD,OAAO4C,iBAAiBG,GACvC,OAAIC,GAAUC,EACNH,EAAKzI,OAAO/D,eAAiByM,EAAM1I,OAAO/D,cAE3C0M,IAAWC,CAClB,CAUD1Q,qBAAqB2Q,EAAO,EAAGC,GAE9B,OADMA,EAASnD,OAAOS,SAAS0C,GAAUC,YAAYC,QAAQF,GAAUA,EAChE,IAAI1O,SAAQ,CAAC6O,EAASC,KAC5B,MAAMC,EAAMC,WAAWH,EAAQ9G,KAAK,MAAM,GAAO0G,GAC9CC,aAAkBC,aACpBD,EAAO1E,iBAAiB,SAAS,KAChCiF,aAAaF,GACbD,EAAO,IAAI3D,MAAM,mBAAmB,GAErC,GAEF,CAUDrN,oBAAoB2H,EAAM/G,EAAM8E,EAAO,gBAEtC,MAAM0L,EAAO,IAAIC,KAAK1J,EAAM,CAAEjC,KAAMA,IAC9BhE,EAAMyD,IAAImM,gBAAgBF,GAChC,IACC,MAAMlI,EAAIvI,SAAS0L,cAAc,KACjCnD,EAAE1D,KAAO9D,EACTwH,EAAEqI,SAAW3Q,EACbsI,EAAEsI,cAEI/D,OAAOqD,QAAQ,IAExB,CAAY,QACT3L,IAAIsM,gBAAgB/P,EACpB,CACD,CAiBD1B,gBAAgBY,EAAM8Q,EAAOC,EAAKnL,GAAO,EAAMgD,GAAS,EAAOoI,GAAS,GAClE7R,YAAY8R,cAAcH,KAC3B3G,eAAenC,IAAIhI,KACvBmK,eAAeC,OAAOpK,EAAM8Q,EAAO,CAAEzG,QAAS0G,GAAK5N,gBAC/CyC,IAASD,OAAOuL,SAASJ,IAAQnL,OAAOC,KAAKkL,GAC7ClI,IAAWjD,OAAOwL,SAASL,IAAQnL,OAAOiD,OAAOkI,GACjDE,IAAQI,KAAKN,EAAM9Q,MAAQ8Q,IAC/B,CAQD1R,0BAA0BsM,GACzB,MAAM8E,EAAO,IAAIC,KAAK,CAAC/E,GAAM,CAAE5G,KAAM,oBAC/BhE,EAAMyD,IAAImM,gBAAgBF,GAChC,IACC,aAAaa,OAAOvQ,EACvB,CAAY,QACTyD,IAAIsM,gBAAgB/P,EACpB,CACD,QAGA6E,OAAOC,KAAKiH,QACZtH,WAAWsH,OAASA,MACpB,ECpSa,IAAAyE,EAAA,MAAMC,WAQjBnS,kBAAqBkN,GAAqB,mBAAPA,EAEnClN,wBAAwBkN,GACpB,OAAOiF,WAAWC,WAAWlF,IAAOA,EAAGc,WAAW3J,SAAS,cAC9D,CASDrE,mBAAmBsK,EAAG4C,GAClB,OAAO5C,GAAK6H,WAAWC,WAAW9H,EAAE4C,GACvC,CASDlN,yBAAyBqS,EAAKzR,EAAMsM,GAChC,MAAMoF,IAAOD,GAAME,QAAQC,yBAAyBH,EAAII,UAAW7R,GACnE,OAAO0R,GAA4B,mBAAbA,EAAKpF,EAC9B,CAQDlN,uBAAuBkN,GACnB,IAAKiF,WAAWC,WAAWlF,GAAK,OAAO,EAEvC,IAAIwF,EAAUxF,aADQiF,WAAWQ,kBAAkBhM,YAGnD,OADK+L,IAASA,EAAoC,iBAA1BxF,EAAG0F,OAAOC,cAC3BH,CACV,CAWD1S,+BAA+BkN,EAAI4F,GAC/B,MAAMC,EAAOC,UAAYlM,MAAMC,KAAKiM,WAAWjH,MAAM,GAAK,GAC1D,aAAamB,EAAG+F,MAAMH,GAAS,KAAMC,EACxC,CAUD/S,wBAAwBkN,EAAI4F,GACxB,MAAMC,EAAOC,UAAYlM,MAAMC,KAAKiM,WAAWjH,MAAM,GAAK,GAC1D,OAAOmB,EAAG+F,MAAMH,GAAS,KAAMC,EAClC,CASD/S,0BAA0BkN,EAAI4F,EAAOI,GAAS,GAE1C,GADAhG,EAAKO,OAAO2C,SAASlD,GAAMiF,WAAWgB,cAAcjG,GAAMA,GACrDiF,WAAWC,WAAWlF,GAAK,OAChC,IAAKgG,GAAUf,WAAWiB,iBAAiBlG,GAAK,OAChD,MAAM6F,EAAOC,UAAYlM,MAAMC,KAAKiM,WAAWjH,MAAM,GAAK,GAC1D,OAAIoG,WAAWkB,gBAAgBnG,SACdiF,WAAWQ,kBAAkBzF,EAAI4F,KAAUC,GAErDZ,WAAWmB,iBAAiBpG,EAAI4F,KAAUC,EACpD,CAQD/S,qBAAqB6D,GACjB,MAAMqJ,EAAKO,OAAO8F,WAAW1P,GAC7B,OAAOsO,WAAWC,WAAWlF,GAAMA,EAAK,IAC3C,CAEDlN,eAA4BkN,EAAIsG,EAAST,GACrC,IAAKZ,WAAWC,WAAWlF,GAAK,OAEhC,OADgBiF,WAAWkB,gBAAgBnG,SAE1BA,EAAG+F,MAAMO,EAAST,GAExB7F,EAAG+F,MAAMO,EAAST,EAEhC,CAQD/S,oBAAoBkN,EAAIsG,GACpB,IAAIC,GAAM,EACV,OAAO9N,SAAUoN,KACb,GAAIU,EAAK,OACTA,GAAM,EACN,MAAMpB,EAAMmB,GAAW/R,KACvB,aAAa0Q,YAAWuB,EAAexG,EAAImF,EAAKU,EAAK,CAE5D,CAQD/S,oBAAoBkN,EAAIsG,GACpB,IAAIC,EAAM,EACV,MAAO,IAAIV,KACP,GAAIU,EAAM,EAAG,OACbA,IACA,MAAMpB,EAAMmB,GAAW/R,KACvB,OAAO,IAAIS,SAAQ,CAACyR,EAAQ3C,KACxB4C,gBAAejO,UACX,KAAI8N,GAAO,KACXA,IACY,IAARA,GACJ,IACI,MAAMnJ,QAAU6H,YAAWuB,EAAexG,EAAImF,EAAKU,GACnDY,EAAOrJ,EACV,CAAC,MAAO7E,GACLuL,EAAOvL,EAC/B,CAA8B,QACNgO,GAAO,CACV,IACH,GACJ,CAET,QAGGlN,OAAOC,KAAK2L,YACZhM,WAAWgM,WAAaA,UAC3B,GCrKU,MAAM0B,OAOpB7T,qBAAqBgC,GACpB,OAAOA,aAAcjC,WACrB,CASDC,cAAcgC,EAAIpB,EAAMiK,GAAM,GACxBgJ,OAAOC,cAAc9R,KACtB6I,EACH7I,EAAG8I,aAAalK,EAAM,IAEtBoB,EAAG6J,gBAAgBjL,GAEpB,CASDZ,WAAWgC,EAAIpB,EAAMiK,GACfgJ,OAAOC,cAAc9R,KACtByL,OAAO4B,UAAUxE,GACpB7I,EAAG8I,aAAalK,EAAMiK,GAEtB7I,EAAG6J,gBAAgBjL,GAEpB,CAUDZ,WAAWgC,EAAIpB,EAAO,GAAIiK,EAAM,IAC/B,IAAKgJ,OAAOC,cAAc9R,GAAK,OAAO6I,EACtC,IAAK4C,OAAOsG,WAAW/R,GAAK,OAC5B,MAAMmC,EAAInC,EAAG2C,aAAa/D,IAASiK,EACnC,OAAO4C,OAAO4B,UAAUlL,EACxB,CAUDnE,iBAAiBgC,EAAIpB,EAAO,GAAIiK,EAAM,SACrC,MAAMmJ,EAAOH,OAAOjL,IAAI5G,EAAIpB,EAAMiK,GAClC,OAAO4C,OAAOwG,OAAOD,EAAMnJ,EAC3B,CAUD7K,gBAAgBgC,EAAIpB,EAAO,GAAIiK,EAAM,KACpC,MAAMmJ,EAAOH,OAAOjL,IAAI5G,EAAIpB,EAAMiK,GAClC,OAAO4C,OAAOyG,MAAMF,EAAMnJ,EAC1B,CAUD7K,iBAAiBgC,EAAIpB,EAAO,GAAIiK,EAAM,KACrC,MAAMmJ,EAAOH,OAAOjL,IAAI5G,EAAIpB,EAAMiK,EAAK,CAAA,GACvC,OAAO4C,OAAO0G,OAAOH,EACrB,CAQDhU,iBAAiBgC,EAAIpB,EAAO,GAAIiK,EAAM,SACrCgJ,OAAOpL,IAAIzG,EAAIpB,EAAM6M,OAAOwG,OAAOpJ,IAAM,EACzC,CAQD7K,gBAAgBgC,EAAIpB,EAAO,GAAIiK,EAAM,KACpCgJ,OAAOpL,IAAIzG,EAAIpB,EAAM6M,OAAOyG,MAAMrJ,GAAMuJ,IACxC,CAQDpU,iBAAiBgC,EAAIpB,EAAO,GAAIiK,EAAM,KACrCgJ,OAAOpL,IAAIzG,EAAIpB,EAAM0O,KAAK+E,UAAUxJ,GAAM,KAC1C,CAOD7K,mBAAmBa,GAClB,OAAO0F,OAAOwB,QAAQlH,GAAK,CAAE,GAAEoG,KAAIe,GAAM,GAAGA,EAAG,MAAMA,EAAG,OAAMwC,KAAK,IACnE,CAODxK,kBAAkBa,EAAKmB,GACjB6R,OAAOC,cAAc9R,IAC1BuE,OAAOwB,QAAQlH,GAAK,CAAE,GAAEoG,KAAIe,GAAM6L,OAAOpL,IAAIzG,EAAIgG,EAAG,GAAIA,EAAG,KAC3D,CAODhI,oBAAoBgC,GACnB,OAAO8E,MAAMC,KAAK/E,EAAGsS,YACnBnN,QAAOhD,GAAKA,EAAEvD,KAAKoE,WAAW,WAC9BiC,KAAI9C,GAAK,GAAGA,EAAEvD,SAASuD,EAAEN,WACzB2G,KAAK,IACP,CAQDxK,eAAegC,EAAIuS,EAAM,KACxB,OAAOzN,MAAMC,KAAK/E,GAAIsS,YAAc,IAAIrN,KAAIiC,GAAK,GAAGA,EAAEtI,SAASsI,EAAErF,WAAU2G,KAAK+J,EAChF,CAQDvU,eAAewU,EAAMC,EAAM,IAC1B,OAAO,IAAIC,MAAMF,EAAM,CAEtB/L,IAAIhE,EAAQyD,EAAMrE,GACjB,GAAa,SAATqE,EAAiB,OACrB,GAAa,YAATA,EAAoB,OAAOzD,EAAOtC,QAAU0B,EAChD,MAAM6B,EAAO+O,EAAIvM,IAAOxC,KAExB,OADAwC,EAAOuM,EAAIvM,IAAOyM,WAAazM,EACxBxC,GACN,KAAKqI,QACJ8F,OAAOe,OAAOnQ,EAAQyD,EAAOuF,OAAOwG,OAAOpQ,IAC3C,MACD,KAAKgR,OACJhB,OAAOiB,SAASrQ,EAAQyD,EAAMrE,GAC9B,MACD,KAAK0C,OACL,KAAKO,MACJ+M,OAAOpL,IAAIhE,EAAQyD,EAAMoH,KAAK+E,UAAUxQ,IACzC,QACCgQ,OAAOpL,IAAIhE,EAAQyD,EAAMrE,GAG3B,OAAO,CACP,EAED+E,IAAInE,EAAQyD,GACX,GAAa,YAATA,EAAoB,OAAOzD,EAAOtC,QACtC,GAAa,SAAT+F,EAAiB,OAAOzD,EAC5B,MAAMiB,EAAO+O,EAAIvM,IAAOxC,KAClBqP,GAA6B,IAArBN,EAAIvM,IAAO6M,MACzB7M,EAAOuM,EAAIvM,IAAOyM,WAAazM,EAC/B,IAAI2C,EAAMgJ,OAAOjL,IAAInE,EAAQyD,GAC7B,OAAOxC,GACN,KAAKqI,QACJ,OAAOtJ,EAAOmB,aAAasC,GAC5B,KAAK2M,OACJ,OAAOpH,OAAOyG,MAAMrJ,EAAK,GAC1B,KAAKtE,OACJ,OAAOkH,OAAO0G,OAAOtJ,EAAK,CAAE,GAC7B,KAAK/D,MACJ,OAAO2G,OAAO0G,OAAOtJ,EAAK,IAC3B,QAEC,OADAA,EAAMA,GAAO,GACNkK,EAAQtH,OAAOuH,cAAcnK,GAAOA,EAE7C,GAEF,QAGAtE,OAAOC,KAAKqN,QACZ1N,WAAW0N,OAASA,MACpB,ECjOa,IAAAoB,EAAA,MAAMC,SAEjBlV,WAAiBmG,WAAWxF,UAAUwU,MAAMC,iBAE5CnO,GAEAN,YAAY0O,GACG5T,MACRwF,EAAOiO,UAASI,EAAQD,EAC9B,CAEDzM,IAAIhI,GACA,MAAMY,EAAKC,KACX,GAAKD,GAAGyF,EACR,OAAOiO,UAASK,EAAU/T,GAAGyF,EAAK2B,IAAIhI,GAAQY,GAAGyF,EAAKwG,OAAO+H,eAAe5U,GAC/E,CAEDwJ,OAAOxJ,GACH,OAAQa,KAAKmH,IAAIhI,IAAS,KAAKoN,UAClC,CAEDiG,OAAOrT,GACH,MAAMiK,EAAMpJ,KAAKmH,IAAIhI,GACrB,OAAO6M,OAAOwG,OAAOiB,UAASK,EAAU1K,GAAKhH,MAAQgH,EACxD,CAEDqJ,MAAMtT,GACF,IAAIiK,EAAMpJ,KAAKmH,IAAIhI,GAInB,OAHIsU,UAASK,GAAWpD,EAAWC,WAAWvH,GAAK4K,KAC9B,WAAb5K,EAAI6K,OAAmB7K,EAAMA,EAAI4K,GAAG,OAErChI,OAAOyG,MAAMgB,UAASK,EAAU1K,GAAKhH,MAAQgH,EAAIrG,MAAM,gBAAgB2C,QAAOhD,GAAIsJ,OAAOS,SAAS/J,KAAIwR,QAChH,CAEDC,QAAQhV,EAAMiD,GACV,OAAOpC,KAAK2I,OAAOxJ,IAASiD,CAC/B,CAOD7D,SAAegC,GACX,OAAIkT,UAASK,EAAgBvT,EAAGoT,mBAC5BjP,WAAW8F,QAAQ4J,iBAAyB1P,WAAW8F,OAAO4J,iBAAiB7T,GAC5E,IACV,CAODhC,kBAAkBgC,EAAIpB,GAClB,OAAOsU,SAASY,qBAAqB9T,GAAI4G,IAAIhI,EAChD,CAODZ,4BAA4BqV,GACxB,OAAO,IAAIH,SAASG,EACvB,CAEDrV,SAAkBmO,GACd,OAAKA,GACLA,EAAM/E,OAAO+E,GAAKzK,QAAQ,iBAAkB,SACjCA,QAAQ,SAAU,KAAKoE,OAFhB,EAGrB,CAEJ9H,SAAcmO,EAAK4H,GACZ,OAAO5H,EAAItG,MAAMkO,GAAI9O,KAAImH,GAAKA,EAAEtG,SAAQX,QAAOiH,GAAKA,GACvD,CAEDpO,SAAoBgW,EAASC,GACzB,QAAOD,GAAUC,EAAIC,MAAK9H,GAAK4H,EAAQ3R,SAAS+J,IACnD,CAOJpO,gBAAgBmW,GACf,MAAM3U,EAAM0T,SACAkB,EAAa5U,GAAGqG,EAAOrG,GAAG6N,EAAW8G,GAAW,KAItD,OAHerP,MAAMC,KAAKZ,WAAWxF,SAAS8J,aACpBxD,KAAImH,GAAKtH,MAAMC,KAAKqH,EAAEpH,UAAY,MAChCqP,QAAO,CAACC,EAAKlI,IAAMkI,EAAIC,OAAOnI,IAAI,IAC9CjH,QAAQiH,GAAM5M,GAAGgV,EAAahV,GAAG6N,EAAWjB,EAAElH,cAAekP,IAChF,QAGG7P,OAAOC,KAAK0O,UACZ/O,WAAW+O,SAAWA,QACzB,GCnGU,MAAMuB,OAOjBzW,aAAa2H,GACT,OAAOb,MAAMC,KAAK,IAAI2P,IAAI/O,GAC7B,CAED3H,qBAAuB,CAACkJ,EAAGC,IAAOD,EAAE3I,SAAW4I,EAAE5I,QAAU2I,EAAEyN,OAAM,CAACtB,EAASuB,IAAUvB,IAAYlM,EAAEyN,KASrG5W,mBAAmBkJ,EAAGC,GAElB,QAAKrC,MAAMoI,QAAQhG,OACdpC,MAAMoI,QAAQ/F,KACfD,IAAMC,IAEVD,EAAIA,EAAE2N,WACN1N,EAAIA,EAAE0N,WAECJ,OAAOK,cAAc5N,EAAGC,KAClC,CAQDnJ,mBAAmB+W,EAAQ,GAAIC,EAAS,IACpC,MAAO,IAAID,KAAUC,GAAQ7P,QAAO,CAACtD,EAAO+S,EAAOK,IAAQA,EAAIC,QAAQrT,KAAW+S,GACrF,CASD5W,kBAAkBmH,EAAQQ,EAAMwP,GAG5B,OADAxP,EAAOb,MAAMoI,QAAQvH,GAAQA,EAAO,GACX,IAAlBR,EAAO5G,OAAeoH,EAAOA,EAAKR,QAAOiQ,GAAOX,OAAOY,aAAaD,EAAKjQ,EAAQgQ,IAC3F,CASDnX,oBAAoBoX,EAAKjQ,EAAQgQ,GAG7B,MADmC,iBAAXhQ,EACNsP,OAAOa,aAAaF,EAAKjQ,EAAQgQ,GAAUV,OAAOc,cAAcH,EAAKjQ,EAC1F,CASDnH,oBAAoBoX,EAAKjQ,EAAS,GAAIgQ,GAClChQ,EAASA,EAAOpD,cAChBoT,EAASA,GAAU5Q,OAAO0J,KAAKmH,GAC/B,IAAIvT,EAAQ,KACZ,IAAK,IAAI2T,KAAOL,EAEZ,GADAtT,EAAQuT,EAAII,IACP,GAAK3T,GAAOmK,WAAWjK,cAAcM,SAAS8C,GAAS,OAAO,EAEvE,OAAO,CACV,CAaDnH,qBAAqBoX,EAAKjQ,GAEtB,IAAIsQ,GAAQ,EACRjT,EAAQ,KAEZ,IAAK,IAAIkT,KAAOvQ,EAGZ,GAFA3C,EAAQkT,GAAK7T,OAAOmK,WAAWjK,cAC/B0T,EAAQA,IAAU,GAAKL,EAAIM,EAAI9W,OAAO+W,oBAAoBtT,SAASG,IAC9DiT,EAAO,MAGhB,OAAOA,CACV,CAQDzX,gBAAgBiJ,EAAMtB,GAClB,OAAoB,IAAhBsB,EAAK1I,OAAqBoH,EACvBA,EAAKkP,UAAS,CAAC3N,EAAGC,IAAMsN,OAAOmB,SAAS1O,EAAGC,EAAGF,IACxD,CASDjJ,gBAAgBkJ,EAAGC,EAAGF,GAElB,MAAMiG,EAAUpI,MAAMoI,QAAQhG,GAC9B,IAAIlF,EAAM,EAaV,OAXAiF,EAAK/E,SAAQ,CAACoG,EAAG9J,KACb,IAAK8J,EAAG,OACR,MAAMuN,EAAMpK,OAAOS,SAAS5D,GAAKA,EAAIA,EAAEuN,IACjCC,EAAMrK,OAAOS,SAAS5D,EAAEyN,KAAOzN,EAAEyN,IAAMvX,EACvCgX,EAAMtI,EAAU4I,EAAMxN,EAAE1J,KACxBoX,EAAK9O,EAAEsO,GACPS,EAAK9O,EAAEqO,GAEbxT,EAAMyS,OAAOyB,QAAQF,EAAIC,EAAIJ,EAAK7T,EAAI,IAGnCA,CACV,CAUDhE,eAAegY,EAAIC,EAAIpO,EAAO7F,GAE1B,OAAIyJ,OAAOS,SAAS8J,IAAOvK,OAAOS,SAAS+J,GAChCjU,GAAOyS,OAAO0B,WAAWH,EAAIC,EAAIpO,GACjC4D,OAAO2C,SAAS4H,IAAOvK,OAAO2C,SAAS6H,GACvCjU,GAAOyS,OAAO2B,cAAcJ,EAAIC,EAAIpO,GACrC4D,OAAO4K,OAAOL,IAAOvK,OAAO4K,OAAOJ,GAClCjU,GAAOyS,OAAO6B,YAAYN,EAAIC,EAAIpO,GAEtC7F,CACV,CASDhE,mBAAmBgY,EAAIC,EAAIJ,GAGvB,OAFAG,EAAKA,EAAK,EAAI,EACdC,EAAKA,EAAK,EAAI,EACPxB,OAAO0B,WAAWH,EAAIC,EAAIJ,EACpC,CASD7X,qBAAqBgY,EAAIC,EAAIJ,GACzB,MAAMU,GAAMP,GAAM,IAAIhK,WAChBwK,GAAMP,GAAM,IAAIjK,WACtB,OAAO6J,EAAM,EAAIW,EAAGnP,cAAckP,GAAMA,EAAGlP,cAAcmP,EAC5D,CASDxY,kBAAkBgY,EAAIC,EAAIJ,GACtB,OAAOA,EAAM,EAAII,EAAKD,EAAKA,EAAKC,CACnC,CAUJjY,oBAAoBa,EAAKD,EAAMiD,EAAO4U,GAAa,GAC5C,GAAIA,GAAchL,OAAOiL,OAAO7U,GAAQ,OAExC,MAAM8U,EAAM/X,EAAKiH,MAAM,KACvB,GAAmB,IAAf8Q,EAAIpY,OACJ,OAAOkW,QAAOmC,EAAoB/X,EAAKD,EAAMiD,GAGjD,MAAMgV,EAAOF,EAAI5M,MAAM,GAAI,GACrByL,EAAMmB,EAAI5M,OAAO,GAAG,GAO1B,OALA8M,EAAK3U,SAASC,IACNtD,EAAIiY,eAAe3U,KAAItD,EAAIsD,GAAK,IACpCtD,EAAMA,EAAIsD,EAAE,IAGTsS,QAAOmC,EAAoB/X,EAAK2W,EAAK3T,EAClD,CAEE7D,SAA2Ba,EAAKD,EAAMiD,GAalC,OAZIhD,EAAIiY,eAAelY,IACdkG,MAAMoI,QAAQrO,EAAID,MACnBC,EAAID,GAAQ,CAACC,EAAID,KAEjBkG,MAAMoI,QAAQrL,GACdhD,EAAID,GAAQC,EAAID,GAAM2V,OAAO1S,GAE7BhD,EAAID,GAAMmY,KAAKlV,IAGnBhD,EAAID,GAAQiD,EAEThD,CACV,CASDb,wBAAwBa,EAAKD,GACzB,GAAI6M,OAAOiL,OAAO7X,GAAM,OACxB,MAAMmY,EAAI,YAEV,IAAIrL,EAAI/M,EACJJ,EAAI,GAUR,OAZgBwY,EAAE5V,KAAKxC,IAKnB+M,EAAI/M,EAAK8C,QAAQsV,EAAG,IACpBxY,EAAII,EAAK4D,MAAMwU,GAAGrD,QAAQnR,MAAM,OAAOmR,QACvCnV,EAAIiN,OAAOyG,MAAM1T,GACjBK,EAAMA,EAAIiY,eAAenL,GAAK9M,EAAMA,EAAI8M,GAAGnN,GAAK,MAEhDK,EAAMA,EAAIiY,eAAenL,GAAK9M,EAAMA,EAAI8M,GAAK,KAE1C9M,CACV,CASJb,sBAAsBa,EAAKD,GAI1B,OAHAA,EAAKiH,MAAM,KACJV,QAAOhD,IAAMsJ,OAAOiL,OAAOvU,KAC3BD,SAAQC,GAAKtD,EAAM4V,OAAOwC,iBAAiBpY,EAAKsD,KAChDtD,CACP,CAQDb,uBAAuBa,EAAKD,GACrB,QAAKA,IACXA,EAAKiH,MAAM,KACJV,QAAOhD,IAAMsJ,OAAOiL,OAAOvU,KAC3BD,SAAQC,GAAKtD,EAAM4V,OAAOwC,iBAAiBpY,EAAKsD,OAChDtD,EACP,QAGM0F,OAAOC,KAAKiQ,QACZtQ,WAAWsQ,OAASA,MACvB,EC7SU,MAAMyC,MAEpBlZ,uBAAyB,0WACzBA,mBAAqB,iLACrBA,SAAiB,CAAC,QAAS,SAAU,WAAY,UAGjDA,aAAe,IAMJmZ,2BACV,OAAOD,MAAME,OAAOzY,SAASwY,cAC7B,CAODnZ,cAAcgC,GACb,OAAOA,EAAGqX,YAAYF,cAAgBD,MAAME,OAAOpX,EAAGqX,YAAYF,eAAiBnX,CACnF,CAODhC,iBAAiBgC,GAChB,IAAKkX,MAAMpF,cAAc9R,GAAK,OAAO,EACrC,MAAMuH,EAAM2L,EAASY,qBAAqB9T,GACpCsX,GAAc/P,EAAIqM,QAAQ,aAAc,UACxC2D,GAAWhQ,EAAIqM,QAAQ,UAAW,QAClC4D,EAAUjQ,EAAI2K,MAAM,WAAa,EACjCuF,EAAOzX,EAAG0X,wBAEhB,OADcD,EAAKE,MAAQ,GAAKF,EAAKG,OAAS,GAC/BJ,GAAWF,GAAcC,CACxC,CAUDvZ,aAAa6Z,EAAO,GAAIC,GAAS,EAAOC,EAAO,aAC9C,IACC,MACMC,GADS,IAAIC,WACAC,gBAAgBL,EAAME,GACzC,OAAOD,EAAUE,GAAK3X,MAAM8X,mBAAqBH,GAAK7E,MAAMgF,kBAAqBH,CACjF,CAAC,MAAOvU,GAER,MADAiH,MAAM0N,MAAM,KAAM3U,GACZA,CACN,CACD,CAQDzF,oBAAoBqS,EAAK/F,EAAM,GAAI+N,GAAY,GAE9C,MAAML,EAAMd,MAAM3J,MAAMjD,GAIlBgO,EAAQ,IAHDpB,OAAMqB,EAAUP,EAAI3X,KAAKmY,aACzBtB,OAAMqB,EAAUP,EAAI7E,KAAKqF,WAIhCC,EAAOJ,GAA8B,IAAjBC,EAAM/Z,OAE1BuP,EAAMoJ,MAAMuB,KAAKpI,EAAKoI,EAAO,KAAOH,EAAM3E,SAEhD,KAAO2E,EAAM/Z,OAAS,GAAGuP,EAAIxN,YAAYgY,EAAM3E,SAE/C,OAAO7F,CACP,CASD9P,YAAYqS,EAAK5N,GAChB,OAAOyU,MAAMwB,KAAKrI,EAAK5N,GAAU9D,SAAS0L,cAAc,YACxD,CASDrM,YAAYqS,EAAK5N,GAGhB,OAFAA,EAAOqG,aAAa,QAAS,IAAIuH,EAAIlS,MACjCkS,EAAIsI,MAAMlW,EAAOqG,aAAa,OAAQuH,EAAIsI,MACvClW,CACP,CAEDzE,SAAiBsa,GAChB,OAAOxT,MAAMC,KAAKuT,GAAS,IAAInT,QAAOnF,IAAOkX,MAAM0B,OAAO5Y,IAC1D,CAODhC,qBAAqBgC,GACpB,MAAMpB,EAAO6M,OAAO2C,SAASpO,GAAMA,EAAKA,GAAI6Y,QAC5C,OAAO3B,OAAM4B,EAAQzW,SAASzD,EAC9B,CAEDZ,uBAAuBgC,GACtB,OAAQA,aAAc+Y,mBACF,cAAhB/Y,GAAI6Y,SACJ3B,MAAM8B,SAAShZ,EAAI,MACvB,CASDhC,iBAAiBgC,EAAI0D,GAGpB,KADeA,GAAQ1D,GACV,OAAO,EAIpB,IAFcyL,OAAO2C,SAAS1K,GAElB,OAAO1D,aAAc0D,EAEjC,MAAMuV,EAAWlQ,eAAenC,IAAIlD,EAAK3B,eACzC,GAAIkX,GAAYjZ,aAAciZ,EAAU,OAAOjZ,EAE/C,MAAMkZ,EAAKhC,MAAMiC,YAAYnZ,GAC7B,IAAK,IAAIoZ,KAAOF,EACf,GAAIE,GAAKzU,aAAa/F,OAAS8E,EAAM,OAAO1D,EAG7C,OAAI0D,EAAK6I,gBAAkBvM,EAAG6Y,SAAgB7Y,CAG9C,CAMDhC,yBAAyBgC,GACxB,OAAOA,aAAcqZ,mBACrB,CAMDrb,qBAAqBgC,GACpB,OAAOA,aAAcjC,WACrB,CAMDC,oBAAoBgC,GACnB,OAAOA,aAAcsZ,UACrB,CAMDtb,cAAcgC,GACb,OAAOA,aAAcuZ,IACrB,CAMDvb,iBAAiBgC,GAChB,OAAOA,aAAcwZ,OACrB,CAKDxb,mBAAmBgC,GAClB,IAAKA,GAAIyZ,UAAW,OAAO,EAC3B,MAAMP,EAAKhC,MAAMiC,YAAYnZ,GAC7B,IAAK,IAAImC,KAAK+W,EAAI,CACjB,IAAK/W,EAAG,MACR,GAAqB,cAAjBA,GAAGsX,UAA2B,OAAO,CACzC,CACD,OAAO,CACP,CAODzb,iBAAiBgC,GAChB,OAAkD,IAA3CA,GAAI2C,aAAa,OAAOuS,QAAQ,MACvC,CAODlX,iBAAiBgC,GAChB,OAAO8E,MAAMC,KAAK/E,GAAI0Z,YAAc,IAAIvU,QAAO1B,GAAKyT,MAAMyC,YAAYlW,IACtE,CAQDzF,YAAYgC,EAAI4Z,GAAc,GAC7B,OAAO5Z,GAAI6Z,WAAWC,IAAIF,EAAc,sBAAwB,UAChE,CAQD5b,YAAYgC,EAAI4Z,GAAc,GAC7B,OAAO5Z,GAAI6Z,WAAW9Z,OAAO6Z,EAAc,sBAAwB,UACnE,CAQD5b,kBAAkByE,EAAQsX,GACzB,MAAMC,EAAa9C,MAAMpF,cAAciI,IAAU7C,MAAM+C,aAAaF,GAC9DG,EAAOhD,MAAMpF,cAAcrP,IAAWuX,EACtCG,EAAU1X,IAAWsX,GAAStX,EAAO2X,aAAeL,GAAStX,EAAO4X,qBAAuBN,EACjG,SAAOG,GAASC,IAAU1X,EAAO2X,WAAWE,aAAaP,EAAOtX,EAAO4X,mBACvE,CAQDrc,mBAAmByE,EAAQsX,GAE1B,UADa7C,MAAMpF,cAAcrP,IAAWyU,MAAMpF,cAAciI,KACjDtX,IAAWsX,IAAQtX,EAAOnC,YAAYyZ,EACrD,CASD/b,sBAAsByE,EAAQsX,EAAOQ,GACpC,MAAMC,EAAOtD,MAAMpF,cAAcrP,IAAWyU,MAAMpF,cAAciI,GAC1DI,EAAU1X,IAAWsX,GAAStX,EAAO2X,aAAeL,EAC1D,SAAOS,GAASL,IAAU1X,EAAOlC,sBAAsBga,EAAWR,EAClE,CAOD/b,qBAAqBgC,GACpB,OAAOkX,MAAMuD,OAAOza,IAAK0a,YAAY1a,EACrC,CAWDhC,YAAY2c,EAAMC,GAAU,EAAOtG,GAAM,EAAO7J,GAAS,GACxD,OAAOmQ,EAAU1D,MAAM2D,UAAUF,GAAQzD,MAAM4D,SAASH,EAAMrG,EAAK7J,EACnE,CAWDzM,gBAAiB2c,EAAMrG,GAAM,EAAO7J,GAAS,EAAMsQ,GAAQ,GAC1D,IAAKJ,EAAM,OACPI,UAAaJ,GACblQ,UAAeyM,MAAM4D,SAASH,EAAKtD,WAAY/C,EAAK7J,GAAQ,IAChE,MAAMuQ,EAAO1G,EAAMqG,EAAKjB,WAAaiB,EAAKnC,SAC1C,GAAKwC,EACL,IAAK,IAAID,KAASC,QACV9D,MAAM4D,SAASC,EAAOzG,EAAK7J,GAAQ,EAE3C,CAQDzM,cAAcgC,GACb,OAAOA,EAAMA,EAAGib,eAAiBjb,EAAGoa,YAAcpa,EAAGwS,KAAQ,IAC7D,CAQDxU,iBAAkBgC,GACjB,IAAIyD,EAAIyT,MAAMuD,OAAOza,GACrB,KAAOyD,SACAA,EACNA,EAAIyT,MAAMuD,OAAOhX,GAElB,GAAIA,EAAG,aAAaA,CACpB,CAQDzF,mBAAoBgC,GACnB,IAAIyD,EAAIzD,EAAGyQ,UACX,KAAOhN,SACAA,EACNA,EAAIA,EAAEgN,UAEP,GAAIhN,EAAG,aAAaA,CACpB,CAODzF,oBAAoBgC,GACnB,IAAIkb,EAASlb,GAAImb,aACjB,GAAID,EAAQ,OAAOA,EACnB,MAAMhC,EAAKhC,MAAM2D,UAAU7a,GAC3B,IAAK,MAAMob,KAAKlC,EAEf,GADAgC,EAASE,EAAED,aACPD,EAAQ,MAEb,OAAOA,CACP,CAODld,YAAYgC,GAEX,IAAKA,EAAI,OAAO,KAEhB,MAAMkZ,EAAKhC,MAAM2D,UAAU7a,GAC3B,IAAK,IAAImC,KAAK+W,EAAI,CACjB,GAAI/W,aAAakZ,WAAY,OAAOlZ,EACpC,GAAIA,aAAamZ,gBAAiB,OAAOnZ,CACzC,CAED,OAAO,IACP,CAODnE,uBAAuB2c,GACtB,IAAKzD,MAAMpF,cAAc6I,GAAO,OAAO,EACvC,IAAI/F,EAAQ,EACZ,KAAQ+F,EAAOA,EAAKY,wBACnB3G,IAED,OAAOA,CACP,CAQD5W,eAAegC,EAAI7B,GAClB,GAAkB,iBAAP6B,EAAiB,OAAOkX,MAAMsE,QAAQ7c,SAAS8c,gBAAiBzb,GAC3E,IAAMA,IAAM7B,EAAK,OAAO,KACxB,MAAM+a,EAAKhC,MAAMwE,KAAK1b,GAAI,GAC1B,IAAK,IAAIsI,KAAK4Q,EACb,GAAI5Q,EAAEnK,KAAOA,EAAI,OAAOmK,EAEzB,OAAO,IACP,CAQDtK,eAAegC,EAAI2b,GAClB,GAAkB,iBAAP3b,EAAiB,OAAOkX,MAAM0D,QAAQjc,SAAS8c,gBAAiBE,GAC3E,IAAM3b,IAAM2b,EAAM,OAAO,KACzB,MAAMzC,EAAKhC,MAAMwE,KAAK1b,GAAI,GAC1B,IAAK,IAAIsI,KAAK4Q,EACb,GAAIhC,MAAMtD,QAAQtL,EAAGqT,GAAM,OAAOrT,EAEnC,OAAO,IACP,CASDtK,aAAagC,EAAI2b,EAAKrH,GAAM,EAAO7J,GAAS,GAC3C,GAAkB,iBAAPzK,EAAiB,OAAOkX,MAAM0E,MAAMjd,SAAS8c,gBAAiBzb,EAAIsU,EAAK7J,GAClF,IAAMzK,IAAM2b,EAAM,OAAO,KACzB,GAAIzE,MAAMtD,QAAQ5T,EAAI2b,GAAM,OAAOzE,OAAM7O,EAAOrI,GAChD,MAAMkZ,EAAKhC,MAAMwE,KAAK1b,GAAI,EAAOsU,EAAK7J,GACtC,IAAK,IAAInC,KAAK4Q,EACb,GAAIhC,MAAMtD,QAAQtL,EAAGqT,GAAM,OAAOzE,OAAM7O,EAAOC,GAEhD,OAAO,IACP,CASDtK,gBAAgBgC,EAAI2b,EAAKrH,GAAM,EAAO7J,GAAS,GAC9C,GAAkB,iBAAPzK,EAAiB,OAAOkX,MAAM2E,SAASld,SAAS8c,gBAAiBzb,EAAIsU,EAAK7J,GACrF,MAAMhB,EAAM,GACZ,IAAMzJ,IAAM2b,EAAM,OAAOlS,EACzB,MAAMyP,EAAKhC,MAAMwE,KAAK1b,GAAI,EAAOsU,EAAK7J,GACtC,IAAK,IAAInC,KAAK4Q,EACThC,MAAMtD,QAAQtL,EAAGqT,IAAMlS,EAAIsN,KAAKG,OAAM7O,EAAOC,IAElD,OAAOmB,CACP,CAKDzL,SAAcgC,GACb,MAAmB,SAAfA,EAAG6Y,QAA2B7Y,EAC7BkX,MAAMpF,cAAc9R,EAAG7B,IACrB,IAAIuU,MAAM1S,EAAI,CACpB4G,IAAK,CAAUnE,EAAQyD,EAAM4V,KAC5B,GAAa,YAAT5V,EAAoB,OAAOzD,EAC/B,GAAa,OAATyD,EAAe,OAAOzD,EAAOE,aAAa,MAC9C,MAAM8G,EAAM8G,QAAQ3J,IAAInE,EAAQyD,GAChC,OAAOiK,WAAWC,WAAW3G,GAAOA,EAAIxB,KAAKxF,GAAUgH,CACvD,EACDhD,IAAK,CAAUhE,EAAQyD,EAAMrE,IACrBY,EAAOyD,GAAQrE,IATgB7B,CAYxC,CAQDhC,eAAegC,EAAI2b,GAElB,OAAO3b,GAA4B,mBAAfA,EAAG4T,SAA0B5T,EAAG4T,QAAQ+H,EAC5D,CAaD3d,eAAegC,EAAI6I,EAAM,GAAIkT,GAAW,EAAOC,IAC9Bhc,aAAcqb,YAAcrb,aAAcjC,aAAeiC,aAAcqZ,uBAEnF0C,GAAY/b,GAAIic,QACnBD,EAAYhc,EAAGic,QAAQpT,EAAK,CAACmT,cAAchc,EAAGic,QAAQpT,GAEtD7I,EAAGkc,UAAYrT,aAAesT,SAAWtT,EAAIsK,KAAK+I,UAAYrT,EAE/D,CAQD7K,eAAegC,EAAI6I,EAAM,IACpB7I,IAAIA,EAAGoc,YAAcvT,EACzB,CAOD7K,WAAWgC,EAAInB,GAGd,GAFI4M,OAAO2C,SAASpO,KAAKA,EAAKkX,MAAM2E,SAAS7b,IACzCkX,MAAMpF,cAAc9R,KAAKA,EAAK,CAACA,MAC7B8E,MAAMoI,QAAQlN,IAAOA,EAAGzB,OAAS,GAAI,OAAO,EAClDc,uBAAsB,KACrBW,EAAGkC,SAAQgX,IACV3U,OAAOwB,QAAQlH,GAAKqD,SAAQ8D,IAC3BkT,EAAG3T,MAAMS,EAAG,IAAMA,EAAG,EAAE,GACtB,GACD,GAEH,CASDhI,mBAAmBgC,EAAI6I,EAAK7G,GAG3B,OAFIyJ,OAAO2C,SAASpO,KAAKA,EAAKkX,MAAM2E,SAAS7b,IACzCkX,MAAMpF,cAAc9R,KAAKA,EAAK,CAACA,OAC7B8E,MAAMoI,QAAQlN,IAAOA,EAAGzB,OAAS,QAClCsK,GAA4B,GAArBA,EAAI/C,OAAOvH,UACvBsK,EAAMA,EAAIhD,MAAM,KAAKV,QAAOhD,GAAKA,GAAKA,EAAE2D,OAAOvH,OAAS,IACpDkN,OAAOiL,OAAO1U,GAAa6G,EAAI3G,SAAQC,IAC1CnC,EAAGkC,SAAQgX,GAAMA,EAAGW,UAAUjH,OAAOzQ,IAAG,KAEzCnC,EAAGkC,SAAQgX,IACVlX,EAAMkX,EAAGW,UAAUC,IAAI7I,MAAMiI,EAAGW,UAAWhR,GAAOqQ,EAAGW,UAAU9Z,OAAOkR,MAAMiI,EAAGW,UAAWhR,EAAI,KAExF,IACP,CAOD7K,cAAcgC,EAAIgC,GACjB,OAAOkV,MAAMmF,YAAYrc,EAAI,SAAUyL,OAAOiL,OAAO1U,GAAOA,GAAOA,EACnE,CAQDhE,gBAAgBgC,EAAI6I,EAAM,IACzB,OAAO7I,GAAI6Z,WAAWyC,SAASzT,EAC/B,CAOD7K,mBAAmB8S,EAAO6K,EAAM,2BAC/B,MAAMY,EAAOrF,MAAMsF,OAAO1L,GAC1BzR,uBAAsB,KACrBkd,EAAKvS,iBAAiB2R,GAAKzZ,SAASlC,GAAOA,EAAG6B,MAAQ,IAAG,GAE1D,CAOD7D,gBAAgBgC,GACf,OAAQA,EAAG0D,MACV,IAAK,iBACL,IAAK,SACJ,OAAO1D,EAAG6B,MAAQ7B,EAAGyc,cAAgBzc,EAAG6B,MACzC,IAAK,kBACJ,OAAOiD,MAAMC,KAAK/E,EAAG0c,iBAAiBzX,KAAIqD,GAAKA,EAAEzG,QAClD,IAAK,WACJ,OAAI7B,EAAG4D,aAAa,SACZ5D,EAAG2c,QAAU3c,EAAG6B,MAAQ,KAEzB7B,EAAG2c,QACX,QACC,OAAO3c,EAAG6B,MAEZ,CAOD7D,eAAegC,GACd,IAAKkX,MAAMpF,cAAc9R,GAAK,OAC9B,IAAI6B,EAAQqV,MAAM0F,SAAS5c,GAC3B,GAAI,SAAWA,EAAG0D,KAAM,CACvB,MAAMuB,EAAMiO,EAAS2J,WAAW7c,EAAI,kBAChCiF,IAAKpD,EAAQ4J,OAAOqR,cAAc7X,EAAIpD,MAAOA,GACjD,CACD,OAAOA,CACP,CAQD7D,iBAAiBgC,EAAI6I,GACpB,IAAKqO,MAAMpF,cAAc9R,GAAK,OAC9B,MAAM2F,EAAOb,MAAMoI,QAAQrE,GAAOA,EAAI,IAAM,GAAKA,EAEjD,GACM,aADE7I,EAAG0D,KAEL1D,EAAG4D,aAAa,SACnB5D,EAAG2c,QAAUhX,IAAS3F,EAAG6B,MAEzB7B,EAAG2c,QAAkB,GAARhX,OAId3F,EAAG6B,MAAQ8D,CAEb,CASD3H,gBAAgB8S,EAAO6K,EAAM,kCAAmCxB,GAAU,GACzE,MAAMoC,EAAOrF,MAAMsF,OAAO1L,GACpB/C,EAAS,CAAA,EAcf,OAbAmJ,MAAM2E,SAASU,EAAMZ,GACnBxW,QAAOnF,GAAMA,EAAGpB,OAChBuG,QAAOnF,GAA4B,SAAtBA,EAAGG,QAAQ4c,SACxB5X,QAAOnF,KAAMma,GAAiBna,EAAGgd,kBACjC9a,SAAQlC,KACQ,UAAZA,EAAG0D,MAGI1D,EAAG2c,UADblI,OAAOwI,aAAalP,EAAQ/N,EAAGpB,KAAMsY,MAAMgG,QAAQld,GAInD,IAEI+N,CACP,CASD/P,kBAAkB8S,EAAOjS,EAAK8c,EAAM,mCAEnC,GADA9c,EAAM4M,OAAO0G,OAAOtT,GACe,IAA/B0F,OAAOwB,QAAQlH,GAAKN,OAAc,OACtC,MAAMge,EAAOrF,MAAMsF,OAAO1L,GACpBkK,EAAO9D,MAAM2E,SAASU,EAAMZ,GAClC7W,MAAMC,KAAKiW,GAAM9Y,SAAQlC,GAAMkX,MAAMiG,mBAAmBnd,EAAInB,IAC5D,CAODb,0BAA0BgC,EAAInB,GAC7B,MAAMue,EAAM3I,OAAO4I,gBAAgBxe,EAAKmB,EAAGpB,MAC3C,GAAI6M,OAAOiL,OAAO0G,GAAM,OACxB,MAAMvU,EAAM4L,OAAO6I,eAAeze,EAAKmB,EAAGpB,MAC1B,UAAZoB,EAAG0D,KAENwT,MAAMqG,UAAUvd,EAAI6I,GACV7I,EAAG6B,QAAUgH,IAAK7I,EAAG2c,SAAU,EAC1C,CAQD3e,cAAcqS,EAAKmN,GAAY,GAC9B,GAAI1Y,MAAMoI,QAAQmD,GAAM,OAAOA,EAAIpL,KAAIqD,GAAK4O,MAAM/E,OAAO7J,EAAGkV,KAC5D,MAAM3e,EAAM,CAAA,EACZ,IAAKqY,MAAMpF,cAAczB,GAAM,OAAOxR,EAMtC,GAJAA,EAAI,YAAcwR,EAAIwI,QAAQ9W,cAE9B+C,MAAMC,KAAKsL,EAAIiC,YAAYpQ,SAAQC,GAAKtD,EAAIsD,EAAEvD,MAAQuD,EAAEN,QAEpD2b,EAAW,CACd,MAAMhF,EAAW1T,MAAMC,KAAKsL,EAAImI,UAC5BA,EAASja,OAAS,IACrBM,EAAI4e,MAAQ,GACZjF,EAAStW,SAAQlC,GAAMnB,EAAI4e,MAAM1G,KAAKG,MAAM/E,OAAOnS,MAEpD,CAED,OAAOnB,CACP,CAQDb,gBAAgBa,EAAK6e,EAAM,UAAWC,GAAW,GAChD,OAAOA,EAAWzG,MAAM0G,iBAAiB/e,EAAK6e,GAAOxG,MAAM2G,cAAchf,EAAK6e,EAC9E,CAOD1f,qBAAqBa,EAAK6e,EAAM,WAC/B,IAAK7e,EAAK,OAAO,KAGjB,GADoB4M,OAAOS,SAASrN,IAAQ4M,OAAO2C,SAASvP,GAC3C,OAAOqY,MAAM2G,cAAc,CAACC,MAAOjf,GAAM6e,GAG1D,GADgB5Y,MAAMoI,QAAQrO,GACjB,OAAOA,EAAIoG,KAAIqD,GAAK4O,MAAM2G,cAAcvV,EAAGoV,KAExD,MAAM9e,EAAOC,EAAI,aAAe6e,EAC1B1d,EAAKrB,SAAS0L,cAAczL,GAYlC,OAVA2F,OAAO0J,KAAKpP,GAAKsG,QAAOhD,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CD,SAAQC,GAAKnC,EAAG8I,aAAa3G,EAAGtD,EAAIsD,MAElC2C,MAAMoI,QAAQrO,EAAI4e,QACrB5e,EAAI4e,MAAMvb,SAAQoG,IACjB,MAAMyV,EAAM7G,MAAM2G,cAAcvV,EAAGoV,GACnC1d,EAAGM,YAAYyd,EAAI,IAId/d,CACP,CAODhC,wBAAwBa,EAAK6e,EAAM,WAClC,IAAK7e,EAAK,OAAO,KAEjB,GAAIiG,MAAMoI,QAAQrO,GAAM,OAAOA,EAAIoG,KAAIqD,GAAK4O,MAAM0G,iBAAiBtV,KAAIE,KAAK,IAE5E,MAAM5J,EAAOC,EAAI,aAAe6e,EAC1BpT,EAAM,GAiBZ,OAhBAA,EAAIyM,KAAK,IAAInY,MAEb2F,OAAO0J,KAAKpP,GAAKsG,QAAOhD,GAAU,SAALA,GAAwB,KAARA,EAAE,KAC7CD,SAAQC,GAAKmI,EAAIyM,KAAK,IAAI5U,MAAMtD,EAAIsD,UAEtCmI,EAAIyM,KAAK,KAELjS,MAAMoI,QAAQrO,EAAI4e,QACrB5e,EAAI4e,MAAMvb,SAAQoG,IACjB,MAAMyV,EAAM7G,MAAM0G,iBAAiBtV,EAAGoV,GACtCpT,EAAIyM,KAAKgH,EAAI,IAIfzT,EAAIyM,KAAK,KAAKnY,MAEP0L,EAAI9B,KAAK,GAChB,CAMDxK,yBAAyB8S,GACxBrP,SAAS7B,KAAKmK,MAAM,GAAGlE,MAAM,KAC3BV,QAAOhD,GAAKA,EAAE5D,OAAS,IACvB2D,SAAQC,IACR,MAAM6b,EAAI7b,EAAE0D,MAAM,KAClBqR,MAAM+G,SAAS,cAAcD,EAAE,MAAOA,EAAE,GAAIlN,EAAM,GAEpD,CAOD9S,cAAc8S,GACb,OAAOA,EAAQA,EAAMd,MAAQc,EAAQnS,QACrC,CAODX,mBAAmBqS,EAAKsL,EAAM,gCAAiCrH,GAAM,EAAM4J,EAAQ,IAClF,IAAIlD,EAAO9D,MAAM2E,SAASxL,EAAKsL,IAC1BrH,GAAO4J,IAAOlD,EAAOA,EAAK7V,QAAOnF,GAAMyL,OAAOwG,OAAOjS,EAAGG,QAAQ+d,OACrElD,EAAK9Y,SAAQlC,GAAMA,EAAG6J,gBAAgB,aACtC,CAOD7L,oBAAoBqS,EAAKsL,EAAM,gCAAiCrH,GAAM,EAAM4J,EAAQ,IACnFhH,MAAM2E,SAASxL,EAAKsL,GAClBxW,QAAOnF,KAAMsU,IAActU,EAAGqJ,WAC9BnH,SAAQlC,IACRA,EAAG8I,aAAa,YAAY,GACxBoV,IAAOle,EAAGG,QAAQ+d,IAAS,EAAI,GAErC,CAQDlgB,gBAAgB2d,EAAK9S,EAAKwH,GACd6G,MAAM2E,SAASxL,EAAKsL,GAC5BzZ,SAAQgX,GAAMhC,MAAMqG,UAAUrE,EAAIrQ,IACrC,CAOD7K,sBAAsBgC,GACrB,MAAM0b,EAAO/c,SAASwf,iBAAiBne,GAAMrB,SAAUyf,WAAWC,UAAW,MAAM,GAC7EnX,EAAI,GACV,IAAIyE,EACJ,KAAOA,EAAI+P,EAAK4C,YAAYpX,EAAE6P,KAAKpL,GACnC,OAAOzE,CACP,CAMDlJ,iBAAiBue,GAChB,MAAMgC,EAAKrH,MAAMsH,eAAejC,GAAQ5d,UAAUwG,QAAOsZ,GAAmC,IAA9BA,EAAEC,UAAU5Y,OAAOvH,SACjFggB,EAAGpZ,QAAOnF,GAAMA,EAAG2e,uBAAuBpF,OAAMrX,SAAQlC,GAAMA,EAAGD,WACjEwe,EAAGrc,SAAQuc,GAAKA,EAAEG,UAAYH,EAAEC,UAAU9Y,WAAW,aAAc,MAAMA,WAAW,sBAAuB,KAC3G,CAWD5H,gBAAgBqS,EAAKwI,EAASgG,EAAWC,GAAU,GAClD,GAAIzO,EAAIwI,UAAYA,EAAS,CAC5B,GAAIiG,EAAS,OAAO,EACpB,MAAM,IAAIzT,MAAM,mBAAmBgF,EAAIwI,eAAexI,EAAIlS,gCAAgC0a,IAC1F,CAGD,GADW3B,MAAM6H,UAAUja,MAAMC,KAAKsL,EAAIqJ,YAAamF,GAC/C,OAAO,EACf,GAAIC,EAAS,OAAO,EACpB,MAAMnU,EAAMuM,MAAM8H,kBAAkB3O,EAAKwO,GACzC,MAAM,IAAIxT,MAAMV,EAChB,CAQD3M,iBAAiBgC,EAAI6e,GACpB,OAAI/Z,MAAMoI,QAAQlN,GAAuE,IAA3DA,EAAGmF,QAAOnF,GAAMkX,MAAM6H,UAAU/e,EAAI6e,KAAYtgB,SACrEyB,aAAcuZ,MAAQvZ,aAAcwZ,SAAcqF,EAAUxc,SAASrC,EAAG6Y,SACjF,CAED7a,yBAAyBqS,EAAKwO,GAC7B,MAAM7D,EAAO,IAAI6D,EAAUrW,KAAK,WAChC,MAAO,GAAG6H,EAAIwI,eAAexI,EAAIlS,qCAAqC6c,IACtE,CAUDhd,uBAAuBqS,EAAK3Q,GAC3B,IAAK2Q,GAAKgH,sBAAsBgE,WAAY,OAAO,EACnD,IAAIrZ,GAAM,EACV,IACC,MAAMyH,QAAYC,MAAMhK,GACxB,IAAK+J,EAAIE,GAAI,OACb,MAAMpC,QAAYkC,EAAIG,OAChBrD,EAAQ,IAAI7B,cAClB6B,EAAMI,YAAYY,GAClB8I,EAAIgH,WAAWtQ,mBAAqB,CAACR,EACrC,CAAC,MAAO9C,GACRiH,MAAM0N,MAAM,KAAM3U,GAClBzB,GAAM,CACN,CACD,OAAOA,CACP,QAGAuC,OAAOC,KAAK0S,OACZ/S,WAAW+S,MAAQA,KACnB,EC78Ba,MAAM+H,SAEpBjhB,UAAkB,EAClBA,SAAgB,IAAIsI,IAEpBtI,UAAiB,EACjBA,SAAqB,EAEjBkhB,iBACH,OAAOD,UAASE,CAChB,CAEGD,eAAWrW,GACdoW,UAASE,EAAW1T,OAAOwG,OAAOpJ,GAAK,EACvC,CAKD7K,iBACCihB,SAASG,OAAOjb,WAAY,KAAM,cAAe8a,UAASI,GAC1DJ,SAASG,OAAOjb,WAAWxF,SAAU,KAAM,UAAWsgB,UAASK,EAC/D,CAEDthB,SAAkBiB,IACbggB,UAASE,GAAalgB,EAAMsgB,UAAUN,SAASO,QAAQvgB,EAC3D,CAEDjB,SAAkBiB,GACjB,MAAMwgB,EAAOxgB,EAAMwgB,KACnB,MAAY,OAARA,MAEOxgB,EAAMygB,UAAWzgB,EAAMsgB,UAAoB,QAARE,SAAvC,EAGP,CAWDzhB,0BAA0ByE,EAAQ7D,EAAO,SAAUgJ,EAAUkH,EAAU,IAAK0Q,GAAU,GACrF,IAAKP,UAASU,EACb,UACOV,SAASW,KAAKzb,WAAW8F,OAAQ,OAAQ6E,EAAS0Q,GACxDP,UAASU,GAAU,CACnB,CAAC,MAAMlc,GAEP,OAGI0M,EAAW0P,aAAajY,GAC9BqX,SAASa,cAAcrd,EAAQ7D,EAC/B,CAYDZ,YAAYqS,EAAKzR,EAAO,GAAIkQ,EAAU,EAAG0Q,GAAU,GAClD,GAAI/T,OAAO6C,cAAc1P,GAAO,MAAM,IAAIyM,MAAM,oBAChD,IAAKI,OAAOS,SAAS4C,GAAU,MAAM,IAAIzD,MAAM,0BAC/C,OAAIyD,EAAU,EAAUmQ,SAASc,KAAK1P,EAAK,KAAMzR,EAAM,KAAMkQ,GACtD,IAAI5O,SAAQ6O,IAClBkQ,SAASc,KAAK1P,EAAK,KAAMzR,GAAM6E,IAC1B+b,GAASP,SAASO,QAAQ/b,GAC9BsL,EAAQtL,EAAE,GACRqL,EAAQ,GAEZ,CAUD9Q,gCAAgC4J,EAAUoY,GAAU,GAEnD,GAAIA,EAAS,CACZ,GAAwB,mBAAbpY,EAAyB,OACpC,GAAIqX,UAASgB,EAAc,EAAG,OAAO9P,EAAW0P,aAAajY,GAC7DqX,UAASgB,GACT,CAED,OAAO,IAAI/f,SAAQ,CAACyR,EAAQ3C,KAC3B3P,uBAAsBsE,UACrB,IACC,MAAM2E,QAAU6H,EAAW0P,aAAajY,GACxC+J,EAAOrJ,EACP,CAAC,MAAO7E,GACRuL,EAAOvL,EACZ,CAAc,QACLuc,GAAWf,UAASgB,EAAc,GAAGhB,UAASgB,GAClD,IACA,GAEH,CAWDjiB,cAAcqS,EAAKsL,EAAK1c,EAAO2I,EAAU6K,GAAM,GAC9C,OAAKkJ,GAAOtL,EAAYA,EAAInG,iBAAiBjL,EAAO2I,EAAU6K,GACvDyE,MAAM2E,SAASxL,EAAKsL,GAAK1W,KAAIjF,GAAMA,EAAGkK,iBAAiBjL,EAAO2I,EAAU6K,IAC/E,CAUDzU,gBAAgBqS,EAAKsL,EAAK1c,EAAO2I,GAChC,OAAK+T,GAAOtL,EAAYA,EAAI6P,oBAAoBjhB,EAAO2I,GAChDsP,MAAM2E,SAASxL,EAAKsL,GAAK1W,KAAIjF,GAAMA,EAAGkgB,oBAAoBjhB,EAAO2I,IACxE,CAED5J,UAAYihB,SAASG,OACrBphB,WAAaihB,SAASkB,SAWtBniB,YAAYqS,EAAKsL,EAAK1c,EAAO2I,EAAUkH,EAAU,GAChD,MAAMF,EAASqQ,UAASmB,EAAUtR,GAClC,OAAIF,GAAUA,EAAOyR,SACb,IAAIngB,SAAQ,CAAC6O,EAASC,KAC5BiQ,SAASG,OAAO/O,EAAKsL,EAAK1c,EAAO2I,GAAYmH,EAAS,CAAEgR,MAAM,EAAMnR,OAASA,IAC7EA,EAAO1E,iBAAiB,QAAS8E,EAAO,IAGnCiQ,SAASG,OAAO/O,EAAKsL,EAAK1c,EAAO2I,EAAU,CAAEmY,MAAM,EAAMnR,OAASA,GACzE,CAOD5Q,eAAeyF,EAAG6c,GAAO,GACpBnQ,EAAWoQ,YAAY9c,EAAG,mBAAmBA,EAAE+c,iBAC/CrQ,EAAWoQ,YAAY9c,EAAG,oBAAoBA,EAAEgd,kBAChDH,GAAQnQ,EAAWoQ,YAAY9c,EAAG,6BAA6BA,EAAEid,0BACrE,CAcD1iB,YAAYU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAC9F,MACMC,EAAQ,IAAIC,YAAYN,EADlB,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IAE7E,OAAON,GAAQU,cAAcH,EAC7B,CAQDjB,eAAe0F,EAAM+O,GACpB,IAAIkO,EAAO,KACX,OAAOjd,GACN,IAAK,OACL,IAAK,MACL,IAAK,QACJid,EAAM,IAAIC,eAAeld,EAAM+O,GAC/B,MACD,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACJkO,EAAM,IAAIE,WAAWnd,EAAM+O,GAC3B,MACD,IAAK,QACL,IAAK,cACJkO,EAAM,IAAIG,WAAWpd,EAAM+O,GAC3B,MACD,IAAK,UACL,IAAK,QACL,IAAK,WACJkO,EAAM,IAAII,cAAcrd,EAAM+O,GAC9B,MACD,IAAK,WACL,IAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,UACJkO,EAAM,IAAIK,WAAWtd,EAAM+O,GAC3B,MACD,IAAK,SACJkO,EAAM,IAAIM,YAAYvd,EAAM+O,GAC5B,MACD,IAAK,aACL,IAAK,WACL,IAAK,YACL,IAAK,cACJkO,EAAM,IAAIO,WAAWxd,EAAM+O,GAC3B,MACD,IAAK,QACJkO,EAAM,IAAIQ,WAAWzd,EAAM+O,GAC3B,MACD,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,gBACL,IAAK,aACL,IAAK,eACL,IAAK,mBACL,IAAK,oBACL,IAAK,qBACJkO,EAAM,IAAIS,aAAa1d,EAAM+O,GAC7B,MACD,QACCkO,EAAM,IAAIzhB,YAAYwE,EAAM+O,GAE9B,OAAOkO,CACP,CAOD3iB,6BAA6ByF,GAC5B,OAAOA,aAAaud,YAAcvd,aAAa2d,YAC/C,CAaDpjB,qBAAqBU,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACvG,OAAOK,uBAAsB,KAC5B4f,SAASoC,KAAK3iB,EAAQE,EAAMC,EAAKC,EAASC,EAAUC,EAAW,GAEhE,CAcDhB,mBAAmB8Q,EAAU,EAAGpQ,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAClH,OAAOkQ,YAAW,IAAM+P,SAASoC,KAAK3iB,EAAQE,EAAMC,EAAKC,EAASC,EAAUC,IAAa8P,EACzF,CAYD9Q,cAAcqS,EAAKrQ,EAAIpB,EAAO,GAAIsM,EAAI6U,GAAO,EAAOuB,GAAU,GAC7D,IAAKthB,EAAI,OAAO,EAEhB,KAAMiK,kBAAkBsX,QAAUvhB,EAAGwhB,aAAc,OAAO,EAC1D,IAAKrR,EAAWC,WAAWlF,GAAK,OAAO,EACvC,IAAKiF,EAAWoQ,YAAYvgB,EAAI,oBAAqB,OAAO,EAC5D,MAAMR,EAAKC,KACLZ,EAAMW,GAAGiiB,EAAUpR,EAAKrQ,EAAIpB,EAAMsM,GAClCwW,EAAQliB,GAAGmiB,EAAetR,GAehC,OAdY7Q,GAAGoiB,EAAUF,EAAO7iB,EAAI2W,KAChC/O,IAAI5H,EAAIgjB,MAAOhjB,GACnBA,EAAIyiB,QAAUA,EACVvB,IACHlhB,EAAIkhB,KAAQtc,IACX,IACC5E,EAAIqM,GAAGzH,EACZ,CAAc,QACTjE,EAAGO,OAAOlB,EAAIwR,IAAKxR,EAAImB,GAAInB,EAAID,KAAMC,EAAIkhB,KACzC,GAEFxb,OAAOud,eAAejjB,EAAIkhB,KAAM,OAAQ,CAAEle,MAAOqJ,EAAG6W,KAAMC,UAAU,KAErEhiB,EAAGkK,iBAAiBtL,EAAMmhB,EAAOlhB,EAAIkhB,KAAOlhB,EAAIqM,GAAI,CAAE6U,KAAMA,EAAMuB,QAASA,KACpE,CACP,CASDtjB,cAAcqS,EAAKrQ,EAAIpB,EAAO,GAAIsM,GACjC,MAAM1L,EAAKC,KACLZ,EAAMW,GAAGiiB,EAAUpR,EAAKrQ,EAAIpB,EAAMsM,GAClCwW,EAAQliB,GAAGmiB,EAAetR,GAC1BpL,EAAMzF,GAAGoiB,EAAUF,EAAO7iB,EAAI2W,KAC9ByM,EAAMhd,EAAI2B,IAAI/H,EAAIgjB,OACxB,GAAII,EACHhd,EAAI4B,OAAOob,EAAIJ,OACfriB,GAAG0iB,EAAgBD,QACb,GAAIpjB,EAAIgjB,QAAUhjB,EAAI2W,IAC5B,IAAK,IAAI2M,KAAKld,EAAIqC,SACjBrC,EAAI4B,OAAOsb,EAAEN,OACbriB,GAAG0iB,EAAgBC,GAGJ,IAAbld,EAAImd,MAAYV,EAAM7a,OAAOhI,EAAI2W,KAClB,IAAfkM,EAAMU,MAAY5iB,GAAG6iB,EAAOxb,OAAOwJ,EACvC,CAMDrS,yBAAyBqS,GACxB,MAAM7Q,EAAKC,KACLwF,EAAMzF,GAAG8iB,EAAkBjS,GACjC,IAAKpL,EAAK,OAEV,MAAMiU,EAAKjU,EAAIqC,SACf,IAAK,IAAI6a,KAAKjJ,EAAI,CACjB,IAAK,IAAI5Q,KAAK6Z,EAAE7a,SACf9H,GAAG0iB,EAAgB5Z,GAEpB6Z,EAAEI,OACF,CACDtd,EAAIsd,OACJ,CASDvkB,SAAiBqS,EAAKrQ,EAAIpB,EAAO,GAAIsM,EAAK,IACzC,IAAKlL,EAAI,OAAO,EAChB,MACMwiB,EADK/iB,MACKgjB,EAAcziB,GACxB0iB,EAFKjjB,MAEKkjB,EAAezX,GAG/B,MAAO,CAAEmF,IAAKA,EAAKnF,GAAIA,EAAIlL,GAAIA,EAAIpB,KAAMA,EAAM4W,IAFnClK,KAAKzL,SAAS,GAAG2iB,IAAO5jB,KAEqBijB,MAD3CvW,KAAKzL,SAAS,GAAG2iB,IAAO5jB,IAAO8jB,GAAQ,MAErD,CAQD1kB,SAAiB0jB,EAAOlM,GAEvB,IAAIvQ,EAAMyc,EAAM9a,IAAI4O,GAKpB,OAJKvQ,IACJA,EAAM,IAAIqB,IACVob,EAAMjb,IAAI+O,EAAKvQ,IAETA,CACP,CAEDjH,SAAsBkN,GACrB,OAAKiF,EAAWC,WAAWlF,IACtBA,EAAG6W,MAAMxd,OAAOud,eAAe5W,EAAI,OAAQ,CAAErJ,MAAOyJ,KAAKE,OAAQwW,UAAU,IACzE9W,EAAG6W,MAF6B,IAGvC,CAED/jB,SAAqBgC,GACpB,MAAM4iB,EAAQ5iB,aAAcuhB,OAC5B,IAAIiB,EAAOI,EAAQ5iB,EAAG6iB,OAAShR,OAAOjL,IAAI5G,EAAI,eAS9C,OARKwiB,IACJA,EAAOlX,KAAKnN,GACRykB,EACH5iB,EAAG6iB,OAASL,EAEZ3Q,OAAOpL,IAAIzG,EAAI,cAAewiB,IAGzBA,CACP,CAODxkB,SAAsBqS,GAErB,OADW5Q,MACDmiB,EADCniB,MACY4iB,EAAQhS,EAC/B,CAEDrS,SAAyBqS,GACxB,MACMpL,EADKxF,MACI4iB,EAAOzb,IAAIyJ,GAC1B,GAAKpL,EAEL,OAJWxF,MAGR4iB,EAAOxb,OAAOwJ,GACVpL,CACP,CAEDjH,SAAuBsK,GACtBA,EAAEtI,GAAGkgB,oBAAoB5X,EAAE1J,KAAM0J,EAAEyX,KAAOzX,EAAEyX,KAAOzX,EAAE4C,GAAI,CAAEoW,QAAShZ,EAAEgZ,UACtEhZ,EAAEtI,GAAK,KACPsI,EAAE4C,GAAK,KACP5C,EAAEyX,KAAO,IACT,CAMD/hB,SAAiB8Q,EAAU,GAC1B,OAAIrD,OAAOS,SAAS4C,IAAYA,EAAU,IACzCA,EAAUD,YAAYC,QAAQA,IACtBuR,UAAW,EACZvR,GAEJA,aAAmBD,YAAoBC,OAA3C,CAEA,CAOD9Q,qBAAqB8S,EAAOpN,GAC3BoN,EAAMiD,GAAG,UAAUpQ,MAAOF,IACzB,MAAMjE,EAAKsR,EACLnL,EAAOlC,EAAEtE,OACT2jB,EAASnd,EAAKmd,QAAUnd,EAAKA,MAAMmd,aACnC7D,SAAS8D,SAASvjB,EAAIsjB,EAAQpf,EAAMD,EAAE,GAE7C,CAUDzF,sBAAsB8S,EAAOgS,EAAQE,EAAQrC,GAE5C,MAAM/Y,EAAWqX,SAASgE,WAAWnS,EAAOgS,EAAQE,GACpD,IAAKpb,EAAU,OAEfqX,SAASO,QAAQmB,GACjB,IAAI3e,GAAM,EACV,IAEEA,EADGmO,EAAWkB,gBAAgBzJ,SAClBA,EAAS+Y,GAEf/Y,EAAS+Y,EAEhB,CAAC,MAAOld,GAER,GADAzB,EAAMyB,GACD0M,EAAWC,WAAWU,EAAMoS,SAAU,MAAMzf,EACjDqN,EAAMoS,QAAQzf,EACd,CACD,OAAOzB,CACP,CASDhE,kBAAkB8S,EAAOgS,EAAS,GAAIE,EAAS,IAC9C,IAAIhhB,GAAM,EACV,IAAK8gB,EAAQ,OAAO9gB,EACpB,MAAMxC,EAAKsR,EACXgS,EAASrX,OAAO+H,eAAe/H,OAAOe,WAAWsW,IAEjD,MAAMlkB,EAAO,KADbokB,EAASvX,OAAO+H,eAAe/H,OAAOe,WAAWwW,MACtBF,IACvB3e,WAAWgf,eAAezY,MAAM+C,KAAKqD,EAAO,YAAYlS,KAC5D,MAAMsM,EAAK1L,EAAGZ,GAGd,OAFAoD,EAAMmO,EAAWC,WAAWlF,GAC5BlJ,EAAMA,IAAQmO,EAAWiB,iBAAiBlG,GACnClJ,EAAMxC,EAAGZ,GAAMqJ,KAAKzI,GAAM,IACjC,QAGA+E,OAAOiD,OAAOyX,UACd9a,WAAW8a,SAAWA,QACtB,QCniBa,MAAMmE,0BAA0BC,gBAE3CpU,GAAO,EAEPtK,YAAYmK,EAAU,GAElB,GADAlK,SACK6G,OAAOS,SAAS4C,GAAU,MAAM,IAAIzD,MAAM,oCAC/C,MAAM7L,EAAKC,KACPqP,IAAStP,GAAGyP,EAAOC,WAAW1P,EAAG8jB,MAAMrb,KAAKzI,GAAKsP,IACrDtP,EAAGoP,OAAO1E,iBAAiB,SAAS,IAAMhC,cAAc1I,GAAGyP,IAC9D,CAED2Q,KAAK9Q,EAAU,GACX,OAAOmQ,SAASW,KAAKpgB,GAAGoP,OAAQ,QAASE,EAC5C,GCfU,MAAMyU,UAEjB3U,GACAhH,GACA4b,GACAzU,GACAC,GACAyU,GAOA9e,YAAYiD,EAAUgH,GAClB,MAAMpP,EAAKC,KACXD,GAAGoI,EAAYA,EACfpI,GAAGoP,EAAUA,aAAkBC,YAAcD,EAAS,KACtDpP,GAAGoP,EAAUnD,OAAOS,SAAS0C,GAAUC,YAAYC,QAAQF,GAAUpP,GAAGoP,EACxEpP,GAAGgkB,EAAa,CACZF,MAAQ9jB,GAAGkkB,EAASzb,KAAKzI,GAEhC,CAEDmkB,QACI,MAAMnkB,EAAKC,KACX,OAAID,GAAGikB,IACPjkB,GAAGoP,GAAS1E,iBAAiB,QAAS1K,GAAGgkB,EAAWF,OACpD9jB,GAAGikB,EAAW,IAAIvjB,QAAQV,GAAGiZ,EAAMxQ,KAAKzI,KAFhBA,GAAGikB,CAI9B,CAEGG,cACA,OAAiC,IAA1BnkB,MAAKmP,GAASgV,OACxB,CAEDnL,GAAM1J,EAASC,GACX,MAAMxP,EAAKC,KACXD,GAAGuP,EAAWA,EACdvP,GAAGwP,EAAUA,EACb,IACIxP,GAAGoI,EAAUpI,GAAGqkB,EAAW5b,KAAKzI,GAAKA,GAAGskB,EAAU7b,KAAKzI,GAC1D,CAAC,MAAMiE,GACJjE,GAAG+iB,IACHvT,EAAOvL,EACV,CACJ,CAEDigB,KACejkB,MACR8iB,IADQ9iB,MAERuP,EAAQ,IAAI3D,MAAM,oBACxB,CAEDwY,GAAWvb,GACP,MAAM9I,EAAKC,KAEX,OADAD,GAAG+iB,IACI/iB,EAAGokB,QAAU,KAAOpkB,GAAGuP,EAASzG,EAC1C,CAEDwb,GAAUrgB,GACN,MAAMjE,EAAKC,KAEX,OADAD,GAAG+iB,IACI/iB,EAAGokB,QAAU,KAAOpkB,GAAGwP,EAAQvL,EACzC,CAED8e,KACe9iB,MACRmP,GAASsR,oBAAoB,QADrBzgB,MACiC+jB,EAAWF,MAC1D,QAGGnf,WAAWof,UAAYA,SAC1B,ECxEU,MAAMQ,gBAAgBC,YAEjCC,GAAa,IAAIvP,IAEjBsG,GAAMtX,EAAO,GAAIwgB,GACb,MACMlJ,EAAOlW,MAAMC,KADRtF,MACgBwkB,GAC3B,OAFWxkB,MAED2Q,EAAY8T,GAClBlJ,EAAK7V,QAAOmD,GAAKA,EAAE5E,OAASA,GAAQ4E,EAAE4b,WAAaA,IAEnDlJ,EAAK7V,QAAOmD,GAAKA,EAAE5E,OAASA,GACnC,CAED0M,GAAYlF,GACR,MAAqB,mBAAPA,CACjB,CAUD6I,GAAGrQ,EAAO,GAAIwgB,EAAUpV,EAAU,EAAGqV,GAAY,GAC7C,IAAKzgB,EAAM,OAAOsL,OAAO,oBACzB,IAAIoV,EAAa,KAEbA,EADAD,aAAqBd,gBACRc,EAEAA,EAAY,IAAIf,kBAAkBtU,GAAW,KAE9D,MAAMF,EAASwV,GAAyB,GAAXtV,EAAesV,GAAYxV,OAASC,YAAYC,QAAQA,GAErF,OADArP,KAAKyK,iBAAiBxG,EAAMwgB,EAAW,CAAEtV,OAAOA,IACzCwV,GAAcxV,CACxB,CAUDmR,KAAKrc,EAAMwgB,EAAUpV,EAAU,EAAGqV,GAAY,GAC1C,IAAKzgB,EAAM,OAAOsL,OAAO,oBACzB,MAAMxP,EAAKC,KACLgZ,KAAQhV,IACVygB,EAASzgB,GACTjE,GAAGykB,EAAWpd,OAAO4R,KAAK,EAY9B,OAVAA,KAAK/U,KAAOA,EACZ+U,KAAKyL,SAAWA,EAChBzL,KAAK3J,QAAUA,EACXqV,aAAqBd,gBACrB5K,KAAK2L,WAAaD,EAElB1L,KAAK2L,WAAaD,EAAY,IAAIf,kBAAkBtU,GAAW,KAEnE2J,KAAK7J,OAAS6J,KAAK2L,YAAyB,GAAXtV,EAAe2J,KAAK2L,YAAYxV,OAASC,YAAYC,QAAQA,GAC9FtP,EAAG0K,iBAAiBxG,EAAM+U,KAAM,CAAEsH,MAAM,EAAMnR,OAAQ6J,KAAK7J,SACpD6J,KAAK2L,YAAc3L,KAAK7J,MAClC,CAQDyV,IAAI3gB,EAAO,GAAIwgB,GACXzkB,KAAKygB,oBAAoBxc,EAAMwgB,EAClC,CASDI,KAAK5gB,EAAO,GAAIiC,EAAM4e,EAAU,GAC5B,MAAM/kB,EAAKC,KAEX,OADA8kB,EAAU9Y,OAAOyG,MAAMqS,EAAS,KACjB,EAAU/kB,GAAG6hB,EAAM3d,EAAMiC,GACjCuJ,YAAW,IAAM1P,GAAG6hB,EAAM3d,EAAMiC,IAAO4e,EACjD,CAEDlD,GAAM3d,EAAO,GAAIiC,GACb,MAAMgb,EAAM,IAAIzhB,YAAYwE,EAAM,CAAEvE,OAAQwG,IAC5C,OAAOlG,KAAKL,cAAcuhB,EAC7B,CAQFf,KAAKlc,EAAO,GAAIkL,GACZ,MAAMpP,EAAKC,KAIV,OAAO,IAAI8jB,WAHK,CAACxU,EAASC,KACvBxP,EAAGugB,KAAKrc,EAAMqL,EAAQ,GAEMH,GAAQ+U,OAC1C,CAEDvE,OAAO1b,EAAMwgB,GAAYzkB,KAAKsU,GAAGrQ,EAAMwgB,EAAY,CACnD/D,SAASzc,EAAMwgB,GAAYzkB,KAAK4kB,IAAI3gB,EAAMwgB,EAAY,CAKtDM,SAEI1f,MAAMC,KADKtF,MACGwkB,GAAY/hB,SAAQoG,IAC9B1D,MAAMsb,oBAAoB5X,EAAE5E,KAAM4E,EAAE4b,SAAS,IAFtCzkB,MAIRwkB,EAAW1B,OACjB,CAEDrY,iBAAiBxG,EAAMwgB,EAAUzR,GAE7B,QADWhT,MACH2Q,EAAY8T,KADTzkB,MAERwkB,EAAWnK,IAAI,CAAEpW,KAAMA,EAAMwgB,SAAUA,IACnCtf,MAAMsF,iBAAiBxG,EAAMwgB,EAAUzR,GACjD,CAEDyN,oBAAoBxc,EAAMwgB,GACtB,MAAM1kB,EAAKC,KACLub,EAAOxb,GAAGwb,EAAMtX,EAAMwgB,GAC5BlJ,EAAK9Y,SAAQoG,GAAK1D,MAAMsb,oBAAoB5X,EAAE5E,KAAM4E,EAAE4b,YACtDlJ,EAAK9Y,SAAQoG,GAAK9I,GAAGykB,EAAWpd,OAAOyB,IAC1C,QAGG/D,OAAOiD,OAAOuc,SACd5f,WAAW4f,QAAUA,OACxB,EC1IU,MAAMU,WAEjBzmB,SAAmB,IAAIsI,IAWvBtI,YAAYY,EAAO,GAAI8E,EAAO,GAAIiC,GAC9B,OAAO8e,WAAWC,SAAS9lB,GAAM0lB,KAAK5gB,EAAMiC,EAC/C,CAQD3H,aAAaY,EAAO,IAChB,OAAOA,GAAQ6lB,YAAWE,EAAUvH,IAAIxe,EAC3C,CAODZ,gBAAgBY,EAAO,IAInB,OAHK6lB,WAAWG,MAAMhmB,IAClB6lB,YAAWE,EAAUle,IAAI7H,EAAM,IAAImlB,SAEhCU,YAAWE,EAAU/d,IAAIhI,EACnC,CAODZ,kBAAkBY,EAAO,IACrB,MAAMimB,EAAMJ,YAAWE,EAAU/d,IAAIhI,GAErC,OADIimB,GAAKL,QAAQK,EAAIL,SACdC,YAAWE,EAAU9d,OAAOjI,EACtC,QAGG2F,OAAOiD,OAAOid,YACdtgB,WAAWsgB,WAAaA,UAC3B,ECzDU,MAAMK,cAMN9jB,sBACP,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UAC1F,CAMU0jB,uBACP,OAAQD,cAAc9jB,QACzB,CAEUgkB,sBACP,MAAO,SAAS5jB,KAAKH,UAAUI,UAAUU,cAC5C,CAMD/D,uBAAuB6K,EAAM,IACzB,OAAKA,GACEpH,SAASD,SAASuI,MAAM,GAAI,KAAOlB,CAChD,CAOE7K,sBAAsB6K,EAAM,IACxB,IAAKA,EAAK,OAAO,EACjB,MAAM/G,EAAS+G,EAAI9G,cACnB,GAAId,UAAUC,cAAe,CACzB,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IAChCA,EAAEC,MAAML,cAAcM,SAASP,KAC/BE,GAAM,EACT,IAEEA,CACV,CACD,MAAMijB,EAAShkB,UAAUI,UAAUsU,qBAAuB,GACpDuP,EAASD,EAAO5iB,SAAS,OAC/B,SAAI6iB,IAAUpjB,EAAOkB,WAAW,UACxBkiB,GAAUD,EAAO5iB,SAASP,EACrC,CAOD9D,0BAA0B6K,EAAM,IAE5B,OAAKA,IAEO,YAARA,EACOic,cAAcC,UAGb,WAARlc,EACOic,cAAc9jB,SAGlB8jB,cAAcK,SAAStc,GACjC,CAOD7K,gBAAgB6K,EAAM,IAClB,IAAKA,EAAK,OAAO,EACjB,MAAM/G,EAAS+G,EAAI9G,cAEnB,GAAId,UAAUC,eAAiBD,UAAUC,cAAckkB,SAAU,CAE7D,OADiBnkB,UAAUC,cAAckkB,SAASrjB,gBAC9BD,CACvB,CAGD,OADeb,UAAUI,UAAUsU,oBACrBT,QAAQpT,GAAU,CACnC,CAUD9D,0BAA0B6K,EAAM,IAE5B,IAAKA,EAAK,OAAO,EAEjB,IAAKwc,OAAOzL,YAAa,OAAO,EAEhC,MAAM0L,EAAQD,OAAOzL,YAAYlW,KAEjC,OAAI4hB,EAAMjjB,SAAS,YACA,aAARwG,GAA8B,aAARA,GAG7Byc,EAAMjjB,SAAS,eACA,cAARwG,GAA+B,eAARA,EAIrC,QAGGtE,OAAOC,KAAKsgB,cACf,ECpHU,MAAMS,sBAAsBC,iBAEvCxnB,SAAqB,IAAIsI,IACzBtI,SAAqB,IAAIsI,IAQzBmf,QAAQzlB,EAAIyS,GACR,MAAMwP,EAAMxP,GAAO,CAAEiT,WAAW,EAAMC,SAAS,GAC/C,OAAO/gB,MAAM6gB,QAAQzlB,EAAIiiB,EAC5B,CAODjkB,cAAcgC,GACV,MAAM4lB,EAAW,IAAIL,cAAcA,eAAcM,IAEjD,OADAD,EAASH,QAAQzlB,GACV4lB,CACV,CAOD5nB,UAAkB8nB,GAAY,GAC1B,OAAOA,EAAYP,eAAcQ,EAAcR,eAAcS,CAChE,CAKUC,gBACP,OAAOV,eAAcW,IAAkBX,eAAcY,EACxD,CAEUD,gBACP,OAAOX,eAAcS,EAAY5D,KAAO,CAC3C,CAEU+D,gBACP,OAAOZ,eAAcQ,EAAY3D,KAAO,CAC3C,CAMDpkB,UAAkBooB,GACTb,eAAcU,IACnBG,EAAUlkB,SAASmkB,IACXd,eAAcW,IAAgBG,EAASC,WAAWpkB,SAAQlC,GAAMulB,eAAc7J,GAAM1b,EAAIulB,eAAcS,KACtGT,eAAcY,IAAgBE,EAASE,aAAarkB,SAAQlC,GAAMulB,eAAc7J,GAAM1b,EAAIulB,eAAcQ,IAAa,GAEhI,CAQD/nB,UAAawoB,EAAQC,GACjB,OAAqB,IAAjBA,EAAQrE,OACZmD,eAAchY,GAAOiZ,EAAQC,GAC7BD,EAAO9M,WAAWxX,SAAQlC,GAAMulB,eAAc7J,GAAM1b,EAAIymB,MACjD,EACV,CAQDzoB,UAAcgC,EAAIymB,GACdA,EAAQvkB,SAAQ,CAACC,EAAGukB,KAChB,IACQA,EAAE1mB,IAAKmC,EAAEnC,EAChB,CAAC,MAAOyD,GACLiH,MAAM0N,MAAM,KAAM3U,EACrB,IAER,CAWDzF,UAAagC,EAAImF,EAAQyC,GACrB,GAAI5H,aAAcjC,aAAe,EAAO,OAAO,EAC/C,MAAMiN,EAAM,IAAI1E,IAEhB,OADA0E,EAAIvE,IAAItB,EAAQyC,GACT2d,eAAc7J,GAAM1b,EAAIgL,EAClC,CAODhN,SAAmBkN,GACf,MAAqB,mBAAPA,CACjB,CAQDlN,UAAoBmH,EAAQyC,GACxB,OAAO2d,eAAcnV,EAAYjL,IAAWogB,eAAcnV,EAAYxI,EACzE,CAWD5J,sBAAsBmH,EAAQyC,EAAUke,GAAY,EAAOrjB,GAEvD,QAAK8iB,eAAcoB,GAAaxhB,EAAQyC,KAExC2d,eAAcqB,GAAWd,GAAWrf,IAAItB,EAAQyC,GAG3Cke,GAAWP,eAAcsB,GAAMpkB,GAAU9D,SAASwU,KAAMhO,EAAQyC,IAE9D,EACV,CAUD5J,wBAAwBkN,EAAI4a,GAAY,GACpC,QAAOP,eAAcnV,EAAYlF,IAAMqa,eAAcqB,GAAWd,GAAWjf,OAAOqE,EACrF,QAMG3G,OAAOiD,OAAO+d,eACdphB,WAAWohB,cAAgBA,cAC3BA,cAAc7e,OAAO/H,SAAS8c,gBACjC,ECzKU,MAAMqL,aAKjB9oB,SAAgB,IAAI0W,IAOpB1W,aAAagC,GACT8mB,cAAazE,EAAOvI,IAAI9Z,EAC3B,CAODhC,cAAcgC,GACV8mB,cAAazE,EAAOxb,OAAO7G,EAC9B,CAODhC,WAAWG,EAAK,IACZ,IAAKA,EAAI,OAAO,KAChB,MAAM4oB,EAAMjiB,MAAMC,KAAKtF,MAAK4iB,GAAQld,QAAOnF,GAAMA,EAAG7B,KAAOA,IAC3D,OAAsB,IAAf4oB,EAAIxoB,OAAe,KAAOwoB,EAAI,EACxC,CAED/oB,UAAwBY,EAAO,GAAIkQ,EAAU,EAAGkI,GAC5C,MAAM9L,GAAMzH,IACR,MAAMzD,EAAKyD,EAAEtE,OAEb,GADeP,EAAKoE,WAAW,QAAUhD,EAAG6Y,UAAYja,EAAK2N,eAC/CvM,EAAG7B,KAAOS,EAEpB,OADAqgB,SAASkB,SAASxhB,SAASwU,KAAM,KAAM,iBAAkBjI,IAClD8L,EAAEhX,EACZ,EAECyS,EAAM,CAAEsN,MAAM,EAAOuB,SAAS,GAChCxS,EAAU,IAAG2D,EAAI7D,OAASC,YAAYC,QAAQA,IAClDmQ,SAASG,OAAOzgB,SAASwU,KAAM,KAAM,iBAAkBjI,GAAIuH,EAC9D,CAODzU,eAAeY,EAAO,GAAIkQ,EAAU,GAChC,OAAO,IAAI5O,SAAQ,CAAC8W,EAAGvT,KACnB,IAAIzD,EAAK8mB,aAAaE,KAAKpoB,IAASkoB,aAAalgB,IAAIhI,GACrD,OAAOoB,EAAKgX,EAAEhX,GAAM8mB,cAAaG,GAAiBroB,EAAMkQ,EAASkI,EAAE,GAE1E,CAODhZ,iBAAiBY,EAAO,GAAIsM,GACxB,IAAKiF,EAAWC,WAAWlF,GAAK,OAAO,EACvC,MAAMtD,SAAYnE,IACd,MAAMzD,EAAKyD,EAAEyjB,eAAevT,QAE5B,OADW3T,EAAG7B,KAAOS,GAAQoB,EAAG6Y,UAAYja,EAChCsM,EAAGlL,EAAIyD,QAAKR,CAAS,EAE/BjD,EAAK8mB,aAAaE,KAAKpoB,IAASkoB,aAAalgB,IAAIhI,GACvD,OAAIoB,EAAWkL,EAAGlL,IAClBif,SAASG,OAAOzgB,SAASwU,KAAM,KAAM,iBAAkBvL,UAChDA,SACV,CASD5J,eAAeY,EAAO,GAAIuoB,GAAO,EAAM1c,GAAS,GAE5C,IAAI2c,EAAStiB,MAAMC,KAAK+hB,cAAazE,GAKrC,OAJIzjB,IAAMwoB,EAASA,EAAOjiB,QAAOnF,GAAMA,GAAMkX,MAAMtD,QAAQ5T,EAAIpB,MAC1DuoB,IAAMC,EAASA,EAAOjiB,QAAOnF,GAAMA,EAAGqX,cACtC5M,IAAQ2c,EAASA,EAAOjiB,QAAOnF,IAAOA,EAAGqX,cAEvC+P,CACV,CASDppB,YAAYY,EAAO,GAAIuoB,GAAO,EAAM1c,GAAS,GACzC,OAAOqc,aAAaO,QAAQzoB,EAAMuoB,EAAM1c,GAAQkJ,OACnD,CAQD3V,gBAAgBgC,EAAI0D,GAEhB,KADawT,MAAMyC,YAAY3Z,IAAOkX,MAAMpF,cAAc9R,IAC/C,OAAO,KAElB,MAAMkZ,EAAKhC,MAAM2D,UAAU7a,GAC3B,IAAK,IAAImC,KAAK+W,EAAI,CACd,IAAK/W,EAAG,MACR,GAAIA,aAAakZ,WAAY,CACzB,MAAMZ,EAASvD,MAAMuD,OAAOtY,GAC5B,OAAKuB,EACDwT,MAAMoQ,UAAU7M,EAAQ/W,GAAc+W,EACnCqM,aAAaS,SAAS9M,EAAQ/W,GAFnB+W,CAGrB,CACD,GAAIvD,MAAMoQ,UAAUnlB,EAAGuB,GAAO,OAAOvB,CACxC,CAED,OAAOuB,EAAO,KAAO/E,SAASwU,IACjC,CAQDnV,iBAAiBqS,EAAKzR,GAClB,OAAOuR,EAAWqX,kBAAkBnX,EAAKzR,EAAM,MAClD,CAQDZ,iBAAiBqS,EAAKzR,GAClB,OAAOuR,EAAWqX,kBAAkBnX,EAAKzR,EAAM,MAClD,CASDZ,eAAeqS,EAAKzR,EAAMsM,GACtB,OAAOiF,EAAWqX,kBAAkBnX,EAAKzR,EAAMsM,EAClD,CAMDlN,sBACQ8oB,cAAa5C,KACjBvlB,SAASuL,iBAAiB,WAAY4c,cAAaW,IACnDX,cAAa5C,IAAY,EAC5B,CAMDlmB,wBACIW,SAASuhB,oBAAoB,WAAY4G,cAAaW,IACtDX,cAAa5C,IAAY,CAC5B,CAEDlmB,WAAmB,EACnBA,YACIqB,uBAAsB,KAClBynB,aAAaO,QAAQ,MAAM,GAAO,GACrBliB,QAAOnF,GAAMA,EAAGqX,aAA8B,IAAhBrX,EAAG0nB,WACjCxlB,SAAQlC,GAAMA,EAAGqX,WAAWtQ,mBAAqBV,cAAcW,QAAO,GAE1F,QAGGzC,OAAOiD,OAAOsf,cACdA,aAAaa,eACbxjB,WAAW2iB,aAAeA,YAC7B,ECpMU,MAAMc,SAEjB5pB,oBAAsBmG,WAAW0jB,iBAAmBpmB,SAASqB,OAC7D9E,iBAAkB,SAGd,IAAKmG,WAAW0jB,gBAAiB,CAC7B,MAAMnoB,EAAM+B,SAAS+B,KAAKqC,MAAM,KAAKR,MACrC,IAAIsR,EAAMjX,EAAImG,MAAM,KACpB+hB,SAASE,aAAepoB,EAAI+M,SAAS,KAAO/M,EAAMiX,EAAI5M,MAAM,GAAI,GAAGvB,KAAK,KACxErE,WAAW0jB,gBAAkBD,SAASE,YACzC,CAGD,MAAMC,EAAS,gBAAiB/X,KAC5B+X,IACAH,SAASI,UAAsC,IAA3B7jB,WAAWC,YAC3BC,cAAcA,aAAa4jB,QAAQ,cAAeL,SAASI,WAEnEJ,SAASI,WAAW3jB,cAAsD,QAAvCA,aAAaC,QAAQ,cAE3D,CAMDtG,oBAAoB0B,EAAM,GAAImD,GAAO,GAEjCnD,EAAMA,GAAO,GACb,IAAIwoB,EAAO,KACX,MAAMC,EAAS1mB,SAASsB,SAAS8C,MAAM,KAAKR,KAAK,GAAGhD,SAAS,KACvD+lB,EAAQ1oB,EAAI2C,SAAS,eAIvB6lB,EAHUxoB,EAAIsD,WAAW,SAEhBolB,EACF1oB,EACAA,EAAIsD,WAAW,KACf,GAAGvB,SAASqB,UAAUpD,IACtByoB,EACA,GAAG1mB,SAASqB,SAASrB,SAASsB,eAAerD,IAE7C,GAAG+B,SAASqB,SAASrB,SAASsB,YAAYrD,IAGrDwoB,EAAOA,EAAKriB,MAAM,OAAOZ,KAAI9C,GAAKA,EAAEyD,WAAW,UAAW,OAAM4C,KAAK,OACrE,MAAMtF,EAAM,IAAIC,IAAI+kB,GAKpB,OAFKrlB,GAAQ+kB,SAASI,UAAU9kB,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OAE7DL,EAAIM,IACd,CAQDxF,kBAAkB0B,EAAM,GAAI2oB,EAAQ,GAChC,OAAQ3oB,GAAO,IAAImG,MAAM,KAAKkE,MAAM,GAAI,EAAIse,GAAO7f,KAAK,KAAK,GAChE,CAUDxK,yBAAyB2P,EAAM,IAE3B,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAI3K,WAAW,KAClB,CACP,MAAMhD,EAAKkX,MAAM0E,MAAMjd,SAAS8c,gBAAiB9N,GACjD,OAAO3N,EAAKA,EAAGkc,UAAYvO,CAC9B,CAGD,OADelC,OAAO6c,OAAO3a,GACVA,GAEnBA,EAAMia,UAASW,GAAgB5a,GACxBia,SAASY,SAAS7a,GAC5B,CAOD3P,UAAuB0B,EAAM,IAMzB,OADAA,EAAMA,EAAIsD,WAAW,MAAQ4kB,UAASa,GAAe,IAAM/oB,EAAMA,EAC1DkoB,SAASc,aAAahpB,EAChC,CAMU+oB,gBACP,OAAOb,SAASc,aAAad,UAASe,IAAe,EACxD,CAMUA,gBACP,OAAOf,SAASE,aAAeF,SAASE,aAAapmB,QAAQ,KAAM,KAAO,EAC7E,CAWD1D,0BAA0B6K,EAAM,GAAI+f,EAAS,OACzC,MAAMlpB,EAAMkoB,UAASW,GAAgB1f,GACrC,aAAa+e,SAASiB,KAAKnpB,EAAKkpB,EACnC,CAWD5qB,kBAAkB6K,EAAM,GAAI+f,EAAS,MAAOE,EAASC,GAAS,EAAO5V,GACjE,IAAIxN,EAAO,KACX,MAAMqjB,EAAK,gBACXF,EAAU,IAAIA,IACNE,GAAMD,EAAS,0BAA4BD,EAAQE,IAAO,aAClEF,EAAQG,OAAS,mBACjB,MAAMvpB,EAAMkoB,SAASc,aAAa7f,GAAK,GACjC4J,EAAM,CAAEmW,OAAQA,EAAQE,QAASA,IACxB,SAAXF,GAAgC,QAAXA,GAAoBzV,KACzCV,EAAIU,KAAO7F,KAAK+E,UAAUc,IAE9B,MAAM1J,QAAYC,MAAMhK,EAAK+S,GAE7B,OADIhJ,EAAIE,KAAIhE,EAAOojB,QAAetf,EAAIyf,aAAezf,EAAIG,QAClDjE,CACV,CAaD3H,sBAAsB0B,EAAM,GAAIkpB,EAAS,MAAOE,EAASC,GAAS,EAAO9c,EAAKkH,GAC1E,IACI,GAAIzT,EAAK,OAAOkoB,SAASiB,KAAKnpB,EAAKkpB,EAAQE,EAASC,EAAQ5V,EAC/D,CAAC,MAAO1P,GACLiH,MAAM0N,MAAM3Y,KAAMgE,EACrB,CACD,OAAIwI,IACG8c,EAAS,CAAE,EAAG,GACxB,CAUD/qB,sBAAsB6K,EAAM,IAExB,MAAMsgB,EAAS1d,OAAO0d,OAAOtgB,GACvBugB,GAAQD,GAAUhZ,EAAWgB,cAActI,GAC3CwgB,EAASD,GAAQjZ,EAAWC,WAAWgZ,GAO7C,KANgBC,GAAU5d,OAAO8F,WAAW1I,IAE9BsgB,KAAQtgB,EAAM4C,OAAO0G,OAAOtJ,IAEtCwgB,IAAQxgB,QAAYsH,EAAW0P,aAAauJ,IAE3C3d,OAAO2B,WAAWvE,GAEvB,OAAOA,CACV,QAGGtE,OAAOC,KAAKojB,UACZzjB,WAAWyjB,SAAWA,QACzB,EClNU,MAAM0B,eAAehmB,KAEhCtF,sBAAwB,uBACxBA,oBAAsB,sFAEtB+O,IAAU9L,UAAU8L,OAEpBa,OAAO/E,EAAMygB,OAAOC,eAAgBxc,GACrBtN,KACRsN,OAASA,EACZ,MAAMlO,EAFKY,KAEI+pB,SACf,OAAO3gB,EAAInH,QAAQ4nB,OAAOG,cAAc,CAACjnB,EAAOqG,IAAQA,GAAOhK,EAAI2D,IACtE,CAMDknB,QACI,MAAMlqB,EAAKC,KACLkqB,EAAOnqB,EAAGmqB,KAAKC,UACf7U,EAAQvV,EAAGuV,MAAM8U,SAEjBC,EAActqB,GAAGuqB,KAGjBC,EAAiB,IAAVjV,EAAc,GAAK,IAAIkV,OAAOlV,GAD3B+U,GAAe,GAAK,IACwBjkB,MAAM,KAClE,IAAIrH,EAAI,EACR,KAAOA,GAAKmrB,GACRK,EAAKjT,KAAKvY,EAAEwN,YACZxN,IAGJ,KAAOwrB,EAAKzrB,OAAS,GAAK,GAAGyrB,EAAKjT,KAAK,IAEvC,OAAOiT,CACV,CAEGjd,aACA,OAAOtN,MAAKsN,EACf,CAEGA,WAAOlE,GACPpJ,MAAKsN,GAAUlE,GAAO5H,UAAU+L,QACnC,CAEGkd,WACA,OAAOzqB,KAAK0qB,aACf,CAEGD,SAAKrhB,EAAM,GACXpJ,KAAK2qB,YAAYvhB,EACpB,CAEGwhB,YACA,OAAO5qB,KAAK6qB,UACf,CAEGD,UAAMxhB,EAAM,GACZpJ,KAAK8qB,SAAS1hB,EACjB,CAEG2hB,UACA,OAAO/qB,KAAKmqB,SACf,CAEGY,QAAI3hB,EAAM,GACVpJ,KAAKgrB,QAAQ5hB,EAChB,CAMGkM,YACA,OAAO,IAAIuU,OAAO7pB,KAAK0qB,cAAe1qB,KAAK6qB,WAAY,EAC1D,CAMGX,WACA,OAAO,IAAIL,OAAO7pB,KAAK0qB,cAAe1qB,KAAK6qB,WAAa,EAAG,EAC9D,CAEGI,SACA,OAAOtjB,OAAO3H,KAAKkrB,MAAM5gB,OAAO,EACnC,CAEG4gB,WACA,OAAOlrB,KAAK0qB,aACf,CAEGS,QACA,OAAOnrB,KAAK6qB,WAAa,CAC5B,CAEGO,SACA,OAAOprB,KAAKmrB,EAAE5e,WAAW8e,SAAS,EAAG,IACxC,CAEGC,UACA,OAAOtrB,MAAKurB,GAAU,CAAEX,MAAO,SAClC,CAEGY,WACA,OAAOxrB,MAAKurB,GAAU,CAAEX,MAAO,QAClC,CAEGa,QACA,OAAOzrB,KAAKmqB,UAAU5d,UACzB,CAEGmf,SACA,OAAO1rB,KAAKyrB,EAAEJ,SAAS,EAAG,IAC7B,CAEG9M,QACA,OAAOve,KAAKoqB,SAAS7d,UACxB,CAEGof,SACA,OAAO3rB,KAAK4rB,IAAIthB,MAAM,EAAG,EAC5B,CAEGshB,UACA,OAAO5rB,MAAKurB,GAAU,CAAEM,QAAS,SACpC,CAEGC,WACA,OAAO9rB,MAAKurB,GAAU,CAAEM,QAAS,QACpC,CAEGE,QACA,OAAO/rB,KAAKgsB,WAAWzf,UAC1B,CAEG0f,SACA,OAAOjsB,KAAK+rB,EAAEV,SAAS,EAAG,IAC7B,CAEGzsB,QACA,OAAOoB,MAAKksB,GAAY,EAC3B,CAEGC,SACA,OAAOnsB,MAAKksB,GAAY,EAC3B,CAEGzkB,QACA,OAAOzH,MAAKosB,IAAU,EACzB,CAEGC,QACA,OAAOrsB,MAAKosB,IAAU,EACzB,CAEG1J,QACA,OAAO1iB,KAAKssB,aAAa/f,UAC5B,CAEGggB,SACA,OAAOvsB,KAAK0iB,EAAE2I,SAAS,EAAG,IAC7B,CAEG1sB,QACA,OAAOqB,KAAKwsB,aAAajgB,UAC5B,CAEGkgB,SACA,OAAOzsB,KAAKrB,EAAE0sB,SAAS,EAAG,IAC7B,CAEGqB,UACA,OAAO1sB,KAAK2sB,kBAAkBpgB,WAAW8e,SAAS,EAAG,IACxD,CAEGuB,QACA,OAAO5sB,MAAK6sB,IACf,CAEGC,SACA,OAAO9sB,KAAK4sB,EAAE3qB,QAAQ,IAAK,GAC9B,CAEG8qB,QACA,OAAO5f,KAAK6f,KAAKhtB,KAAKmrB,EAAI,EAC7B,CAEGlE,QACA,OAAQjnB,KAAKgsB,WAAa,GAAGzf,UAChC,CAEG0gB,SACA,OAAOjtB,KAAKinB,EAAEoE,SAAS,EAAG,IAC7B,CAEG6B,QACA,MAAMC,EAAO,IAAItpB,KAAK7D,KAAKotB,WAC3BD,EAAKE,SAAS,EAAG,EAAG,EAAG,GACvBF,EAAKnC,QAAQmC,EAAKhD,UAAY,GAAKgD,EAAK/C,SAAW,GAAK,GACxD,MAAMkD,EAAQ,IAAIzpB,KAAKspB,EAAKzC,cAAe,EAAG,GAC9C,OAAO,EAAIvd,KAAKogB,QAAQJ,EAAKC,UAAYE,EAAMF,WAAa,MAAW,GAAKE,EAAMlD,SAAW,GAAK,GAAK,EAC1G,CAEGoD,SACA,OAAOxtB,KAAKktB,EAAE3gB,WAAW8e,SAAS,EAAG,IACxC,CAEG1e,QACA,OAAO3M,KAAKotB,SACf,CAEGK,QACA,OAAOtgB,KAAKC,MAAMpN,KAAK2M,EAAI,IAC9B,CAEDod,SACI,MAAMhqB,EAAKC,KACX,MAAO,CACHirB,GAAIlrB,EAAGkrB,GACPC,KAAMnrB,EAAGmrB,KACTC,EAAGprB,EAAGorB,EACNC,GAAIrrB,EAAGqrB,GACPE,IAAKvrB,EAAGurB,IACRE,KAAMzrB,EAAGyrB,KACTC,EAAG1rB,EAAG0rB,EACNC,GAAI3rB,EAAG2rB,GACPnN,EAAGxe,EAAGwe,EACNoN,GAAI5rB,EAAG4rB,GACPC,IAAK7rB,EAAG6rB,IACRE,KAAM/rB,EAAG+rB,KACTC,EAAGhsB,EAAGgsB,EACNE,GAAIlsB,EAAGksB,GACPrtB,EAAGmB,EAAGnB,EACNutB,GAAIpsB,EAAGosB,GACP1kB,EAAG1H,EAAG0H,EACN4kB,EAAGtsB,EAAGssB,EACN3J,EAAG3iB,EAAG2iB,EACN6J,GAAIxsB,EAAGwsB,GACP5tB,EAAGoB,EAAGpB,EACN8tB,GAAI1sB,EAAG0sB,GACPC,IAAK3sB,EAAG2sB,IACRE,EAAG7sB,EAAG6sB,EACNE,GAAI/sB,EAAG+sB,GACPC,EAAGhtB,EAAGgtB,EACN9F,EAAGlnB,EAAGknB,EACNgG,GAAIltB,EAAGktB,GACPC,EAAGntB,EAAGmtB,EACNM,GAAIztB,EAAGytB,GACP7gB,EAAG5M,EAAG4M,EACN8gB,EAAG1tB,EAAG0tB,EAEb,CAEDlvB,iBAAiBmvB,GAAQ,EAAOpgB,EAAS9L,UAAU8L,OAAQP,GAAa,GACpE,MAAMxB,EAAM,IAAIse,OAChBte,EAAI+B,OAASA,EACb/B,EAAIuf,SAAS,GACb,MAAMP,EAAO,GACb,IAAInhB,EAAM,KACNmV,EAAI,GACR,KAAOA,KACHnV,EAAMskB,EAAQniB,EAAI+f,IAAM/f,EAAIigB,KAC5BpiB,EAAM2D,EAAaxB,GAAIwB,GAAY3D,GAAOA,EAC1CmhB,EAAKjT,KAAKlO,GACVmC,EAAIuf,SAASvf,EAAIsf,WAAa,GAElC,OAAON,CACV,CAEDhsB,eAAemvB,GAAQ,EAAOpgB,EAAS9L,UAAU8L,OAAQP,GAAa,GAClE,MAAMxB,EAAM,IAAIse,OAChBte,EAAI+B,OAASA,EACb,MACMmO,EADclQ,GAAI+e,KACK,EAAI,EACjC/e,EAAIyf,QAAQzf,EAAI4e,UAAY5e,EAAI6e,SAAW3O,GAC3C,MAAM8O,EAAO,GACb,IAAInhB,EAAM,KACNmV,EAAI,EACR,KAAOA,KACHnV,EAAMskB,EAAQniB,EAAIqgB,IAAMrgB,EAAIugB,KAC5B1iB,EAAM2D,EAAaxB,GAAIwB,GAAY3D,GAAOA,EAC1CmhB,EAAKjT,KAAKlO,GACVmC,EAAIyf,QAAQzf,EAAI4e,UAAY,GAEhC,OAAOI,CACV,CAEDD,MAEI,OAA6D,IAAtD,IAAIqD,KAAKC,OAAO5tB,MAAKsN,KAAUugB,UAAUC,QACnD,CAED/gB,IAAY3D,EAAM,IACd,OAAOA,EAAI2kB,OAAO,GAAGjhB,cAAgB1D,EAAIkB,MAAM,EAClD,CAEDihB,IAAUvY,GACN,OAAOhT,KAAKguB,eAAehuB,MAAKsN,GAAS0F,EAC5C,CAEDkZ,IAAYvJ,GACR,OAAQ3iB,KAAKgsB,WAAa,IAAM,IAAIzf,WAAW8e,SAAS1I,EAAM,IACjE,CAEDyJ,IAAU6B,GACN,MACM7kB,EAAMpJ,MAAKurB,GADL,CAAE2C,KAAM,UAAWC,QAAQ,IACP/nB,MAAM,KAAKR,KAAK,GAChD,OAAOqoB,EAAc7kB,EAAI9G,cAAgB8G,CAC5C,CAEDyjB,MACI,MACMuB,GAAc,EADTpuB,KACgBquB,oBACrBC,EAAUnhB,KAAKohB,IAAIH,GAEnBI,EAAeF,EAAU,GAM/B,MAAO,GAJMF,GAAc,EAAI,IAAM,MAHlBjhB,KAAKC,MAAMkhB,EAAU,IAIhB/hB,WAAW8e,SAAS,EAAG,QAClCmD,EAAajiB,WAAW8e,SAAS,EAAG,MAGpD,EChUU,MAAMoD,SAQpBlwB,iBAAiBgC,GAChB,MAAMyX,EAAOzX,EAAG0X,wBACVyW,EAAKlkB,OAAOmkB,QACZC,EAAKpkB,OAAOqkB,QACZzvB,EAAM,CACX0P,KAAMkJ,EAAKlJ,KAAO4f,EAClB3f,MAAOiJ,EAAKjJ,MAAQ2f,EACpBI,IAAK9W,EAAK8W,IAAMF,EAChBG,OAAQ/W,EAAK+W,OAASH,EACtBzW,OAAQH,EAAKG,OACbD,MAAOF,EAAKE,MACZvL,EAAGqL,EAAKrL,EAAI+hB,EACZM,EAAGhX,EAAKgX,EAAIJ,GAIb,OAFAxvB,EAAI6vB,QAAU7vB,EAAI0P,KAAQ1P,EAAI8Y,MAAQ,EACtC9Y,EAAI8vB,QAAU9vB,EAAI0vB,IAAO1vB,EAAI+Y,OAAS,EAC/B/Y,CACP,CAQDb,oBAAoBqV,EAASub,GAE5B,MAAMnX,EAAOpE,EAAQqE,wBACfmX,EAAUX,SAASY,eAAeF,EAAcvb,EAAU,MAE1D0b,EAAWF,EAAQziB,EACnB4iB,EAAWH,EAAQJ,EAEnBQ,EAAe5b,EAAQ6b,YAAcH,EACrCI,EAAgB9b,EAAQ+b,aAAeJ,EAEvCK,EAAW5X,EAAKlJ,KAAOsgB,EAAQtgB,KAC/B+gB,EAAW7X,EAAK8W,IAAMM,EAAQN,IAKpC,MAAO,CACN5W,MAAOsX,EACPrX,OAAQuX,EACRZ,IAAKe,EACL/gB,KAAM8gB,EACNjjB,EAAGijB,EACHZ,EAAGa,EACHZ,QAVgBO,EAAe,EAAKI,EAWpCV,QAVeW,EAAYH,EAAgB,EAY5C,CAODnxB,sBAAsBqV,GAErB,MAAMxU,EAAM,CACX0P,KAAM,EACNC,MAAO,EACP+f,IAAK,EACLC,OAAQ,EACRpiB,EAAG,EACHqiB,EAAG,GAIJ,KADapb,aAAmBtV,aACrB,OAAOc,EAClB,MAAM0I,EAAM2L,EAASY,qBAAqBT,GAS1C,OAPAxU,EAAI0P,KAAOhH,EAAI2K,MAAM,gBACrBrT,EAAI2P,MAAQjH,EAAI2K,MAAM,iBACtBrT,EAAI0vB,IAAMhnB,EAAI2K,MAAM,eACpBrT,EAAI2vB,OAASjnB,EAAI2K,MAAM,kBACvBrT,EAAIuN,EAAIvN,EAAI0P,KAAO1P,EAAI2P,MACvB3P,EAAI4vB,EAAI5vB,EAAI0vB,IAAM1vB,EAAI2vB,OAEf3vB,CACP,CAUDb,kBAAkBuc,EAAY,MAAOgV,EAAQ9sB,EAAQ+sB,GAEpD,IAAMD,IAAU9sB,EAAS,OAAO,EAEhC,MAAMgtB,EAAMvB,UAASwB,GAAenV,GAEpC,IAAK2T,UAASyB,GAAkBF,GAE/B,YADA/kB,MAAM+C,KAAK8hB,EAAQ,6BAA6BhV,MAIjD,MAAMhV,EAAQgqB,EAAOpvB,QAAQyvB,MAAQ,CAAE,EAAGL,EAAOhqB,MAEjDA,EAAMsqB,SAAW,QACjBtqB,EAAMgpB,IAAM,MACZhpB,EAAMgJ,KAAO,MACbhJ,EAAMuqB,OAAS,MACfvqB,EAAMspB,QAAU,MAChBtpB,EAAMwqB,UAAY,GAElB1pB,cAAcf,QAAQiqB,EAAOpvB,QAAQyvB,MAAOrqB,GAAO,GAEnD,MAAMyqB,EAAOT,EAAOH,aAAe,EAC7Ba,EAAOV,EAAOL,YAAc,EAE5BzX,EAAOyW,SAASgC,aAAaztB,EAAQ+sB,aAAiBzxB,aACtDoyB,EAAQjC,UAASkC,GAAab,EAAQC,EAAOC,GAE7C5wB,EAAM,CACXuN,EAAGqL,EAAKiX,QACRD,EAAGhX,EAAKkX,QACR0B,KAAML,EACNM,KAAML,EACNM,KAAMhB,EAAOH,aACboB,KAAMjB,EAAOL,aAGdhB,UAASuC,GAAWhB,EAAK5wB,EAAK4Y,EAAM0Y,GACpC5qB,EAAMwqB,UAAY,aAAalxB,EAAIuN,QAAQvN,EAAI4vB,OAC/CpoB,cAAcf,QAAQiqB,EAAOpvB,QAAQyvB,MAAOrqB,EAE5C,CAUDvH,qBAAqBuc,EAAY,MAAOgV,EAAQ9sB,EAAQ+sB,GAEvD,IAAMD,IAAU9sB,EAAS,OAAO,EAEhC,MAAMgtB,EAAMvB,UAASwB,GAAenV,GAEpC,IAAK2T,UAASyB,GAAkBF,GAE/B,YADA/kB,MAAM+C,KAAK8hB,EAAQ,6BAA6BhV,MAIjD,MAAMhV,EAAQgqB,EAAOpvB,QAAQyvB,MAAQ,CAAE,EAAGL,EAAOhqB,MAC3CmrB,EAASlB,EAAMrvB,QAAQyvB,MAAQ,CAAE,EAAGJ,EAAMjqB,MAEhDmrB,EAAOb,SAAW,WAClBtqB,EAAMsqB,SAAW,WACjBtqB,EAAMuqB,OAAS,MACfvqB,EAAMwqB,UAAY,GAClBxqB,EAAMorB,MAAQzC,UAASyC,GAAOlB,GAE9BppB,cAAcf,QAAQiqB,EAAOpvB,QAAQyvB,MAAOrqB,GAAO,GAEnD,MAAMqrB,EAAQrB,EAAO7X,wBACfyY,EAAQX,EAAM9X,wBACdwD,EAASgT,SAAS2C,UAAUpuB,GAE5B5D,EAAM,CACXuN,EAAG8O,EAAOwT,QACVD,EAAGvT,EAAOyT,SAGL1Z,EAAM,CACX7I,EAAIwkB,EAAMjZ,MAAQ,EAAMwY,EAAMxY,MAAQ,EACtC8W,EAAImC,EAAMhZ,OAAS,EAAMuY,EAAMvY,OAAS,GAGzCsW,UAAS4C,GAAcrB,EAAK5wB,EAAKoW,EAAK2b,EAAOT,EAAOjV,GAEpD3V,EAAMwqB,UAAY,aAAalxB,EAAIuN,QAAQvN,EAAI4vB,OAC/CiC,EAAOX,UAAY,aAAa9a,EAAI7I,QAAQ6I,EAAIwZ,OAChDiC,EAAOnC,IAAMtZ,EAAIsZ,IAAMtZ,EAAIsZ,IAAM,GACjCmC,EAAOniB,KAAO0G,EAAI1G,KAAO0G,EAAI1G,KAAO,GAEpClI,cAAcf,QAAQiqB,EAAOpvB,QAAQyvB,MAAOrqB,GAC5Cc,cAAcf,QAAQkqB,EAAMrvB,QAAQyvB,MAAOc,EAE3C,CAED1yB,UAAqByxB,EAAK5wB,EAAKoW,EAAK2b,EAAOT,EAAOjV,GAC7CuU,EAAIsB,OACP9b,EAAIwZ,EAAI,EACRxZ,EAAI1G,KAAO,MACX1P,EAAIuN,EAAIvN,EAAIuN,EAAKwkB,EAAMjZ,MAAQ,EAC/B9Y,EAAI4vB,GAAK,GAAKmC,EAAMpC,OAAStT,EAAOqT,IAAM4B,EAAMvY,SACtC6X,EAAIuB,UACd/b,EAAIwZ,EAAI,EACRxZ,EAAI1G,KAAO,MACX1P,EAAIuN,EAAIvN,EAAIuN,EAAKwkB,EAAMjZ,MAAQ,EAC/B9Y,EAAI4vB,EAAIvT,EAAOsT,OAAS2B,EAAMvY,QACpB6X,EAAIwB,SACdhc,EAAI7I,EAAI,EACR6I,EAAIsZ,IAAM,MACV1vB,EAAIuN,GAAK,GAAKwkB,EAAMpiB,MAAQ0M,EAAO3M,KAAO4hB,EAAMxY,OAChD9Y,EAAI4vB,EAAI5vB,EAAI4vB,EAAKmC,EAAMhZ,OAAS,GACtB6X,EAAIyB,QACdjc,EAAI7I,EAAI,EACR6I,EAAIsZ,IAAM,MACV1vB,EAAIuN,EAAI8O,EAAO1M,MAAQ2hB,EAAMxY,MAC7B9Y,EAAI4vB,EAAI5vB,EAAI4vB,EAAKmC,EAAMhZ,OAAS,EAEjC,CAED5Z,UAAkByxB,EAAK5wB,EAAKsyB,EAAOhB,GAC9BV,EAAIsB,OACPlyB,EAAI4vB,EAAI0C,EAAM5C,IAAM1vB,EAAI0xB,KAAOJ,EAAM/N,KACrCvjB,EAAIuN,EAAIvN,EAAIuN,EAAIvN,EAAIyxB,MACVb,EAAIuB,UACdnyB,EAAI4vB,EAAI0C,EAAM5C,IAAM4C,EAAMvZ,OAASuY,EAAM/N,KACzCvjB,EAAIuN,EAAIvN,EAAIuN,EAAIvN,EAAIyxB,MACVb,EAAIwB,SACdpyB,EAAIuN,EAAI+kB,EAAM5iB,KAAO1P,EAAI2xB,KAAOL,EAAM/N,KACtCvjB,EAAI4vB,EAAI5vB,EAAI4vB,EAAI5vB,EAAIwxB,KAAOF,EAAM/N,MACvBqN,EAAIyB,QACdryB,EAAIuN,EAAI+kB,EAAM5iB,KAAO4iB,EAAMxZ,MAAQwY,EAAM/N,KACzCvjB,EAAI4vB,EAAI5vB,EAAI4vB,EAAI5vB,EAAIwxB,KAAOF,EAAM/N,KAElC,CAEDpkB,UAAca,GACb,OAAIA,EAAIkyB,MACA,oBACGlyB,EAAImyB,SACP,oBACGnyB,EAAIoyB,QACP,oBACGpyB,EAAIqyB,MACP,yBADD,CAGP,CAEDlzB,UAAyBa,GACxB,OAAOA,EAAIoyB,SAAWpyB,EAAIqyB,OAASryB,EAAIkyB,OAASlyB,EAAImyB,QACpD,CAEDhzB,UAAsBuc,GACrB,MAAO,CACN0W,QAAsB,SAAb1W,GAAqC,QAAbA,EACjC2W,MAAoB,OAAb3W,GAAmC,SAAbA,EAC7BwW,MAAoB,OAAbxW,EACPyW,SAAuB,UAAbzW,EAEX,CAEDvc,UAAoBqV,EAASmc,EAAOC,GAEnC,IAAKD,EAAO,MAAO,CAAEpjB,EAAG,EAAGqiB,EAAG,EAAGrM,KAAM,EAAGzK,MAAO,EAAGC,OAAQ,GAC5D,IAAIjE,EAAQ,EACZ,MAAMyd,EAAQlD,SAASgC,aAAa7c,GAC9B8c,EAAQjC,SAASgC,aAAaV,GAE9BpN,EAAOqN,EAAIwB,SAAWxB,EAAIyB,MAAQf,EAAMxY,MAAQwY,EAAMvY,OAEtDyZ,EAAaD,EAAMzZ,MAAQ,EAAMyK,EAAO,EACxCkP,EAAaF,EAAMxZ,OAAS,EAAMwK,EAAO,EAE/C+N,EAAM/N,KAAOA,EAEb,MAAM7c,EAAQiqB,EAAMrvB,QAAQyvB,MAAQ,CAAE,EAAGJ,EAAMjqB,MAkB/C,OAhBAA,EAAMsqB,SAAW,WAEbJ,EAAIwB,SAAWxB,EAAIyB,OACtB3rB,EAAMgJ,KAAO,GACbhJ,EAAMgpB,IAAM,MACZ5a,EAAQ8b,EAAIwB,QAAU7O,GAAQ,EAAIA,EAClC7c,EAAMwqB,UAAY,aAAapc,QAAY2d,EAAY,SAEvD/rB,EAAMgpB,IAAM,GACZhpB,EAAMgJ,KAAO,MACboF,EAAQ8b,EAAIsB,MAAQ3O,GAAQ,EAAIA,EAChC7c,EAAMwqB,UAAY,aAAasB,QAAgB1d,QAGhDtN,cAAcf,QAAQkqB,EAAMrvB,QAAQyvB,MAAOrqB,GAEpC4qB,CACP,QAGA5rB,OAAOC,KAAK0pB,UACZ/pB,WAAW+pB,SAAWA,QACtB,EChTa,MAAMqD,eAAexzB,YAInCC,UAAkB,kBAElBA,UAAiB,iBAEjBA,UAAiB,iBAEjBA,UAAiB,cAEjBA,UAAiB,cAEjBA,UAAgB,YAEhBA,UAAqB,kBAErBA,UAAe,CAAC,UAAW,mBAG1B+K,eAAeC,OAAO,UAAWuoB,QACjChtB,OAAOC,KAAK+sB,OACZ,CAEDlpB,GAEA1D,cACCC,QACA2sB,OAAOC,SAAS/xB,KAEhB,CAEDzB,gBAAgBqS,EAAKwI,EAAU,WAC9B,OAAO3B,MAAMsa,SAASnhB,EAAKwI,EAAS0Y,QAAOE,GAC3C,CAQDzzB,eAAegC,EAAImnB,GAAO,GACzB,IAAIrZ,EAAMyjB,OAAOG,YAAY1xB,GAC7B,MAAM2xB,EAASJ,OAAOK,QAAQ5xB,GACxB6xB,EAASN,OAAOO,UAAU9xB,GAC1B+xB,EAAOJ,GAAUxK,EAAO,WAAW0K,iBAAwB,GAC3DG,EAAMngB,OAAOjL,IAAI5G,EAAI,eAAgB,IAC3C,OAAI8N,EAAY,gBAAgBikB,WAAcjkB,aAAekkB,qBAC7DlkB,EAAM9N,EAAGF,cAAc,YAChBgO,GAAKoO,WAAa,GACzB,CAODle,oBAAoBue,GACnB,OAAKrF,MAAMpF,cAAcyK,GAClBzX,MAAMC,KAAKwX,EAAK/D,UAAUrT,QAAOnF,GAAoB,WAAdA,EAAG6Y,UADV,EAEvC,CAOD7a,gBAAgBgC,GACf,MAAO,CAACuxB,OAAOU,eAAejyB,GAAKuxB,OAAOW,cAAclyB,GACxDuxB,OAAOY,cAAcnyB,GAAKuxB,OAAOa,cAAcpyB,GAC/CuxB,OAAOc,cAAcryB,GAAKuxB,OAAOe,wBAAwBtyB,IAAKwI,KAAK,IACnE,CAEDxK,sBAAsBgC,GACrB,MAAMmC,EAAIovB,OAAOgB,WAAWvyB,GAC5B,OAAOmC,EAAI,GAAGovB,QAAOiB,OAAarwB,KAAO,EACzC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAIovB,OAAOkB,UAAUzyB,GAC3B,OAAOmC,EAAI,GAAGovB,QAAO9uB,OAAYN,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAIovB,OAAOmB,UAAU1yB,GAC3B,OAAOmC,EAAI,GAAGovB,QAAO3e,OAAYzQ,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAIovB,OAAOoB,UAAU3yB,GAC3B,OAAOmC,EAAI,GAAGovB,QAAOzO,OAAY3gB,KAAO,EACxC,CAEDnE,qBAAqBgC,GACpB,MAAMmC,EAAIovB,OAAOqB,UAAU5yB,GAC3B,OAAOmC,EAAI,GAAGovB,QAAOsB,OAAY1wB,KAAO,EACxC,CAEDnE,+BAA+BgC,GAC9B,MAAMmC,EAAInC,GAAIG,SAAS6R,KACvB,OAAO7P,EAAI,GAAGovB,QAAOuB,OAAW3wB,KAAO,EACvC,CAEDnE,yBAAyBgC,GACxB,MAAMmC,EAAIovB,OAAOwB,cAAc/yB,GAC/B,OAAOmC,EAAI,GAAK,GAAGovB,QAAOyB,OAAgB7wB,IAC1C,CAEDnE,iBAAiBgC,GAChB,OAAO6R,OAAOohB,UAAUjzB,EAAI,SAC5B,CAEDhC,iBAAiBgC,GAChB,OAAO6R,OAAOjL,IAAI5G,EAAI,SACtB,CAEDhC,kBAAkBgC,GACjB,OAAO6R,OAAOjL,IAAI5G,EAAI,UACtB,CAEDhC,iBAAiBgC,GAChB,OAAO6R,OAAOjL,IAAI5G,EAAI,SACtB,CAEDhC,iBAAiBgC,GAChB,OAAO6R,OAAOjL,IAAI5G,EAAI,SACtB,CAEDhC,iBAAiBgC,GAChB,OAAO6R,OAAOjL,IAAI5G,EAAI,SACtB,CAEDhC,eAAegC,EAAIiM,EAAM,IACxB,OAAO4F,OAAOjL,IAAI5G,EAAI,OAAQiM,EAC9B,CAEDjO,qBAAqBgC,GACpB,OAAO6R,OAAOohB,UAAUjzB,EAAI,cAAc,EAC1C,CAEDhC,iBAAiBgC,GAChB,OAAO6R,OAAOjL,IAAI5G,EAAI,SAAU,gBAChC,CAEDhC,eAAegC,GACd,OAAO6R,OAAOohB,UAAUjzB,EAAI,QAAQ,EACpC,CAEDhC,eAAegC,GACd,OAAO6R,OAAOjL,IAAI5G,EAAI,OAAQ,GAC9B,CAEDhC,eAAegC,GACd,OAAO6R,OAAOjL,IAAI5G,EAAI,OAAQ,IAC9B,CAEDhC,gBAAgBgC,GACf,OAAO6R,OAAOjL,IAAI5G,EAAI,QACtB,CAEDhC,mBAAmBgC,GAClB,OAAOA,EAAG4D,aAAa,WACvB,CAED5F,cAAcgC,GACb,OAAO6R,OAAOjL,IAAI5G,EAAI,MAAO,GAC7B,CAEDhC,mBAAmBgC,GAClB,OAAO6R,OAAOjL,IAAI5G,EAAI,WAAY,GAClC,CAEDhC,eAAegC,GACd,OAAO6R,OAAOjL,IAAI5G,EAAI,OACtB,CAEGqI,YACH,OAAO5I,MAAK4I,CACZ,CAEG6qB,kBACH,OAAO3B,OAAOU,eAAexyB,KAC7B,CAEG0zB,iBACH,OAAO5B,OAAOW,cAAczyB,KAC5B,CAEG2zB,iBACH,OAAO7B,OAAOY,cAAc1yB,KAC5B,CAEGiE,WACH,OAAO6tB,OAAO8B,QAAQ5zB,KACtB,CAEG6zB,iBACH,OAAO/B,OAAOa,cAAc3yB,KAC5B,CAEG8zB,iBACH,OAAOhC,OAAOc,cAAc5yB,KAC5B,CAEG+zB,2BACH,OAAOjC,OAAOe,wBAAwB7yB,KACtC,CAEGqjB,aACH,OAAOyO,OAAOoB,UAAUlzB,KACxB,CAEG+yB,cACH,OAAOjB,OAAOgB,WAAW9yB,KACzB,CAEGgD,aACH,OAAO8uB,OAAOkB,UAAUhzB,KACxB,CAEGmT,aACH,OAAO2e,OAAOmB,UAAUjzB,KACxB,CAEGozB,aACH,OAAOtB,OAAOqB,UAAUnzB,KACxB,CAEGg0B,uBACH,OAAOh0B,KAAKU,QAAQ6R,IACpB,CAEGghB,iBACH,OAAOzB,OAAOwB,cAActzB,KAC5B,CAEG0nB,WACH,OAAOoK,OAAOK,QAAQnyB,KACtB,CAEGb,WACH,OAAO2yB,OAAOmC,QAAQj0B,KACtB,CAEG8H,UACH,OAAOgqB,OAAOoC,OAAOl0B,KACrB,CAEG2X,aACH,OAAOma,OAAOqC,UAAUn0B,KACxB,CAEGo0B,eACH,OAAOtC,OAAOG,YAAYjyB,KAC1B,CAEG0T,WACH,OAAOoe,OAAOuC,QAAQr0B,KACtB,CAEG+D,WACH,OAAO+tB,OAAOwC,QAAQt0B,KACtB,CAEGye,YACH,OAAOqT,OAAOyC,SAASv0B,KACvB,CAEGw0B,eACH,OAAO1C,OAAO2C,YAAYz0B,KAC1B,CAEGoY,WACH,MAAMrY,EAAKC,KACX,GAAKgM,OAAO6C,cAAc9O,EAAG0e,OAAQ,OAAO1e,EAAGZ,KAC/C,MAAMT,EAAKmN,KAAKnN,GAEhB,MAAO,cAAcA,MADXqB,EAAGy0B,SAAW,UAAY,yBACgBz0B,EAAG0e,mCAAmC/f,MAAOqB,EAAGZ,cACpG,CAED4qB,OAAOhM,GAAY,GAClB,OAAOtG,MAAM/E,OAAO1S,KAAM+d,EAC1B,EC1Ra,MAAM2W,gBAAgBp2B,YAEjC4G,cACIC,OACH,CAEDrF,oBAEI+L,KAAK8oB,MADM30B,KAEd,CAEDiB,uBACIjB,KAAKqR,OAAO/Q,QACf,CAMGsI,YACA,OAAOwJ,OAAOjL,IAAInH,KAAM,QAC3B,CAMGqR,YACA,OAAOoG,MAAM0E,MAAMjd,SAAS8c,gBAAiBhc,KAAK4I,MACrD,QAGGU,eAAeC,OAAO,WAAYmrB,SAClC5vB,OAAOC,KAAK2vB,QACf,ECnDU,MAAME,sBAEjBr2B,UAAsB,IAAI0W,IAE1BlC,IAEA7N,YAAY6N,GACR,MAAMhT,EAAKC,KACXD,GAAGgT,GAAQA,EACXhT,GAAGgT,GAAM8hB,cAAc90B,EAC1B,CAED+0B,gBACIF,uBAAsBG,GAAa1a,IAAIra,KAC1C,CAEDg1B,mBACIJ,uBAAsBG,GAAa3tB,OAAOpH,KAC7C,CAEDsB,kBAAkBnC,EAAMiC,EAAUC,GACjB,gBAATlC,GAAwBa,KAAKi1B,QACvC,CAEEA,SACF,MAAMl1B,EAAKC,MAAK+S,GACLhT,EAAGm1B,UAASn1B,EAAGo1B,mBAAqBp1B,EAAGq1B,MAAK,GAAQr1B,EAAGs1B,MAAK,GACpE,CAED92B,SAAiByF,GACbpE,uBAAsB,KAClBg1B,uBAAsBG,GAAatyB,SAAQkZ,GAAKA,EAAEsZ,UAAS,GAElE,QAGGzV,SAAS8V,OAAO9qB,OAAQob,OAAOzL,YAAa,SAAUya,uBAAsBzsB,EAC/E,ECTU,MAAMotB,kBAAkBj3B,YAEtCk3B,KAAS,EACTC,KAAW,EACXC,IAAW,KACXvP,IAAY,KAEZwP,KAAW,EACXC,IAAQ,KAERC,IACGC,IAAS,GAEZf,IAAe,KACfgB,IAAyB,KAEzB7wB,cACCC,QACAnF,MAAK+1B,GAAyB,IAAInB,sBAAsB50B,KACxD,CAEDzB,yBAAyBsU,GACxB,OAAOmC,OAAOghB,YAAYnjB,EAAY0iB,UAAU92B,mBAChD,CAMUA,gCACV,MAAO,CAAC,cAAe,KAAM,UAC7B,CAKGub,gBACH,OAAOha,KAAKkF,YAAY/F,IACxB,CAWGi1B,eACH,OAAOhiB,OAAOjL,IAAInH,KAAM,WAAY,GACpC,CAEGo0B,aAAShrB,GACZgJ,OAAOpL,IAAIhH,KAAM,WAAYoJ,EAC7B,CAKG6sB,aACG,OAAO,CACV,CAOA/D,aACH,OAAOlmB,OAAOkqB,MAAQ9jB,OAAOohB,UAAUxzB,KAAM,OAC7C,CAKGm2B,cACH,OAAOn2B,MAAK21B,EACZ,CAMG/sB,YACH,OAAOwJ,OAAOjL,IAAInH,KAAM,QACxB,CAUGo2B,kBACH,OAAOhkB,OAAOjL,IAAInH,KAAM,cAAe,GACvC,CAEGo2B,gBAAYhtB,GACfgJ,OAAOpL,IAAIhH,KAAM,cAAeoJ,EAChC,CAMGitB,SACH,OAAOjkB,OAAOjL,IAAInH,KAAM,KAAM,GAC9B,CAEGq2B,OAAGjtB,GACNgJ,OAAOpL,IAAIhH,KAAM,KAAMoJ,EACvB,CAOIktB,cACJ,OAAOlkB,OAAOjL,IAAInH,KAAM,UAAW,GACnC,CAEGs2B,YAAQltB,GACXgJ,OAAOpL,IAAIhH,KAAM,UAAWoJ,EAC5B,CAOIrH,eACJ,OAAOqQ,OAAOjL,IAAInH,KAAM,WAAY,GACpC,CAEG+B,aAASqH,GACZgJ,OAAOpL,IAAIhH,KAAM,WAAYoJ,EAC7B,CASG+Q,kBACH,OAAO/H,OAAOjL,IAAInH,KAAM,cAAe,GACvC,CAEGma,gBAAY/Q,GACfgJ,OAAOpL,IAAIhH,KAAM,cAAeoJ,EAChC,CAOGmtB,cACH,OAAOnkB,OAAOjL,IAAInH,KAAM,UAAW,GACnC,CAEGu2B,YAAQntB,GACXgJ,OAAOpL,IAAIhH,KAAM,UAAWoJ,EAC5B,CAOGotB,yBACH,OAAOnR,cAAcmR,mBAAmBx2B,KAAKo2B,YAC7C,CAMGK,gBACH,OAAOpR,cAAcK,SAAS1lB,KAAKq2B,GACnC,CAMGlB,yBACH,OAAO9P,cAAc8P,mBAAmBn1B,KAAKma,YAC7C,CAMGuc,qBACH,OAAOrR,cAAcqR,eAAe12B,KAAKs2B,QACzC,CAMIK,sBACJ,OAAOtR,cAAcsR,gBAAgB32B,KAAK+B,SAC1C,CAMGsP,YACH,OAAOgW,aAAaS,SAAS9nB,KAC7B,CAMGk1B,cACH,OAAOl1B,MAAKy1B,EACZ,CAMGmB,aACH,OAAQ52B,MAAKy1B,EACb,CAKGD,YACH,OAAOx1B,MAAKw1B,EACZ,CAQGpD,aACH,MACM5lB,EAAM,iBACZ,OAFWxM,KAED4I,MAAQ4D,EAAM4F,OAAOjL,IAAInH,KAAM,SAAUwM,EACnD,CAMG+D,WACH,MAAMxQ,EAAKC,KAKX,OAAOD,EAAGo2B,SAAWp2B,GAAG21B,cAAoBH,UAAYx1B,GAAG21B,GAASnlB,KAAOxQ,GAAG21B,EAC9E,CAKGmB,cACH,OAAO72B,KAAKmE,aAAa,UACzB,CAKG0yB,YAAQztB,GAAM,GACjBgJ,OAAO0kB,UAAU92B,KAAM,UAAWoJ,EAClC,CAEG6e,eACH,OAAOjoB,KAAKmE,aAAa,WACzB,CAKD4yB,WACC,MAAMh3B,EAAKC,MACPD,EAAGkoB,UAAaloB,EAAG6X,aACvB7X,EAAG6X,WAAWtQ,mBAAqBV,cAAcW,OACjDiY,SAASoC,KAAK1iB,SAASwU,KAAM,OAAQ3T,EAAG6X,YACxC,CAMDof,WACC,OAAO5kB,OAAOjL,IAAInH,KAAM,QAAS,GACjC,CAKGi3B,cACH,MAAO,GAAGj3B,KAAKoZ,WAAWpZ,KAAKtB,KAAKwX,mBACpC,CAEDghB,MACC,MAAMn3B,EAAKC,KACX4G,cAAcxB,WAAWrF,EAAGk3B,SAC5BrwB,cAAcf,QAAQ9F,EAAGk3B,QAASl3B,EAAGi3B,WACrC,CAODjb,QAAQI,EAAQ,IACf,OAAO1E,MAAMsE,QAAQ/b,KAAMmc,EAC3B,CAODhB,QAAQgB,EAAQ,IACf,OAAO1E,MAAM0D,QAAQnb,KAAMmc,EAC3B,CAODA,MAAMA,EAAQ,GAAInR,GAAS,GAC1B,MAAMjL,EAAKC,KACLO,EAAKkX,MAAM0E,MAAMpc,EAAGwQ,KAAM4L,GAAO,GAAO,GAC9C,OAAIpc,EAAGo2B,SAAW51B,EAAWA,EACtBkX,MAAM0E,MAAMpc,EAAIoc,GAAO,EAAOnR,EACrC,CAODoR,SAASD,EAAQ,GAAInR,GAAS,GAC7B,MAAMjL,EAAKC,KACLub,EAAO9D,MAAM2E,SAASrc,EAAGwQ,KAAM4L,GAAO,GAAO,GACnD,OAAIpc,EAAGo2B,SAAW5a,EAAKzc,OAAS,EAAUyc,EACnC9D,MAAM2E,SAASrc,EAAIoc,GAAO,EAAOnR,EACxC,CAQD9G,kBAAkBgK,EAAM,IACvB,GAAIA,EAAK,OAAOia,SAAS8J,YAAY/jB,GACrC,MAAM3N,EAAKP,KAAKmc,MAAM,YACtB,OAAO5b,EAAKA,EAAGkc,UAAY,EAC3B,CAMD4Y,KAAKlb,GAAc,GAClB,OAAO1C,MAAM4d,KAAKr1B,KAAMma,EACxB,CAMDib,KAAKjb,GAAc,GAClB,OAAO1C,MAAM2d,KAAKp1B,KAAMma,EACxB,CAUD0K,KAAK1lB,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACpE,OAAOigB,SAASoC,KAAK5hB,KAAMb,EAAMC,EAAKC,EAASC,EAAUC,EACzD,CAQD43B,UAAUh4B,EAAO,GAAIkQ,EAAU,GAC9B,OAAOmQ,SAASW,KAAKngB,KAAMb,EAAMkQ,EACjC,CAODiR,KAAKnhB,EAAMwqB,GACV,OAAO3pB,KAAK2f,OAAOxgB,EAAMwqB,GAAM,EAC/B,CAQDrV,GAAGnV,EAAMwqB,EAAMrJ,GAAO,GACrB,OAAOtgB,KAAK2f,OAAOxgB,EAAMwqB,EAAMrJ,EAC/B,CAQDsE,IAAIzlB,EAAMwqB,GACT,OAAO3pB,KAAK0gB,SAASvhB,EAAMwqB,EAC3B,CAQDhK,OAAOxgB,EAAMwqB,EAAMrJ,GAAO,GACzB,OAAOtgB,KAAKo3B,YAAYp3B,KAAMb,EAAMwqB,EAAMrJ,EAC1C,CAQDI,SAASvhB,EAAMwqB,GACd,OAAO3pB,KAAKq3B,YAAYr3B,KAAMb,EAAMwqB,EACpC,CAWDyN,YAAY72B,EAAIpB,EAAO,GAAIsM,EAAI6U,GAAO,GACrC,OAAOd,SAAS8V,OAAOt1B,KAAMO,EAAIpB,EAAMsM,EAAI6U,EAC3C,CASD+W,YAAY92B,EAAIpB,EAAO,GAAIsM,GAC1B,OAAO+T,SAASlf,OAAON,KAAMO,EAAIpB,EAAMsM,EACvC,CAKG6rB,oBACH,MAAMv3B,EAAKC,KACX,OAAOD,EAAGy2B,oBAAsBz2B,EAAG22B,gBAAkB32B,EAAG02B,WAAa12B,EAAG42B,eACxE,CAKD72B,oBACC,MAAMC,EAAKC,KAEX,IAAID,GAAGw3B,KAAP,CAEA,IAAKx3B,EAAGu3B,cACP,OAAOv3B,EAAGO,SAGXuL,KAAK8oB,MAAM50B,GACXA,GAAG61B,GAAQ71B,GAAGy3B,KACdz3B,GAAG41B,GAAW51B,GAAG61B,GAAM6B,IACvBpQ,aAAatgB,MAAMhH,GACnBA,GAAGg1B,IAActyB,SAASkZ,GAAMA,EAAEmZ,oBAClCl1B,uBAAsB,IAAMG,GAAGS,MAXJ,CAY3B,CAKDS,uBACC,MAAMlB,EAAKC,KACXD,GAAG01B,IAAW,EACd11B,GAAGg1B,IAActyB,SAASkZ,GAAMA,EAAEqZ,uBAClCj1B,GAAGomB,IAAWuR,aACdrQ,aAAa/mB,OAAOP,GACpByf,SAASmY,kBAAkB53B,GAC3B6G,cAAcxB,WAAWrF,EAAGk3B,SAC5Bl3B,GAAG63B,KACH73B,GAAGomB,GAAY,KACfpmB,GAAG21B,GAAW,KACd31B,GAAG61B,GAAQ,KACX71B,GAAGg1B,GAAe,IAClB,CAEEF,cAAclQ,GACV,MAAM5kB,EAAKC,MACVD,GAAGg1B,KAAiB,IAAI9f,KAAOoF,IAAIsK,GAChC5kB,EAAGgiB,kBAA2Bve,IAAZzD,EAAGwQ,MACrBoU,EAAWmQ,iBAElB,CAED+C,iBAAiBlT,GACb3kB,MAAK+0B,IAAc3tB,OAAOud,EAC7B,CAKJmT,UACC,MAAM/3B,EAAKC,KACXD,EAAGkB,uBACHlB,GAAG01B,IAAW,EACd11B,GAAGy1B,IAAS,EACZz1B,EAAGD,mBACH,CASDqB,yBAAyBhC,EAAMiC,EAAUC,GACxC,MAAMtB,EAAKC,KAELD,GAAG+1B,GAAOxe,KAAK/F,WACXxR,GAAG81B,KACP91B,GAAG81B,IAAU,EACb1jB,gBAAe,KACpBqN,SAASuY,oBAAmB,KAC3B,KAAOh4B,GAAG+1B,GAAOh3B,OAAS,GACzB,IACCiB,GAAGi4B,MAAwBj4B,GAAG+1B,GAAO5hB,QACrC,CAAC,MAAMlQ,GAEP,CAEFjE,GAAG81B,IAAU,CAAK,GACjB,IAEH,CAEDmC,IAAqB74B,EAAMiC,EAAUC,GACpC,MAAMtB,EAAKC,KACE,OAATb,IACHkoB,aAAa/mB,OAAOc,GACpBimB,aAAatgB,MAAMhH,IAEP,YAATZ,GAAoBsY,MAAMmF,YAAY7c,EAAI,UAAwB,UAAbsB,GAEzDtB,EAAGuB,kBAAkBnC,EAAMiC,EAAUC,GACrCtB,GAAGg1B,IAActyB,SAASkZ,GAAMA,EAAEra,uBAClC,CAQDA,kBAAkBnC,EAAMiC,EAAUC,GAEjC,CAMD42B,UAEC,CAMD/zB,sBACC,CAEDA,WACC,MAAMnE,EAAKC,KACX,IAAID,GAAGy1B,KACHz1B,EAAGm1B,QAAP,CACAn1B,GAAGy1B,IAAS,QACNz1B,EAAGm4B,gBACT,IACCn4B,GAAGg1B,IAActyB,SAASkZ,GAAMA,EAAEsc,cAClCvnB,EAAW0P,aAAargB,EAAGw2B,QAASx2B,GACpCA,EAAG8kB,KAAK,SACRrF,SAASoC,KAAK1iB,SAASwU,KAAM,iBAAkB3T,EAClD,CAAY,QACTA,EAAGk4B,SACH,CAVsB,CAWvB,CAEDV,MACC,MACMY,EAAK9Q,aAAaS,SADb9nB,KAC0Bu1B,WACrC,OAAO4C,GAAMA,EAAGhC,OAChB,CAMGnrB,SACH,MAAMjL,EAAKC,KAMX,OALKD,EAAG6X,aACP7X,EAAGq4B,aAAa,CAAEC,KAAM,SACxBt4B,GAAGomB,GAAYL,cAAc7e,OAAOlH,GAAGiL,IACvCjL,EAAGg3B,YAEGh3B,EAAG6X,UACV,CAEG0gB,SACH,MAAMv4B,EAAKC,KACX,OAAQD,GAAG41B,IAAY51B,EAAGmyB,SAAYnyB,GAAG41B,EACzC,CAODzxB,WAEC,MAAMnE,EAAKC,KAEX,GAAID,EAAGm1B,QAAS,OAEhB,MAAMqD,EAASx4B,GAAGu4B,GACZztB,EAAM0tB,QAAex4B,EAAGkyB,YAAYlyB,EAAGq0B,UAAYr0B,EAAGy4B,gBAEtDhZ,SAASuY,oBAAmB,KAEjC,GAAIh4B,EAAGm1B,QAAS,OAEhBn1B,GAAGm3B,KACH,MAAM9D,EAASrzB,GAAG61B,GAElB,GAAI71B,GAAG41B,GAUN,OATI4C,EACHx4B,GAAG21B,GAAW31B,EAAGk2B,OAASxe,MAAMghB,aAAa14B,EAAI8K,GAAK,GAAQ4M,MAAM3J,MAAMjD,GAAK,IAE/E9K,GAAG21B,GAAWje,MAAM3J,MAAMjD,GAAK,GAC/B9K,GAAG21B,GAASh3B,GAAKqB,EAAGrB,GACpBqB,EAAGrB,GAAKmN,KAAKnN,IAEd+Y,MAAMwB,KAAKlZ,EAAIA,GAAG21B,SAClBje,MAAMihB,eAAetF,EAAOpwB,OAAQjD,GAAG21B,GAAUtC,EAAOhB,QAIzD,GAAIgB,EAAOpwB,SAAWjD,EAAtB,CAiBA,GAAIqzB,EAAOpwB,SAAWjD,EAAGyb,cAGxB,OAFAzb,GAAG21B,GAAW31B,EAAGmyB,OAASnyB,EAAKA,GAAGiL,QAClCyM,MAAM+E,QAAQzc,GAAG21B,GAAU7qB,GAI5B9K,GAAG21B,GAAWje,MAAMghB,aAAa14B,EAAI8K,GAAK,GAC1C4M,MAAMwB,KAAKlZ,EAAIA,GAAG21B,IAClBje,MAAMihB,eAAetF,EAAOpwB,OAAQjD,GAAG21B,GAAUtC,EAAOhB,OAXvD,MAbA,GAAIryB,EAAGmyB,OACN,GAAIrnB,EAAK,CACR,MAAMwD,EAAMoJ,MAAMghB,aAAa14B,EAAI8K,GAAK,GACxC9K,GAAG21B,GAAWrnB,EACdoJ,MAAMihB,eAAetF,EAAOpwB,OAAQqL,EAAK+kB,EAAOhB,OACtD,MACMryB,GAAG21B,GAAW31B,OAGfA,GAAG21B,GAAW31B,GAAGiL,GACjByM,MAAM+E,QAAQzc,GAAG21B,GAAU7qB,EAckC,IAGhE9K,EAAGg3B,UACH,CAEDS,MAEC,MAAMz3B,EAAKC,KACLqO,EAAMtO,EAAGqyB,OACT/b,EAAMhI,EAAIoH,QAAQ,KAExB,IAAI2c,EAAS/b,EAAM,EAAIhI,EAAI/D,MAAM,EAAG+L,GAAOhI,EACvCrL,EAASqT,EAAM,EAAIhI,EAAI/D,MAAM+L,EAAM,GAAK,OAE7B,SAAX+b,GAAgC,WAAXA,IACxBpvB,EAASA,GAAkBovB,EAC3BA,EAAS,MAGVA,EAASpmB,OAAO4B,UAAUwkB,EAAQ,aAClCpvB,EAASgJ,OAAO4B,UAAU5K,EAAQ,QAElC,IAAIzC,EAAK,KACT,OAAQyC,GACP,IAAK,OACJzC,EAAKR,EACL,MACD,IAAK,SACJQ,EAAKR,EAAGyb,cACR,MACD,QACCjb,EAAKkX,MAAM0E,MAAMpc,EAAGsR,MAAOrO,IAAWyU,MAAM0E,MAAMjd,SAAS8c,gBAAiBhZ,GAG9E,IAAKzC,EAAI,CACR,MAAM2K,EAAM,4CAA4CnL,EAAGqZ,eAAerZ,EAAGrB,WAAWsE,IAExF,MADAiI,MAAM0N,MAAM5Y,EAAImL,GACV,IAAIU,MAAMV,EAChB,CAID,MAAO,CACNknB,OAAQA,EACRpvB,OAAQzC,EACRk3B,MALal3B,IAAOR,GAAMQ,IAAOR,EAAGyb,eAOrC,CAEDoc,MACC,MAAM73B,EAAKC,KACPD,GAAG21B,IAAY31B,GAAG21B,GAASp1B,SAC9BP,GAAG21B,GAASp1B,SACZP,GAAG21B,GAAW,KAEf,CAQDxxB,WACC,MAAMnE,EAAKC,WACLD,GAAG44B,KACTnZ,SAASuY,oBAAmB,IAAMh4B,GAAG64B,OAAY,EACjD,CASAr6B,cAAcY,EAAM8Q,EAAO+C,GAC3B,IAAI1J,eAAenC,IAAIhI,GACvB,OAAImK,eAAeuvB,SAAiBvvB,eAAeuvB,SAAS15B,EAAM8Q,EAAO+C,GAClE1J,eAAeC,OAAOpK,EAAM8Q,EAAO+C,EAC1C,QAGA1J,eAAeC,OAAO,aAAcgsB,WAC/BjsB,eAAeuvB,WACnBvvB,eAAeuvB,SAAWvvB,eAAeC,OACzCD,eAAeC,OAASgsB,UAAUhsB,OAClCzE,OAAOiD,OAAOuB,gBAEf,EC7yBa,MAAMwvB,eAAex6B,YAEhCC,UAAe,WAEfA,WAAe,EACfiP,IAAa,IAAI3G,IAEjB+b,GAAS,IAAI3N,IACb8jB,KAAW,EAEXC,IAAY,EACZC,KAAe,EACfvzB,IAAU1F,MAAKk5B,GAAU1wB,KAAKxI,MAC9BmI,GAAYnI,MAAKm5B,GAAY3wB,KAAKxI,aAG9BsJ,eAAeC,OAAO,UAAWuvB,QACjCh0B,OAAOC,KAAK+zB,QACZ55B,SAASwU,KAAKjJ,iBAAiB,QAASzG,IAChC80B,OAAOM,SAASN,OAAOM,QAAQC,aAAar1B,EAAEtE,OAAO,GAEhE,CAEUjB,gCACP,MAAO,CAAC,OAAQ,OACnB,CAEU26B,qBACP,OAAON,QAAOQ,EACjB,CAEDp0B,cACIC,OACH,CAEDrF,oBACI,MAAMC,EAAKC,KAGX,GAFA6L,KAAK8oB,MAAM50B,GACXA,GAAGk5B,KAAe5R,aAAaE,KAAKvnB,KAAKoZ,SACrCrZ,GAAGk5B,GAAc,OAAOhuB,MAAM0N,MAAM,KAAM,GAAG5Y,EAAGqZ,eAAerZ,EAAGrB,8DACtEo6B,QAAOQ,GAAQv5B,EACfsnB,aAAatgB,MAAMhH,GACnBA,GAAGw5B,IACN,CAEDt4B,uBACI,MAAMlB,EAAKC,KACXyI,cAAc1I,GAAGi5B,IACjBlT,cAAc0T,iBAAiBz5B,GAAG2F,GAAS3F,GAAGoI,GAC9Ckf,aAAa/mB,OAAOP,GACpBA,GAAGyN,GAAWsV,QACd/iB,GAAGyN,GAAa,KAChBzN,GAAGoI,EAAY,KACfpI,GAAG2F,GAAU,KACR3F,GAAGk5B,KAAcH,QAAOQ,GAAQ,KACxC,CAEDn4B,yBAAyBhC,EAAO,GAAIs6B,EAAS,GAAIC,EAAS,IACtD15B,MAAK25B,GAAkBx6B,EAAMs6B,EAAQC,EACxC,CAEDx1B,SAAwB/E,EAAO,GAAIs6B,EAAS,GAAIC,EAAS,IAErD,MAAM35B,EAAKC,KAEE,SAATb,IACKY,GAAGyN,GAAWmQ,IAAI+b,UACb35B,GAAGqpB,GAAMsQ,GAEnB35B,EAAGs5B,aAAan6B,SAAS8c,gBAAiBjc,EAAG65B,OAGpC,SAATz6B,GACAY,GAAGw5B,IAEV,CAEDM,IAAiBt5B,GACb,QAAUA,aAAcu5B,mBACjBv5B,aAAcmJ,kBACdnJ,aAAc2H,iBACd3H,aAAcw5B,iBACdx5B,aAAcwZ,QACxB,CAEDmf,IAAU34B,GAEN,MACM4Y,EAAS5Y,aAAcuZ,KAE7B,GAAIX,GAA0C,GAAhC5Y,EAAGoc,YAAYtW,OAAOvH,OAAa,OAAO,EAExD,MAAMyM,EAAM4N,EAAS5Y,EAAGib,cAAgBjb,EACxC,OANWP,MAMD65B,GAAiBtuB,IANhBvL,MAM2Bg6B,GAAgBzuB,EACzD,CAEDyuB,IAAgBz5B,GACZ,MAAuC,UAAhC6R,OAAOjL,IAAI5G,EAAI,YACzB,CAED44B,IAAY54B,GACGP,MACR4iB,EAAOvI,IAAI9Z,EACjB,CAED05B,MACI,MAAMl6B,EAAKC,KACPD,GAAGg5B,IACgB,IAAnBh5B,GAAG6iB,EAAOD,MACd/iB,uBAAsB,KAClB,IACIyF,MAAMC,KAAKvF,GAAG6iB,GAAQngB,SAAQlC,IAC1BR,GAAG6iB,EAAOxb,OAAO7G,GACjBR,GAAGm6B,GAAa35B,EAAG,GAE1B,CAAC,MAAOyD,GACLiH,MAAM0N,MAAM5Y,EAAIiE,EACnB,IAER,CAEDk2B,IAAa35B,GACT,MAAMR,EAAKC,KACX,GAAID,GAAGg5B,GAAW,EAAG,OAAOh5B,GAAG6iB,EAAOvI,IAAI9Z,GAC1C,GAAIA,IAAOrB,SAAS8c,gBAChBjc,EAAGs5B,aAAa94B,EAAIR,EAAG65B,UACpB,CACar5B,aAAcuZ,KACrB/Z,GAAGo6B,GAAiB55B,GAAMR,GAAGq6B,GAAkB75B,EAC3D,CACGA,EAAGqX,YAAY7X,EAAGs5B,aAAa94B,EAAGqX,WAAY7X,EAAG65B,KACxD,CAEDQ,IAAkB75B,GACd,MAAMR,EAAKC,KACXD,EAAGwb,KAAK9Y,SAAQ8P,GAAQxS,GAAGs6B,GAAiB95B,EAAIgS,IACnD,CAED8nB,IAAiB95B,EAAIpB,GAEjB,MAEMm7B,EAAQ,eAAen7B,IAE7B,IAAIo7B,EAAOnoB,OAAOjL,IAAI5G,EAAI+5B,GACtBlxB,EAAMgJ,OAAOjL,IAAI5G,EAAIpB,GAErBo7B,EACAnxB,EAAMmxB,EACCnxB,GACPgJ,OAAOpL,IAAIzG,EAAI+5B,EAAOlxB,GAGtBA,GAAKgJ,OAAOpL,IAAIzG,EAAIpB,EAbba,KAasBw6B,UAAUpxB,GAC9C,CAED+wB,IAAiB55B,GAEbA,EAAGk6B,OAASl6B,EAAGk6B,QAAUl6B,EAAGoc,YAC5Bpc,EAAGoc,YAFQ3c,KAESw6B,UAAUj6B,EAAGk6B,OACpC,CAEDv2B,SAAYw2B,EAAO,IAEf,MAAM36B,EAAKC,KACLqpB,EAAU,CACZ,gBAAiB,WACjBsR,OAAU,YAGd,IAAI3wB,EAAM,KACV,IACIjK,GAAGg5B,KACH,MAAM94B,EAAMkoB,SAASc,aAAa,GAAGlpB,EAAGE,OAAOy6B,UAI/C,GAFA1wB,QAAYme,SAASiB,KAAKnpB,EAAK,MAAOopB,GAAS,IAC1Crf,GAAO0wB,EAAKjlB,QAAQ,KAAO,IAAGzL,QAAYjK,GAAGqpB,GAAMsR,EAAKt0B,MAAM,KAAK,MACnE4D,EAAK,OAAO,EACjBjK,GAAGgH,EAAO2zB,EAAM1wB,EAE5B,CAAkB,QACNjK,GAAGg5B,IACN,CAID,OAFKh5B,EAAG65B,MAAM75B,GAAGk6B,MAEV,CACV,CAWDlzB,GAAO2zB,EAAMt7B,GACT,IAAMA,IAAOs7B,EAAO,OAAO,EAC3B,MAAMl1B,EAAMxF,MAAK46B,GAAaF,GAK9B,OAJA51B,OAAOwB,QAAQlH,GAAKqD,SAAS8D,IACzB,MAAMs0B,EAAKhvB,KAAKzL,SAASmG,EAAG,IAC5Bf,EAAIwB,IAAI6zB,EAAIt0B,EAAG,GAAG,KAEf,CACV,CAODq0B,IAAaxxB,EAAM,IACf,MAAMrJ,EAAKC,KAKX,OAJKD,GAAGyN,GAAWmQ,IAAIvU,KACnBrJ,GAAGyN,GAAWxG,IAAIoC,EAAK,IAAIvC,KAC3B9G,GAAGqpB,GAAMhgB,IAENrJ,GAAGyN,GAAWrG,IAAIiC,EAC5B,CAEDmwB,MACI,MAAMx5B,EAAKC,KACPD,EAAG65B,MACH9T,cAAcgV,eAAe/6B,GAAG2F,GAAS3F,GAAGoI,GAC5CpI,GAAGi5B,GAAY1wB,YAAYvI,GAAGk6B,GAAYzxB,KAAKzI,GAAK,OAEpD+lB,cAAc0T,iBAAiBz5B,GAAG2F,GAAS3F,GAAGoI,GAC9CM,cAAc1I,GAAGi5B,IAExB,CAQDK,aAAa94B,EAAIq5B,GAAO,GAEpB,MAAM75B,EAAKC,KAEPO,IAAOrB,SAAS8c,iBAAiBjc,GAAG6iB,EAAOvI,IAAI9Z,GACnD8E,MAAMC,KAAK/E,EAAG0Z,YACTvU,QAAOnF,GAAMR,GAAGm5B,GAAU34B,KAC1BkC,SAAQlC,GAA8B,GAAxBA,EAAG0Z,WAAWnb,OAAciB,GAAG6iB,EAAOvI,IAAI9Z,GAAMR,EAAGs5B,aAAa94B,GAAI,KAElFq5B,GAAM75B,GAAGk6B,IACjB,CAUDO,UAAUpxB,GAEN,GAAI4C,OAAO6C,cAAczF,GAAM,OAAOA,EAEtC,MAAMrJ,EAAKC,KAEX,IAAIuL,EAAMnC,EACN2M,EAAM,KACN/L,EAAM,KACNwL,EAAM,KAGV,IADAsjB,QAAOiC,GAAMC,WAAa,EACgB,QAAlCxlB,EAAMsjB,QAAOiC,GAAM3T,KAAKhe,KAC5B2M,EAAMP,EAAI,GACVxL,EAAMjK,EAAGwnB,KAAKxR,EAAIzL,MAAM,GAAI,IAC5BiB,EAAMA,EAAItJ,QAAQ8T,EAAK/L,GAG3B,OAAOuB,CACV,CASDgc,KAAKne,GACD,MACM6xB,EAAKpvB,KAAKzL,SAASgJ,GACzB,OAFWpJ,MAED46B,GAFC56B,KAEe06B,MAAMvzB,IAAI8zB,IAAO7xB,CAC9C,CAMGwwB,WACA,OAAOxnB,OAAOohB,UAAUxzB,KAAM,QAAQ,EACzC,CAEG45B,SAAKxwB,EAAM,IACXgJ,OAAO0kB,UAAU92B,KAAM,OAAQoJ,EAClC,CAKGgwB,cACA,OAAOhnB,OAAOjL,IAAInH,KAAM,UAAWd,SAAS8c,gBAAgB0e,MAAQl5B,UAAU+L,SACjF,CAEG6rB,YAAQhwB,EAAM,IACdgJ,OAAOpL,IAAIhH,KAAM,UAAWoJ,EAC/B,CAKGsxB,WACA,OAAOtoB,OAAOjL,IAAInH,KAAM,OAAQA,KAAKo5B,QACxC,CAEGsB,SAAKtxB,EAAM,IACXgJ,OAAOpL,IAAIhH,KAAM,OAAQoJ,EAC5B,CAKGmS,WAEA,OADYnJ,OAAOjL,IAAInH,KAAM,OAAQ,8BAC1BoG,MAAM,IACpB,CAEGmV,SAAKnS,EAAM,IACXA,EAAM/D,MAAMoI,QAAQrE,GAAOA,EAAIL,KAAK,KAAOK,EAC3CgJ,OAAOpL,IAAIhH,KAAM,OAAQoJ,EAC5B,CAKGnJ,UACA,OAAOmS,OAAOjL,IAAInH,KAAM,MAAO,GAAGgC,SAASqB,eAC9C,CAEGpD,QAAImJ,EAAM,IACVgJ,OAAOpL,IAAIhH,KAAM,MAAOoJ,EAC3B,ECtWU,MAAM8xB,WAEjB11B,GAAO,KAEPN,YAAY0O,GACR,IAAK6D,MAAMpF,cAAcuB,GAAU,MAAM,IAAIhI,MAAM,kCACnD5L,MAAKwF,EAAO,IAAIiO,SAASG,EAC5B,CAEDgW,IAAQuR,GACJ,OAAOzqB,EAAWoQ,YAAY9gB,MAAKwF,EAAM21B,EAC5C,CAEDh0B,IAAIi0B,EAAQD,EAAU9e,GAClB,MAAO,CAACja,EAAOoK,KACX,MAAMzM,EAAKC,KACX,OAAIgM,OAAOiL,OAAO7U,GAAerC,GAAGyF,EAAK2B,IAAIg0B,GACzCp7B,GAAG6pB,GAAQuR,GAAkBp7B,GAAGyF,EAAK21B,GAAU/4B,EAAOoK,IAC1D4uB,EAAOD,GAAY/4B,EACZia,EAAQ,CAEtB,CAED9d,YAAYqV,GACR,OAAO,IAAIX,MAAMW,EAAQ9N,MAAO,IAAIo1B,WAAWtnB,GAClD,ECfU,MAAMynB,QAEjBvzB,GAAO,KAEP5C,YAAY0O,GACHvO,MAAMoI,QAAQmG,KAAU5T,MAAK8H,EAAOozB,WAAWliB,KAAKpF,GAC5D,CAEDzM,IAAIi0B,EAAQD,GACR,MAAiB,QAAbA,EAA2Bn7B,MAAK8H,EACnB,UAAbqzB,EACO,CAAC/4B,EAAOyS,EAAK7J,KAChB,MAAMzK,EAAKkX,MAAM0E,MAAMif,EAAQh5B,EAAOyS,EAAK7J,GAC3C,OAAOqwB,QAAQriB,KAAKzY,EAAG,EAGd,aAAb46B,EACO,CAAC/4B,EAAOyS,EAAK7J,KAChB,MAAMzK,EAAKkX,MAAM2E,SAASgf,EAAQh5B,EAAOyS,EAAK7J,GAC9C,OAAOqwB,QAAQriB,KAAKzY,EAAG,EAGxB66B,EAAOD,EACjB,CAEDn0B,IAAIo0B,EAAQD,EAAU/4B,GAClB,GACS,QADD+4B,EAEI91B,MAAMoI,QAAQ2tB,GACdA,EAAO34B,SAAQmR,GAAWA,EAAQunB,GAAY/4B,IAE9CqV,MAAM3P,IAAIszB,EAAQh5B,QAItBg5B,EAAOD,GAAY/4B,EAE3B,OAAO,CACV,CAED7D,gBAAgB2c,GACZ,OAAO,IAAIjI,MAAMiI,EAAM,IAAImgB,QAAQngB,GACtC,CAED3c,YAAY2c,GACR,OAAIzD,MAAMpF,cAAc6I,GAAcmgB,QAAQC,SAASpgB,GAClD7V,MAAMoI,QAAQyN,IACnBA,EAAOA,EAAK1V,KAAIoO,GAAWynB,QAAQC,SAAS1nB,KACrCynB,QAAQC,SAASpgB,IAFSA,CAGpC,CAED3c,WAAWqS,EAAKsL,EAAKrH,EAAK7J,GACtB,OAAOqwB,QAAQriB,KAAKvB,MAAM2E,SAASxL,EAAKsL,EAAKrH,EAAK7J,GACrD,CAEDzM,aAAaqS,EAAKsL,EAAKrH,EAAK7J,GACxB,OAAOqwB,QAAQriB,KAAKvB,MAAM0E,MAAMvL,EAAKsL,EAAKrH,EAAK7J,GAClD,QAGGlG,OAAOiD,OAAOszB,SACd32B,WAAW22B,QAAUA,OACxB,ECtEU,MAAME,UAEjBC,IAAS,EACTC,IAAS,EACTC,IAAS,KACTC,IAAS,KACT/nB,IAAW,KACXgoB,IAAY,KAEZC,KAAS,EACTC,KAAO,EACPC,KAAa,EAGbC,IAAS,EAGTz9B,eAAiB,KASjB2G,YAAY0O,EAASioB,EAAOC,EAAKC,GAC7B,MAAMh8B,EAAKC,KACXD,GAAG87B,GAASA,EACZ97B,GAAG+7B,GAAOA,EACV/7B,GAAGg8B,GAAaA,EAChBh8B,GAAG27B,GAAS,KACZ37B,GAAG47B,GAAS,KACZ57B,GAAG6T,GAAgC,iBAAb,EAAwB1U,SAASmB,cAAcuT,GAAWA,EAEhF7T,GAAG67B,GAAY,CACXK,KAAOl8B,GAAGm8B,GAAiB1zB,KAAKzI,GAChCo8B,MAAQp8B,GAAGq8B,GAAkB5zB,KAAKzI,GAClCs8B,IAAMt8B,GAAGu8B,GAAgB9zB,KAAKzI,IAElCyf,SAAS8V,OAAOv1B,GAAG6T,GAAU7T,GAAG6T,GAAU,YAAa7T,GAAG67B,GAAUK,MAAM,GAC1Ezc,SAAS8V,OAAOv1B,GAAG6T,GAAU7T,GAAG6T,GAAU,aAAc7T,GAAG67B,GAAUO,OAAO,GAC5E3c,SAAS8V,OAAOv1B,GAAG6T,GAAU7T,GAAG6T,GAAU,WAAY7T,GAAG67B,GAAUS,KAAK,EAC3E,CAKDtX,SACI,MAAMhlB,EAAKC,KACXwf,SAASlf,OAAOP,GAAG6T,GAAU7T,GAAG6T,GAAU,YAAa7T,GAAG67B,GAAUK,MACpEzc,SAASlf,OAAOP,GAAG6T,GAAU7T,GAAG6T,GAAU,aAAc7T,GAAG67B,GAAUO,OACrE3c,SAASlf,OAAOP,GAAG6T,GAAU7T,GAAG6T,GAAU,WAAY7T,GAAG67B,GAAUS,IACtE,CAEDD,IAAkBlb,GACd,MAAMnhB,EAAKC,KACXD,GAAG27B,GAASxa,EAAIqb,QAAQ,GAAGC,QAC3Bz8B,GAAG47B,GAASza,EAAIqb,QAAQ,GAAGE,QACvB18B,GAAGg8B,IAAYtsB,WAAW1P,GAAG28B,GAAal0B,KAAKzI,GAAKw7B,UAAUlsB,QACrE,CAEDitB,IAAgBpb,GACZxR,aAAa1P,MAAKg8B,GACrB,CAEDE,IAAiBhb,GAEb,MAAMnhB,EAAKC,KAEX,IAAKD,GAAG27B,KAAW37B,GAAG47B,GAClB,OAGJ,IAAK57B,GAAG87B,GAAQ,OAEhB,MAAMc,EAAMzb,EAAIqb,QAAQ,GAAGC,QACrBI,EAAM1b,EAAIqb,QAAQ,GAAGE,QAE3B,GAAI18B,GAAGg8B,GAAY,CACE5uB,KAAKohB,IAAIxuB,GAAGy7B,IAAU,IAAOruB,KAAKohB,IAAIxuB,GAAG07B,IAAU,IACtD/rB,aAAa3P,GAAGi8B,GACjC,CAEDj8B,GAAGy7B,GAASz7B,GAAG27B,GAASiB,EACxB58B,GAAG07B,GAAS17B,GAAG47B,GAASiB,EAKxB,IAAIz9B,EAAO,GAEPA,EAJiBgO,KAAKohB,IAAIxuB,GAAGy7B,IAAUruB,KAAKohB,IAAIxuB,GAAG07B,IAI5C17B,GAAGy7B,GAAS,EAAI,aAAe,cAE/Bz7B,GAAG07B,GAAS,EAAI,WAAa,aAGxCjc,SAASoC,KAAK7hB,GAAG6T,GAAUzU,EAAM+hB,GAGjCnhB,GAAG27B,GAAS,KACZ37B,GAAG47B,GAAS,IACf,CAEDe,MACIld,SAASoC,KAAK7hB,IAAG6T,GAAU,aAC9B,CAODrV,eAAeyF,GACjB,OAAOA,EAAEtE,OAAO68B,SAASz9B,MACzB,CAOEP,cAAcqV,EAASioB,GAAQ,EAAMC,GAAM,EAAOC,GAAY,GAC1D,OAAO,IAAIR,UAAU3nB,EAASioB,EAAOC,EAAKC,EAC7C,EC1HL,MAAMc,gCAAgCvY,QAElC/lB,UAAmB,KACnBA,UAAmB4S,SACnB3L,GAAO,IAAIqB,IAEX3B,YAAY6Q,GACR,GAAIA,GAAO8mB,yBAAwBC,GAAW,MAAM,IAAIlxB,MAAM,sCAC9DzG,OACH,CAMD8f,SAAS7lB,GACL,MAAMW,EAAKC,KACXD,GAAGg9B,GAAQ39B,GACX,MAAMwjB,EAAQ7iB,EAAGwnB,KAAKnoB,EAAIV,IAC1B,GAAIkkB,GAASxjB,EAAb,CACA,GAAIwjB,EAAO,MAAM,IAAIhX,MAAM,QAAQxM,EAAIV,6CACvCqB,GAAGyF,EAAKwB,IAAI5H,EAAIV,GAAIU,GACpBW,EAAG8kB,KAAK,YAAYzlB,EAAIV,KAAMU,GAC9BW,EAAG8kB,KAAK,WAAYzlB,EAJK,CAK5B,CAOD49B,WAAW59B,GACP,MAAMW,EAAKC,KACPgM,OAAO2C,SAASvP,KAAMA,EAAMW,EAAGwnB,KAAKnoB,IACxCW,GAAGg9B,GAAQ39B,GACX,MAAMmD,EAAMxC,GAAGyF,EAAK4B,OAAOhI,EAAIV,IAK/B,OAJI6D,IACAxC,EAAG8kB,KAAK,cAAczlB,EAAIV,KAAMU,GAChCW,EAAG8kB,KAAK,aAAczlB,IAEnBmD,CACV,CAODglB,KAAKne,GACD,OAAOpJ,MAAKwF,EAAK2B,IAAIiC,EACxB,CASDlF,WAAWxF,EAAK,GAAIyQ,EAAQ8V,GAAW,GACnC,IAAKvmB,EAAI,MAAM,IAAIkN,MAAM,6BACzB,MAAM7L,EAAKC,KACX,GAAIilB,EAAU,CACV,MAAMgY,EAAKl9B,EAAGwnB,KAAK7oB,GACnB,GAAIu+B,EAAI,OAAOA,CAClB,CACD,MAAMh5B,EAAOghB,EAAW,WAAa,aAErC,aADM9f,MAAMgb,KAAK,GAAGlc,KAAQvF,IAAMyQ,GAC3BpP,EAAGwnB,KAAK7oB,EAClB,CAEDq+B,IAAQ39B,GAEP,CAEUmR,gBAEP,OADKssB,yBAAwBvB,KAAWuB,yBAAwBvB,GAAY,IAAIuB,wBAAwBA,yBAAwBC,KACzHD,yBAAwBvB,EAClC,QAGGx2B,OAAOC,KAAK83B,yBACZn4B,WAAWw4B,oBAAsBL,yBAAwBtsB,EAC5D,EAIC,MAAC2sB,EAAsBx4B,WAAWw4B,oBCrFzB,MAAMC,4BAA4B7Y,QAE7C5lB,GAAM,KAENwG,YAAY/F,EAAMi+B,GAAU,GACxBj4B,QACWnF,MACRtB,EAAMS,GAAQ0M,KAAKE,OAClBqxB,GAFOp9B,KAEKq9B,QACnB,CAMG3+B,SACA,OAAOsB,MAAKtB,CACf,CAKD2+B,SAEIH,EAAoBjY,SADTjlB,WAER6kB,KAAK,UACX,CAKDyY,UAEIJ,EAAoBF,WADTh9B,WAER6kB,KAAK,WACX,CAMG0Y,mBACA,QAAOL,EAAoB3V,KAAKvnB,KAAKtB,GACxC,CAODwF,WAAWmN,GACP,MAAMtR,EAAKC,KACX,IAAIkG,EAAO,KACX,IACIA,QAAanG,EAAGy9B,OAAOnsB,GACnBnL,GAAMnG,EAAG8kB,KAAK,OAAQ,CAACxT,MAAQA,EAAOnL,KAAMA,GACnD,CAAC,MAAOlC,GAEL,MADAjE,EAAG8kB,KAAK,QAAS,CAAC5gB,KAAO,OAAQ0U,MAAO3U,EAAGqN,MAAQA,EAAOnL,KAAMA,IAC1DlC,CACT,CACD,OAAOkC,CACV,CAODhC,YAAYmN,EAAOnL,GACf,MAAMnG,EAAKC,KACX,IAAI2nB,EAAS,KACb,IACIA,QAAe5nB,EAAG09B,QAAQpsB,EAAOnL,GAC7ByhB,GAAQ5nB,EAAG8kB,KAAK,QAAS,CAACxT,MAAQA,EAAOnL,KAAMA,EAAMyhB,OAASA,GACrE,CAAC,MAAO3jB,GAEL,MADAjE,EAAG8kB,KAAK,QAAS,CAAC5gB,KAAO,QAAS0U,MAAO3U,EAAGqN,MAAQA,EAAOnL,KAAMA,IAC3DlC,CACT,CACD,OAAO2jB,CACV,CAODzjB,aAAamN,GACT,MAAM,IAAIzF,MAAM,8DACnB,CAQD1H,cAAcmN,EAAOnL,GACjB,MAAM,IAAI0F,MAAM,+DACnB,EC/FU,MAAM8xB,oBAAoBP,oBAErC5+B,UAAgB,CAAC,GAAI,OAAQ,QAAS,SACtCA,UAAiB,CAAC,MAAO,MAAO,OAAQ,UAExCsM,IAAO,GACPwe,IAAW,CAAA,EACXsU,IAAU,MACVC,IAAU,OACVva,IAAU,GACVgV,IAAQ,GAERwF,IAAQ,EACRC,IAAS,EAETt2B,IAAQ,GACR9B,IAAU,GAOVR,YAAY/F,EAAMi+B,GACdj4B,MAAMhG,EAAMi+B,EACf,CAOG/E,WACA,OAAOrsB,OAAO4B,UAAU5N,MAAKq4B,GAChC,CAOGA,SAAKjvB,GACL,MAAMrJ,EAAKC,KACXoJ,EAAM4C,OAAO4B,UAAUxE,GAEvB,IADas0B,aAAYK,GAAOn7B,SAASwG,GAC9B,MAAM,IAAIwC,MAAM,KAAM,0BAA0B8xB,aAAYK,MAKvE,MAJiB,UAAbh+B,GAAGs4B,IAAqBt4B,GAAGs4B,IAASjvB,IACpCrJ,GAAG49B,GAAU,MACb59B,GAAG69B,GAAU,QAEV59B,MAAKq4B,GAAQjvB,CACvB,CAMGu0B,aACA,OAAO39B,MAAK29B,EACf,CAOGA,WAAOv0B,GAGP,OAFWpJ,KACKg+B,SAAiBN,aAAYO,GAAQr7B,SAASwG,IACnD,MAAM,IAAIwC,MAAM,KAAM,4BAA4B8xB,aAAYO,MACzE,OAHWj+B,MAGD29B,GAAUv0B,CACvB,CAMGw0B,aACA,OAAO59B,MAAK49B,EACf,CAOGA,WAAOx0B,GAGP,OAFWpJ,KACKg+B,SAAiBN,aAAYO,GAAQr7B,SAASwG,IACnD,MAAM,IAAIwC,MAAM,KAAM,4BAA4B8xB,aAAYO,MACzE,OAAOj+B,MAAK49B,GAAUx0B,CACzB,CAMGigB,cACA,MAAO,IAAIrpB,MAAKqpB,GACnB,CAMGA,YAAQjgB,EAAM,IACdA,EAAM4C,OAAO0G,OAAOtJ,GACTpJ,MACRqpB,GAAW,IAAIjgB,EACrB,CAMGyB,UACA,OAAO7K,MAAK6K,EACf,CAMGA,QAAIzB,EAAM,IACCpJ,MACR6K,GAAOzB,CACb,CAMG00B,YACA,OAAO99B,MAAK89B,EACf,CAMGA,UAAM10B,EAAM,IACZpJ,MAAK89B,GAAS9xB,OAAOyG,MAAMrJ,EAAK,GACnC,CAMGy0B,WACA,OAAO79B,MAAK69B,EACf,CAMGA,SAAKz0B,EAAM,GACXpJ,MAAK69B,GAAQ7xB,OAAOyG,MAAMrJ,EAAK,EAClC,CAOG1D,aACA,OAAO1F,MAAK0F,EACf,CAEGA,WAAO0D,GACIpJ,MACR0F,GAAUsG,OAAO0d,OAAOtgB,GAAO4C,OAAO0G,OAAOtJ,GAAOA,CAC1D,CAOG5B,WACA,OAAOxH,MAAKwH,EACf,CAEGA,SAAK4B,GACMpJ,MACRwH,GAAQwE,OAAO2C,SAASvF,GAAOyE,KAAKC,MAAM1E,GAAOA,CACvD,CASGia,aAEA,IAAInV,EAAM,GACV,OAFWlO,KAEAq4B,MACP,IAAK,QACDnqB,EAAM,6DACN,MACJ,IAAK,OACDA,EAAM,kDAGd,OAVWlO,MAUDqjB,IAAWnV,CACxB,CAOGmV,WAAOja,EAAM,IACFpJ,MACRqjB,GAAUja,CAChB,CAKGnJ,UACA,MAAMF,EAAKC,KACX,OAAOD,GAAGm+B,GAAOn+B,GAAG8K,GAAM9K,GAAG89B,GAAO99B,GAAG+9B,GAAQ/9B,GAAG2F,GAAS3F,GAAGyH,GACjE,CAED02B,IAAOrzB,EAAKgzB,EAAMC,EAAOp4B,EAAQ8B,GAE7B,GAAIwE,OAAO6C,cAAchE,GAAM,MAAM,IAAIe,MAAM,4BAC/CpE,EAAOA,EAAOqG,KAAK+E,UAAUpL,GAAQ,GACrC9B,EAASA,EAASmI,KAAK+E,UAAUlN,GAAU,GAC3C,MAAMsN,EAAM,CAAE8qB,MAAOA,EAAOD,KAAMA,EAAMr2B,KAAM22B,mBAAmB32B,GAAO9B,OAAQy4B,mBAAmBz4B,IACnG,OAAOmF,EAAMmB,OAAOoyB,YALTp+B,KAKwBqjB,OAAQrQ,EAC9C,CAMGqrB,gBACA,MAAqB,KAAdr+B,KAAKq4B,IACf,CAMG2F,cACA,MAAqB,UAAdh+B,KAAKq4B,IACf,CAMGiG,eACA,MAAO,CAAC,OAAQ,SAAS17B,SAAS5C,KAAKq4B,KAC1C,CAODn0B,aAAamN,GACT,MAAMtR,EAAKC,KACX,GAAID,EAAGs+B,UAAW,OAClB,IAAKt+B,GAAG49B,GAAS,OAAOx4B,MAAMq4B,OAAOnsB,GACrC,GAAItR,EAAGu+B,SAAU,aAAanW,SAASiB,KAAKrpB,EAAGE,IAAKF,GAAG49B,GAAS59B,GAAGspB,IAAU,GAC7E,IAAKtpB,EAAGi+B,QAAS,OACjB,MAAMvyB,EAAKiF,EAAWgB,cAAc3R,GAAG49B,IACvC,IAAKlyB,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAG1L,EAAG89B,KAAM99B,EAAG+9B,MAAO/9B,EAAG2F,OAAQ3F,EAAGyH,KAC9C,CAQDtD,cAAcmN,EAAOnL,GACjB,MAAMnG,EAAKC,KACX,GAAID,EAAGs+B,UAAW,OAClB,IAAKt+B,GAAG69B,GAAS,OAAOz4B,MAAMs4B,QAAQpsB,GACtC,IAAKtR,EAAGu+B,SAAU,aAAanW,SAASiB,KAAKrpB,EAAGE,IAAKF,GAAG69B,GAAS79B,GAAGspB,IAAU,EAAMnjB,GACpF,IAAKnG,EAAGi+B,QAAS,OACjB,MAAMvyB,EAAKiF,EAAWgB,cAAc3R,GAAG49B,IACvC,IAAKlyB,EAAI,MAAM,IAAIG,MAAM,oCACzB,OAAOH,EAAGvF,EACb,CAOD3H,gBAAgBY,GACZ,OAAO,IAAIu+B,YAAYv+B,GAAM,EAChC,EC/TU,MAAMo/B,gBAEjBhgC,UAAsB,IAAI0W,IAE1BlC,IAEA7N,YAAY6N,GACR,MAAMhT,EAAKC,KACXD,GAAGgT,GAAQA,EACXhT,GAAGgT,GAAM8hB,cAAc90B,EAC1B,CAED+0B,gBACIyJ,iBAAgBxJ,GAAa1a,IAAIra,KACpC,CAEDg1B,mBACIuJ,iBAAgBxJ,GAAa3tB,OAAOpH,KACvC,CAEDsB,kBAAkBnC,EAAMiC,EAAUC,GACjB,gBAATlC,GAAwBa,KAAKi1B,QACvC,CAEEA,SACFj1B,MAAK+S,IAAOgkB,UACT,CAEDx4B,SAAiByF,GACbpE,uBAAsB,KAClB2+B,iBAAgBxJ,GAAatyB,SAAQkZ,GAAKA,EAAEsZ,UAAS,GAE5D,QAGGzV,SAAS8V,OAAO9qB,OAAQtL,SAAU,WAAYq/B,iBAAgBp2B,EACjE,ECpBU,MAAMq2B,gBAEpBjgC,SAAgB,IAAIsI,IAQpBtI,aAAaY,EAAMi1B,GAClBp0B,MAAK+G,EAAOC,IAAI7H,EAAMi1B,EACtB,CAOD71B,cAAcY,GACb,OAAOa,MAAK+G,EAAOK,OAAOjI,EAC1B,CAODZ,YAAYY,GACX,OAAOa,MAAK+G,EAAOI,IAAIhI,EACvB,CASDZ,mBAAmBY,EAAMi1B,GACxB,MAAMr0B,EAAKy+B,gBACX,IAAIj+B,EAAKR,EAAGqpB,KAAKjqB,GACjB,OAAIoB,IACJA,EAAKR,EAAGkH,OAAOmtB,GACfr0B,EAAGgH,MAAM5H,EAAMoB,GACRA,EACP,CAQDhC,cAAc61B,GACb,MAAM7zB,EAAKrB,SAAS0L,cAAc,YAElC,OADA6M,MAAM+E,QAAQjc,EAAI6zB,GACX7zB,CACP,CAQDhC,aAAa61B,GACZ,OAAO3c,MAAMgnB,kBAAkBrK,GAAYA,EAASsB,QAAQgJ,WAAU,GAAQ,IAC9E,CAQDngC,0BAA0B8P,GACzB,MAAM5C,EAAKiF,EAAWgB,cAAcrD,GACpC,QAAOqC,EAAWC,WAAWlF,IAAMA,CACnC,CAQDlN,sBAAsB8P,GACrB,MAAMjF,EAAMiF,EAAMA,EAAIhI,OAAS,GAE/B,QAAO,YAAY1E,KAAKyH,IAAOiF,CAC/B,CAQD9P,qBAAqB8P,GACpB,MAAMjF,EAAMiF,EAAMA,EAAIhI,OAAS,GAC/B,QAAO,gCAAgC1E,KAAKyH,IAAOiF,CACnD,CAUD9P,oBAAoBogC,GAAS,EAAOx/B,EAAO,GAAIi1B,GAC9C,MAAMr0B,EAAKy+B,gBACX,OAAIG,EAAe5+B,EAAG6+B,YAAYz/B,EAAMi1B,GACjCr0B,EAAGkH,OAAOmtB,EACjB,CAUD71B,wBAAwBogC,GAAS,EAAOx/B,EAAO,GAAIkP,GAClD,MAAMtO,EAAKy+B,gBACL31B,EAAI9I,EAAG8+B,eAAexwB,GAC5B,OAAKxF,EACE9I,EAAG++B,aAAaH,EAAQx/B,EAAM0J,GADtBA,CAEf,CAWDtK,6BAA6BogC,GAAS,EAAOx/B,EAAO,GAAIkP,GACvD,MAAMtO,EAAKy+B,gBACX,IACC,IAAIpK,EAAW,KAEf,OADIuK,IAAQvK,EAAWr0B,EAAGqpB,KAAK/a,IAC3B+lB,EAAiBA,GACrBA,QAAiBjM,SAAS4W,aAAa1wB,GAChCtO,EAAG++B,aAAaH,EAAQx/B,EAAMi1B,GACrC,CAAC,MAAOpwB,GACRiH,MAAM0N,MAAM5Y,EAAIiE,EAChB,CACD,OAAO,CACP,CAWDzF,kCAAkCogC,GAAS,EAAOx/B,EAAO,GAAIkP,GAC5D,MAAMtO,EAAKy+B,gBACL/yB,EAAK1L,EAAGi/B,mBAAmB3wB,GACjC,IAAK5C,EAAI,OAAOA,EAChB,IACC,IAAI2oB,EAAW,KAEf,OADIr0B,EAAG4+B,SAAQvK,EAAWr0B,EAAGqpB,KAAKvgB,IAC9BurB,EAAiBA,GACrBA,EAAW1jB,EAAWkB,gBAAgBnG,SAAYA,IAAOA,IAClD1L,EAAG++B,aAAaH,EAAQx/B,EAAMi1B,GACrC,CAAC,MAAOpwB,GACRiH,MAAM0N,MAAM5Y,EAAIiE,EAChB,CACD,OAAOyH,CACP,CAWDlN,0BAA0BogC,GAAS,EAAOx/B,EAAO,GAAIkP,GAEpD,IAAKlP,EAAM,OAAO,EAClB,IAAKkP,EAAK,OAAO,EAEjB,MAAMtO,EAAKy+B,gBAGX,IAAIpK,GAAW,EAoBf,OAlBwB,GAApB/lB,EAAIoH,QAAQ,OAEf2e,EAAWl1B,SAAS+/B,eAAe5wB,EAAI/D,MAAM,KAIzC8pB,IACJA,EAAWr0B,EAAGm/B,iBAAiBP,EAAQx/B,EAAMkP,IAGzC+lB,IACJA,QAAiBr0B,EAAGo/B,qBAAqBR,EAAQx/B,EAAMkP,IAGnD+lB,IACJA,QAAiBr0B,EAAGq/B,gBAAgBT,EAAQx/B,EAAMkP,IAG5C+lB,CACP,ECnNa,MAAMiL,mBAAmB/gC,YAEvCghC,KAAa,EACb5J,IAAW,KACXvP,IAAY,KAKD1nB,gCACV,MAAO,CAAC,OACR,CAEDyG,cACCC,OACA,CAEGzG,SACH,OAAO0T,OAAOjL,IAAInH,KAAM,KACxB,CAEGtB,OAAG0K,GACNgJ,OAAOpL,IAAIhH,KAAM,KAAMoJ,EACvB,CAEGrF,WACH,OAAOqO,OAAOjL,IAAInH,KAAM,OACxB,CAEG+D,SAAKqF,GACRgJ,OAAOpL,IAAIhH,KAAM,OAAQoJ,EACzB,CAEG8oB,aACH,OAAOlmB,OAAOkqB,MAAQ9jB,OAAOohB,UAAUxzB,KAAM,QAAQ,EACrD,CAEGuQ,WACH,OAAOvQ,MAAK01B,IAAY11B,KAAK4X,UAC7B,CASGwe,kBACH,OAAOhkB,OAAOjL,IAAInH,KAAM,cAAe,GACvC,CAEGo2B,gBAAYhtB,GACfgJ,OAAOpL,IAAIhH,KAAM,cAAeoJ,EAChC,CAKGitB,SACH,OAAOjkB,OAAOjL,IAAInH,KAAM,KAAM,GAC9B,CAEGq2B,OAAGjtB,GACNgJ,OAAOpL,IAAIhH,KAAM,KAAMoJ,EACvB,CAMGktB,cACH,OAAOlkB,OAAOjL,IAAInH,KAAM,UAAW,GACnC,CAEGs2B,YAAQltB,GACXgJ,OAAOpL,IAAIhH,KAAM,UAAWoJ,EAC5B,CAKDjI,yBAAyBhC,EAAMiC,EAAUC,GAC7BrB,MACJs/B,IAAuB,SAATngC,GADVa,KAC8B++B,cACzC,CAKDj/B,oBACC,MAAMC,EAAKC,KACLm4B,EAAKp4B,EAAGyb,cACd,IAAI2c,GAAoB,WAAdA,EAAG/e,QAAb,CACA,KAAMrZ,EAAGy2B,oBAAsBz2B,EAAG22B,gBAAkB32B,EAAG02B,WACtD,OAAO12B,EAAGO,SAENP,EAAGrB,KAAIqB,EAAGrB,GAAKmN,KAAKnN,IACzBqB,GAAGu/B,IAAa,EAChBjY,aAAatgB,MAAMhH,GACnBA,EAAGg/B,cAPuC,CAQ1C,CAKD99B,uBACC,MAAMlB,EAAKC,KACXD,GAAGu/B,IAAa,EAChBv/B,GAAG63B,KACC73B,GAAGomB,IAAWpmB,GAAGomB,GAAUuR,aAC/BrQ,aAAa/mB,OAAOP,GACpBy+B,gBAAgBl+B,OAAOP,EAAGrB,GAC1B,CAEDk5B,MACC,MAAM73B,EAAKC,KACPD,GAAG21B,KACN31B,GAAG21B,GAASp1B,SACZP,GAAG21B,GAAW,KAEf,CAOGc,yBACH,OAAOnR,cAAcmR,mBAAmBx2B,KAAKo2B,YAC7C,CAMGK,gBACH,OAAOpR,cAAcK,SAAS1lB,KAAKq2B,GACnC,CAMGK,qBACH,OAAOrR,cAAcqR,eAAe12B,KAAKs2B,QACzC,CAMGtrB,aACH,MAAMjL,EAAKC,KAKX,OAJKD,EAAG6X,YAAc7X,GAAGu/B,KACxBv/B,EAAGq4B,aAAa,CAAEC,KAAM,SACxBt4B,GAAGomB,GAAYL,cAAc7e,OAAOlH,EAAG6X,aAEjC7X,EAAG6X,UACV,CAQD1T,qBACC,MAAMnE,EAAKC,KACLqO,QAAYmwB,gBAAgBO,cAAa,EAAMh/B,EAAGrB,GAAIqB,EAAGgE,MAC/D,OAAKsK,EAIDtO,EAAGyb,yBAAyB+jB,iBAC/B/f,SAASa,cAAcnhB,SAAU,cAAe,CAAER,GAAIqB,EAAGrB,GAAIqF,KAAMhE,EAAGgE,OAC/DsK,UAGFmR,SAASuY,oBAAmB7zB,UACjC,GAAKnE,GAAGu/B,GAAR,CACA,GAAIv/B,EAAGmyB,OAAQ,CACd,MAAMxe,EAAO+D,MAAMghB,aAAa14B,EAAIsO,EAAIoO,WACxC1c,GAAG21B,GAAW31B,EAAGe,sBAAsB,WAAY4S,EACvD,MACI3T,EAAGiL,OAAO1D,mBAAqBV,cAAcW,OAC7CkQ,MAAM+E,QAAQzc,EAAGiL,OAAQqD,EAAIoO,WAE9B+C,SAASa,cAActgB,EAAI,gBAAiB,CAAErB,GAAIqB,EAAGrB,GAAIqF,KAAMhE,EAAGgE,OAAQ,GAAM,EARrD,CAQ0D,IAE/EsK,IAnBNpD,MAAM0N,MAAM3Y,KAAM,8BAA8BD,EAAGrB,YAAYqB,EAAGgE,SAC3D,EAmBR,CAODy7B,cAAcz7B,EAAO,IAGpB,OADIA,IADO/D,KACE+D,KAAOA,GADT/D,KAEDm3B,UAAU,gBACpB,CAODA,UAAUh4B,EAAO,IAChB,MAAMY,EAAKC,KACX,OAAO,IAAIS,SAAQ,CAAC8W,EAAGvT,KACtB,IAAK7E,EAAM,OAAO6E,EAAE,oBACpBwb,SAASc,KAAKvgB,EAAI,KAAMZ,GAAO6E,GAAMuT,EAAEvT,EAAEtE,SAAS,CAAE4gB,MAAM,GAAO,GAElE,CAODnE,MAAMhd,EAAO,IACZ,OAAOsY,MAAM0E,MAAMnc,KAAMb,EACzB,CAQDid,SAASjd,EAAO,GAAIsgC,GAAU,GAC7B,OAAOhoB,MAAM2E,SAASpc,KAAMb,EAC5B,QAGAmK,eAAeC,OAAO,cAAe81B,YACrCv6B,OAAOC,KAAKs6B,WACZ"}