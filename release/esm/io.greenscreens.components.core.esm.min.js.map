{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\t\t\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\t\t\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0 ) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\t\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v =>  src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSDOM.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","opt","GSDefine","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEventBus","EventTarget","listeners","Set","register","emit","registry","has","exist","bus","unbind","listener","on","off","evt","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","rect","getBoundingClientRect","sx","scrollX","sy","scrollY","top","bottom","height","width","y","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","template","getBody","getHref","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","hasAttribute","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","entries","kv","hk","registerFilter","expr","lastIndex","hv","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}