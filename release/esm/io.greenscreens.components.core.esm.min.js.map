{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.includes('!important');\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n            if (o === null) return;\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) return o = null;\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn o;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist withing object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tlet o = obj || null;\r\n\t\tname.split('.').forEach(v => {\r\n            if (o == null) return;\r\n\t\t\to = o.hasOwnProperty(v) ? o = o[v] : null;\r\n\t\t});\r\n\t\treturn o ? true : false;        \r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load', timeout, prevent); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return Object.assign({}, this.#headers);\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = Object.assign({}, val);\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","own","contextualize","accept","GSAttr","isHTMLElement","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSData","Set","first","second","index","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","Proxy","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggle","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","chained","susspended","opt","removeEventListener","unlisten","once","r","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","repaint","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}