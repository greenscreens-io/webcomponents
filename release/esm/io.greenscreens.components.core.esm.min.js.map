{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTouch.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tmsg = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail), timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\nexport default class GSTouch {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n    }\r\n\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    static attach(element) {\r\n        return new GSTouch(element);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog$1","GSLog","msg","print","forced","logging","nodeName","fn","console","log","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","error","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","getByID","documentElement","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","apply","toggleClass","contains","root","unwrap","valueAsNumber","checked","getValue","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","accept","reject","opt","removeEventListener","unlisten","signal","AbortSignal","once","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","disconnect","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","applyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSTouch","xDiff","yDiff","xDown","yDown","bindings","move","handleTouchMove","start","handleTouchStart","touches","clientX","clientY","xUp","yUp","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}