{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}