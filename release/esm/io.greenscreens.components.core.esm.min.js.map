{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = new CSSStyleSheet();\t\t\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\tif (!(id && style)) return;\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tif (sync) {\r\n\t\t\t\trule.replaceSync(style);\r\n\t\t\t} else {\r\n\t\t\t\trule.replace(style);\r\n\t\t\t}\r\n\t\t\treturn rule;\r\n\t\t} \r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tObject.entries(style).forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tObject.entries(style).forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSCacheStyles.capitalize(v) : v).join('');\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic flatten(el) {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rule = GSCacheStyles.getRule(source.dataset.cssId);\r\n\r\n\t\tconst style = rule ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tif (rule) GSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tif (rule) rule.style.transform = style.transform;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","dynamic","adoptedStyleSheets","styles","Array","from","filter","selectorText","pop","sync","rule","getRule","entries","kv","updateRule","insertRule","setRule","prop","isImportant","trim","setProperty","word","toUpperCase","slice","split","map","capitalize","join","deleteRule","sort","a","b","String","localeCompare","values","css","getOrSet","freeze","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}