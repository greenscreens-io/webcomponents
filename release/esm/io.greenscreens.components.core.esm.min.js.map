{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSTouch.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tmsg = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            requestAnimationFrame(async () => {\r\n                if (cnt <= 0) return;\r\n                cnt--;\r\n                if (cnt !== 0) return;\r\n                try {\r\n                    await GSFunction.#contextualize(fn, own, args);\r\n                } finally {\r\n                    cnt = -1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail), timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\t\tGSFunction.callFunction(fn);\r\n\t\t\tGSEvents.send(me, 'ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.#doReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTouch class\r\n * @module base/GSTouch\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSTouch {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSTouch.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns \r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSTouch(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write global registry\r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        if (me.#map.has(obj.id)) throw new Error('Key already exist in read/write registry!');\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        me.#map.delete(obj.id);\r\n        me.emit(`unregister-${obj.id}`, obj);\r\n        me.emit(`unregister`, obj);\r\n    }\r\n\r\n    find(name) {\r\n        return this.#map.get(name);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timouet or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        me.enable();\r\n    }\r\n\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this) ? true : false;\r\n    }\r\n\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = {};\r\n        try {\r\n            data = await me.onRead(owner);\r\n            me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n        }\r\n        return data;\r\n    }\r\n\r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = {};\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for REST data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #method = 'GET';\r\n    #action = '';\r\n    #mode = 'query';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        return this.#mode || 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (isok) return this.#mode = val;\r\n        GSLog.error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n    }\r\n\r\n    get method() {\r\n        return this.#method;\r\n    }\r\n\r\n    set method(val = '') {\r\n        const isok = GSReadWrite.#METHOD.includes(val);\r\n        if (isok) return this.#method = val;\r\n        GSLog.error(null, `Invalid methog, allowed: ${GSReadWrite.#METHOD}`);        \r\n    }\r\n\r\n    get headers() {\r\n        return Object.assign({}, this.#headers);\r\n    }\r\n\r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = Object.assign({}, val);\r\n    }\r\n\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        this.#limit = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n    \r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        return await GSLoader.load(me.url, 'GET', me.#headers, true);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */\r\n    async onWrite(owner, data) {\r\n        super.onWrite(owner, data);\r\n    }\r\n\r\n    static register(name) {\r\n        return new GSReadWrite(name);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog$1","GSLog","msg","print","forced","logging","nodeName","fn","console","log","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","normalize","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","animating","error","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","own","contextualize","GSAttr","isHTMLElement","attr","asBool","asNum","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","getByID","documentElement","walk","qry","query","queryAll","push","innerHTML","textContent","isNull","toggle","toggleClass","contains","root","unwrap","valueAsNumber","checked","getValue","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","accept","opt","removeEventListener","unlisten","once","r","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","Set","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","disconnect","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSTouch","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","skip","limit","MODES","METHOD","toURL","encodeURIComponent","fromLiteral","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray"],"mappings":"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"}