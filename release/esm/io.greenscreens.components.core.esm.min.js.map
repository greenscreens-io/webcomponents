{"version":3,"file":"io.greenscreens.components.core.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic flatten(el) {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","entries","kv","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","off","emit","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"mappings":"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"}