{"version":3,"file":"io.greenscreens.extra.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvent.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSItem.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\t\r\n\t\tif (customElements._define) return customElements._define(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tif (!customElements._define) {\r\n\t\t\tcustomElements._define = customElements.define;\r\n\t\t\tcustomElements.define = GSDOM.define;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSItem from '../base/GSItem.mjs';\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    #chart = null;\r\n\r\n    static async #init() {\r\n        //const { Chart, registerables } = await import('/assets/chart/chart.mjs');\r\n        const module = await import('/assets/chart/chart.mjs');\r\n        module.Chart.register(...module.registerables);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            //return `<div style=\"width:${me.width}px;height:${me.height}px;\"><canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas></div>`;\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (me.#chart) {\r\n            requestAnimationFrame(() => {\r\n                const div = me.query('div');\r\n                if (div) {\r\n                    div.style.width = `${x}px`;\r\n                    div.style.height = `${y}px`;\r\n                }\r\n                me.#chart.resize(x, y);\r\n            });\r\n        }\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSItem.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new Chart(ctx, opt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '') {\r\n        this.#onHighlight(data);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(this.#code, e.data.data);\r\n    }\r\n\r\n    #onHighlight(data = '') {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static URL_LIB = globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvent.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        window.requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","Object","freeze","GSLog","el","msg","print","forced","type","logging","fn","console","log","nodeName","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","values","Function","isStringNonEmpty","o","window","forEach","a","isStringEmpty","isString","left","right","lmatch","rmatch","time","Promise","r","setTimeout","bind","callback","animating","requestAnimationFrame","e","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","timeout","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","GSDOM","opt","_define","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","head","children","concat","wrap","shift","appendChild","target","link","slot","isText","tagName","indexOf","ownClazz","it","inheritance","pel","constructor","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","sts","toggle","apply","toggleClass","contains","owner","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","dataset","ignore","checkValidity","toValue","fromValue","location","hash","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","css","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","isFunctionAsync","callFunctionSync","parseValue","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","documentElement","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","callFunction","GSEvent","Map","addEventListener","prevent","event","code","ctrlKey","shiftKey","loaded","wait","sendSuspended","er","removeEventListener","listen","once","detail","hasFunction","preventDefault","stopPropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","send","capture","offline","me","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isPromise","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","match","env","nocache","undefined","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","style","store","cssRules","styles","sort","b","String","localeCompare","getOrSet","injectStyle","GSComponents","Set","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","updateUI","getStyle","getTemplate","hide","show","evt","on","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","inject","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSItem","validate","tags","getFlat","getAnchor","acss","cls","generateItems","generateItem","generateArgs","items","entries","kv","numOrString","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","getSelectable","selectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSChart","chart","module","Chart","register","registerables","init","observeAttributes","resize","width","height","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","URL_LIB","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","GS_URL_MONACO","editor","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","getValue","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","rect","getBoundingClientRect"],"mappings":"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"}