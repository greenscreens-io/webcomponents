{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.indexOf(name) > -1;\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t || el?.tagName === 'GS-BUTTON'\r\n\t\t || GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(o).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail), timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO - add support for eq,gt,lt,like,or\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tGSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit(me, 'ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","normalize","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","async","own","contextualize","accept","requestAnimationFrame","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","getByID","documentElement","walk","qry","query","queryAll","res","push","innerHTML","textContent","entries","kv","style","sts","isNull","toggle","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","toValue","toJson","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","opt","json","isJson","func","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","callback","loaded","wait","sendSuspended","chained","susspended","removeEventListener","unlisten","undefined","once","r","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","emit","waitEvent","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","setIf","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","setHTML","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}