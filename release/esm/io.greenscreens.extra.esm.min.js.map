{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","constructor","url","test","startsWith","endsWith","pattern","charset","Math","floor","random","locale","navigator","language","languages","isNull","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","host","opt","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","multi","hasAttribute","toStringArray","GSFunction$1","GSFunction","isFunction","includes","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSData","Set","b","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sort","sortPair","sts","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","undefined","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","proxy","queryAll","res","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","requestAnimationFrame","style","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","CLEANUP1","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","origin","pop","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","Date","now","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","callFunction","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSDynamicStyle","super","deleteRule","getRule","setRule","sync","rule","insertRule","updateRule","isImportant","setProperty","GSCacheStyles","store","create","dynamic","styles","adopt","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","listener","onStyles","unstyled","listenStyles","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","emit","waitEvent","off","attachEvent","removeEvent","isAllowRender","isConfig","setIf","injection","ref","disconnect","deattachListeners","removeFlat","controller","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","register","observeAttributes","resize","init","destroy","getAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","promise","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","enabled","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}