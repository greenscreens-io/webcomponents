{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","constructor","url","test","startsWith","endsWith","pattern","charset","Math","floor","random","locale","navigator","language","languages","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","host","opt","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","multi","hasAttribute","toStringArray","GSFunction$1","GSFunction","isFunction","includes","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","own","contextualize","accept","requestAnimationFrame","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSData","Set","b","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sort","sortPair","sts","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","proxy","queryAll","res","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","style","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","callFunction","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","undefined","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSDynamicStyle","super","deleteRule","getRule","setRule","sync","rule","insertRule","updateRule","isImportant","setProperty","GSCacheStyles","store","create","dynamic","styles","adopt","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","emit","waitEvent","off","attachEvent","removeEvent","isAllowRender","isConfig","setIf","injection","ref","disconnect","deattachListeners","removeFlat","controller","removeController","repaint","queueMicrotask","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","register","observeAttributes","resize","init","destroy","getAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","promise","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","enabled","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}