{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t};\r\n\t\tconst reg = /[&<>\"'/]/ig;\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.5';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","constructor","url","test","startsWith","endsWith","pattern","charset","Math","floor","random","locale","navigator","language","languages","isNull","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","string","match","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr$1","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","host","opt","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","multi","hasAttribute","toStringArray","GSFunction$1","GSFunction","isFunction","includes","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSData","Set","b","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sort","sortPair","sts","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","s1","s2","localeCompare","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","undefined","readFromObject","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","proxy","queryAll","res","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","requestAnimationFrame","style","toggleClass","contains","root","unwrap","querySelectorAll","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","recursive","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","CLEANUP1","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","dispatchEvent","Event","bubbles","composed","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","origin","pop","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","Date","now","UNIQUE","searchParams","append","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","callFunction","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","cancelable","CustomEvent","detail","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSDynamicStyle","super","deleteRule","getRule","setRule","sync","rule","insertRule","updateRule","isImportant","setProperty","GSCacheStyles","store","create","dynamic","styles","adopt","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","listener","onStyles","unstyled","listenStyles","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","emit","waitEvent","off","attachEvent","removeEvent","isAllowRender","isConfig","setIf","injection","ref","disconnect","deattachListeners","removeFlat","controller","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","register","observeAttributes","resize","init","destroy","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","promise","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","enabled","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}