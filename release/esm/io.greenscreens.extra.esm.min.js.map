{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tname.split('.')\r\n        .filter(v => !GSUtil.isNull(v))\r\n        .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n\t\treturn obj ? true : false;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tconst has = GSData.objectPathExist(obj, el.name);\t\t\r\n\t\tif (GSUtil.isNull(has)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","constructor","url","test","startsWith","endsWith","pattern","charset","Math","floor","random","locale","navigator","language","languages","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","isInstance","getAttribute","attr","asBool","asNum","toJson","set","NaN","stringify","entries","kv","from","attributes","filter","sep","host","opt","Proxy","target","prop","dataset","attribute","toggle","Number","setAsNum","multi","hasAttribute","toStringArray","GSFunction$1","GSFunction","isFunction","includes","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSData","Set","b","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sort","sortPair","sts","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","proxy","queryAll","res","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","requestAnimationFrame","style","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","has","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","callFunction","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","undefined","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSDynamicStyle","super","deleteRule","getRule","setRule","sync","rule","insertRule","updateRule","isImportant","setProperty","GSCacheStyles","store","create","dynamic","styles","adopt","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","listener","onStyles","unstyled","listenStyles","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","emit","waitEvent","off","attachEvent","removeEvent","isAllowRender","isConfig","setIf","injection","ref","disconnect","deattachListeners","removeFlat","controller","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","register","observeAttributes","resize","init","destroy","getAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","assign","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","promise","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","enabled","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}