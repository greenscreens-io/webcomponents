{"version":3,"file":"io.greenscreens.extra.esm.min.js","sources":["../../modules/base/GSID.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSEvents.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSData.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSElement.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) el.id = el.id || GSID.id;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert lsit of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        return owner ? await fn.bind(owner)() : await fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        return owner ? fn.bind(owner)() : fn(owner);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.indexOf(x) >= 0) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.indexOf(name) > -1;\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t || el?.tagName === 'GS-BUTTON'\r\n\t\t || GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ( (node = node.previousElementSibling) ) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n        switch (el.type) {\r\n            case 'datetime-local':\r\n            case 'number':\r\n                return el.value ? el.valueAsNumber : el.value;\r\n            default:\r\n                return el.value;\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t.filter(v => v.length > 1)\r\n\t\t.forEach(v => {\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.indexOf('!important') > 0;\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO - add support for eq,gt,lt,like,or\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready);\r\n\t\t\tme.emit(me, 'ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    //todo take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","el","Object","freeze","GSLog","msg","print","tracing","forced","type","logging","tmp","nodeName","fn","console","log","Error","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Boolean","value","toString","val","dft","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","url","test","includes","pattern","charset","Math","floor","random","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","values","Function","isString","isStringNonEmpty","o","window","forEach","a","isStringEmpty","normalize","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","GSAttr","isHTMLElement","setAttribute","removeAttribute","getAttribute","attr","asBool","asNum","set","NaN","stringify","from","attributes","filter","sep","GSFunction","isFunction","indexOf","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","args","apply","cnt","async","own","contextualize","accept","requestAnimationFrame","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","to","unit","match","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDOM","activeElement","active","shadowRoot","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","index","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","res","push","innerHTML","Document","textContent","entries","kv","style","sts","isNull","toggle","toggleClass","contains","root","unwrap","querySelectorAll","valueAsNumber","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","toValue","toJson","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","location","hash","d","setValue","group","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","opt","json","isJson","func","isFunc","callFunction","GSEvents","Map","listen","prevent","onKeyDown","event","code","ctrlKey","shiftKey","callback","loaded","wait","sendSuspended","chained","susspended","removeEventListener","unlisten","undefined","once","r","detail","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","delete","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSBase","refid","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isProtocol","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","env","nocache","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","store","create","dynamic","styles","sync","rule","getRule","insertRule","setRule","updateRule","prop","isImportant","setProperty","deleteRule","sort","b","localeCompare","adopt","GSComponents","Set","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","unstyled","listenStyles","GSData","first","second","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","isBool","compareBool","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isWrap","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","getTemplate","hide","show","emit","waitEvent","off","attachEvent","removeEvent","attach","isAllowRender","isConfig","setIf","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","inject","parseWrapped","insertAdjacent","setHTML","applyTemplate","doReady","GSDefine","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","register","init","observeAttributes","resize","destroy","getAsNum","setAsNum","options","canvas","reset","update","stop","y","div","toBase64Image","quality","sets","datasets","ctx","getContext","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTheme","onTarget","onURL","highlight","onHighlight","theme","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","label","encodeURIComponent","initialized","setInterval","require","config","paths","vs","clearInterval","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","onResize","layout","GSMarkdown","converter","last","GS_URL_MARKDOWN","maxHeight","toCache","history","setAsNumt","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}