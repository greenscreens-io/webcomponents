{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (me.visible) {\r\n        if (dlg && !dlg.open) {\r\n          dlg.showModal();\r\n          GSDialog.#STACK.push(me);\r\n          me.emit('change');\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      me.emit('visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #onChange() {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise$1","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","reportValidity","elements","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","dlg","dialog","showModal","focusable","monitorAction","onForm","onEscape","onClose","onCancel","buttonOkEl","forms","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","notify","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","srcElement","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}