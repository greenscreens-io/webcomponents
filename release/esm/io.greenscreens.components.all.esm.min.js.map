{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\tstatic define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSDOM.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvent.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = me.computedStyleMap().get('text-transform').value;\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvent from '../base/GSEvent.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvent.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, 'show', me.visible);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) me.#dialog.showModal();\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable && e.key === 'Escape') return GSEvent.prevent(e);\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, 'show', me.visible);\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n          me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const style = window.getComputedStyle(parent);\r\n        return style.display === 'flex' && style.flexGrow !== '0';\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.visible);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, 'show', me.visible);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.visible));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","opt","GSDefine","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEventBus","EventTarget","listeners","Set","register","emit","registry","has","exist","bus","unbind","listener","on","off","evt","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","rect","getBoundingClientRect","sx","scrollX","sy","scrollY","top","bottom","height","width","y","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","generateItems","generateItem","generateArgs","items","entries","kv","numOrString","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","template","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","setAsBool","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSDataListExt","HTMLDataListElement","objToHTML","GSComboExt","HTMLSelectElement","GSFormExt","HTMLFormElement","onMonitorFilter","onMonitorResult","onMonitorRemove","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","hasAttribute","autoselect","maskType","maxLength","onKeyDown","onKeyPress","onInput","onChange","onPaste","onBlur","onClick","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","title","onNumberInput","onTextInput","substring","updateText","vld","c","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","isCollapsible","bsDismiss","bsToggle","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","GSTimeFormat","stop","start","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","isVisible","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSContext","caller","attached","submenus","menu","visible","childElementCount","renderMenuDOM","attachTarget","onResize","attachSubmenu","attachOptions","reattach","dark","Event","open","popup","createMenu","renderMenu","hasSubmenu","sub","onPopup","clientX","clientY","overflowH","innerWidth","overflowV","innerHeight","updateSubmenus","option","onSubmenu","li","ul","offsetTop","targets","isSub","renderSub","renderChild","header","GSDialog","dialog","showModal","focusable","focus","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","closable","confirm","prompt","buttonCancelEl","buttonOkEl","align","footer","findSlotOrEl","large","extra","buttonOk","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","updatePos","w","parseInt","ww","wh","updateSub","menustyle","substyle","ml","mw","sl","sw","attachItems","getAttrs","rtl","attrs","GSFormGroup","validateAllowed","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","display","flexGrow","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dir","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","some","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","reduce","emptyRow","cols","hdr","genRow","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selected","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","native","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","toast"],"mappings":"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"}