{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSIcon.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sanitize text for HTML generation\r\n\t * @param {string} string \r\n\t * @returns \r\n\t */\r\n\tstatic sanitize(string = '') {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#x27;',\r\n\t\t\t\"/\": '&#x2F;',\r\n\t\t\t\"\\n\": '<br>',\r\n\t\t\t\"\\r\": '<br>',\r\n\t\t\t\"\\t\": '&nbsp;&nbsp;&nbsp;&nbsp;',\r\n\t\t\t' ': '&nbsp;',\r\n\t\t\t'\\\\': '&#x5C;',\r\n\t\t\t'`': '&#x60;'\r\n\t\t};\r\n\t\tconst reg = new RegExp(`[${Object.keys(map).join('')}]`, 'ig');\r\n\t\treturn string.replace(reg, (match) => (map[match]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\t//static #CLEANUP1 = /(\\n*\\t*)*(?=\\n\\t*)/g\r\n\tstatic #CLEANUP1 = /(?:\\n+\\t*)+/g\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSelectElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSelect(el) {\r\n\t\treturn el instanceof HTMLSelectElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLSlotElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSlotElement(el) {\r\n\t\treturn el instanceof HTMLSlotElement;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el, defaults = false) {\r\n\t\tlet val = null;\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\tval = el.value ? el.valueAsNumber : el.value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\tval = Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tval = el.checked ? el.value : null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = el.checked;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tval = el.value;\r\n\t\t}\r\n\r\n\t\tif (GSUtil.isNull(val) && defaults) {\r\n\t\t\tval = el.defaultValue;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el, defaults);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromValue(el, val, defaults = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (GSUtil.isStringNonEmpty(el.value)) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif (defaults) el.defaultValue = el.checked;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\tel.value = GSUtil.normalize(data);\r\n\t\t\tif (defaults) el.defaultValue = el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true, defaults = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => GSDOM.fromElement2Object(el, params, defaults));\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @param {Boolean} defaults Set default value for form reset  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output', defaults = false) {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromObject2Element(el, obj, defaults = false) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val, defaults);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement (input) value to JSON Object  \r\n\t * @param {HTMLElement} owner Element value source\r\n\t * @param {Object} obj Object to populate \r\n\t * @param {Boolean} defaults Set default value for form reset\r\n\t */\r\n\tstatic fromElement2Object(el, obj, defaults = false) {\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t} else if (el.checked) {\r\n\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\tGSData.writeToOject(obj, el.name, GSDOM.toValue(el, defaults));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  If false, will include #tagName\r\n\t * @param {Object} definitions Json data type definitions\t\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false, definitions) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive,plain,definitions));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\t//obj.dataset = Object.assign({}, own.dataset);\r\n\r\n\t\tconst props = definitions || GSDOM.allProperties(own);\r\n\t\tArray.from(own.attributes).forEach(v => {\r\n\t\t\tconst type = props[v.name]?.type;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase Boolean:\r\n\t\t\t\t\tobj[v.name] = own.hasAttribute(v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Number:\r\n\t\t\t\t\tobj[v.name] = GSAttr.getAsNum(own, v.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tobj[v.name] = v.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain, definitions));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own\r\n\t * @param {Boolean} defaults Set default value for form reset \r\n\t */\r\n\tstatic setValue(qry, val, own, defaults = false) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val, defaults));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(GSDOM.#CLEANUP1, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\t/**\r\n\t * Reset form element\r\n\t * @param {*} element \r\n\t * @returns \r\n\t */\r\n\tstatic reset(element) {\r\n\t\tif(GSDOM.isFormElement(element)) {\r\n\t\t\tif (!GSDOM.resetSelect(element)) {\r\n\t\t\t\telement.dataset.typed = false;\r\n\t\t\t\telement.value = element.defaultValue;\r\n\t\t\t\tGSDOM.#dispatch(element);\r\n\t\t\t\treturn true;\t\r\n\t\t\t}\r\n\t\t} \t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Reset select element to default value\r\n\t * @param {HTMLSelectElement} element \r\n\t */\r\n\tstatic resetSelect(element) {\r\n\t\tif (GSDOM.isSelect(element)) {\r\n\t\t\tArray.from(element.options).forEach(el => el.selected = el.hasAttribute('selected'));\r\n\t\t\tGSDOM.#dispatch(element);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic #dispatch(element) {\r\n\t\telement.dispatchEvent(new Event('change', { bubbles: true, composed: true }));\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(this.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser environment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.5';\r\n    }\r\n\r\n    get build() {\r\n        return 20241227;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setDate(1);\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all templates inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.resetSelect(this);\r\n    }    \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    GSLog.error(null, e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        const me = this;\r\n        me.elements.forEach(el => GSDOM.reset(el));\r\n        me.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        //GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n        GSAttr.set(el, 'data-ignore', isMatch ? null : true);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    reset() {\r\n        GSDOM.reset(this);\r\n    }\r\n        \r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self?.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<gs-icon icon=\"${me.icon}\" hover=\"${me.hover}\"></gs-icon>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    // icon attributes\r\n    \r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n    // button attributes\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  /**\r\n   * Return number of dialogs\r\n   */\r\n  static get size() {\r\n    return GSDialog.#STACK.length;\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    return  GSDialog.size === 0 ? null : GSDialog.#STACK[GSDialog.size - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialog.#updateStack();\r\n    return Array.from(GSDialog.#STACK);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (!dlg) return;\r\n      const cfg = { type: 'dialog', ok: me.visible };\r\n      if (me.visible && !dlg.open) {\r\n        dlg.showModal();\r\n        GSDialog.#STACK.push(me);\r\n        me.emit('change');\r\n        me.#notify(cfg);\r\n      } else  if (!me.visible && dlg.open) {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n        me.#notify(cfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me, 'visible', me.#onVisible.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #notify(cfg) {\r\n    const me = this;\r\n    GSEvents.waitAnimationFrame(() =>{\r\n      me.emit('visible', cfg, true, true);\r\n    });\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onVisible(e) {\r\n    const me = this;\r\n    me.visible ? me.afterOpen() : me.afterClose();\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {\r\n      f.reset(); \r\n      if(data) GSDOM.fromObject(f, data);\r\n    });\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  async afterOpen() {\r\n    \r\n  }\r\n\r\n  async afterClose() {\r\n    \r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <slot name=\"actions\"></slot>\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label' && me.#labelEl) me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value' && me.#inputEl) me.#inputEl.value = newValue;\r\n      if (name === 'disabled' && me.#inputEl) me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${GSUtil.sanitize(me.description)}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${GSUtil.sanitize(me.description)}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * \r\n * <gs-icon icon=\"database\" hover=\"gs-fade\" size=\"3\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSIcon extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-icon', GSIcon);\r\n        Object.seal(GSIcon);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        //const attrs = ['icon', 'size', 'css'];\r\n        return GSElement.observeAttributes([]);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.hover) {\r\n            me.attachEvent(me.self, 'mouseover', me.#onMouseOver.bind(me));\r\n            me.attachEvent(me.self, 'mouseout', me.#onMouseOut.bind(me));\r\n        }\r\n        if (me.click) {\r\n            me.attachEvent(me.self, 'click', me.#onMouseClick.bind(me));         \r\n        }        \r\n    }\r\n\r\n    async #onMouseClick(e) {\r\n        const me = this;\r\n        const delay = GSUtil.asNum(me.dataset.delay, 0);\r\n        GSDOM.toggleClass(me.self, me.hover, false);\r\n        GSDOM.toggleClass(me.self, me.click, false);\r\n        GSDOM.toggleClass(me.self, me.click, true);\r\n        if (delay > 0) {\r\n            await GSUtil.timeout(delay * 1000);\r\n            GSDOM.toggleClass(me.self, me.click, false);\r\n        }\r\n    }\r\n\r\n    #onMouseOver(e) {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.self, me.click, false);\r\n        GSDOM.toggleClass(me.self, me.hover, true);\r\n    }\r\n\r\n    #onMouseOut(e) {\r\n        GSDOM.toggleClass(this.self, this.hover, false);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `<i class=\"bi bi-${me.icon} ${me.#sizeCss} ${me.css}\"></i>`;\r\n    }\r\n\r\n    get #sizeCss() {\r\n        return this.size>0 ? `fs fs-${this.size}` : '';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size');\r\n    }\r\n\r\n    set size(val = 0) {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Animation css when mouse over\r\n     */\r\n    get hover() {\r\n        return GSAttr.get(this, 'hover');\r\n    }\r\n\r\n    set hover(val = '') {\r\n        return GSAttr.set(this, 'hover', val);\r\n    }\r\n\r\n\r\n    /**\r\n     * Animation css when mouse click\r\n     */\r\n    get click() {\r\n        return GSAttr.get(this, 'click');\r\n    }\r\n\r\n    set click(val = '') {\r\n        return GSAttr.set(this, 'click', val);\r\n    }    \r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <slot name=\"actions\"></slot>\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table body renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.queryAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" delay=\"${delay}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.removeNative(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  removeNative(notification) {\r\n    this.#list.delete(notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","string","reg","keys","tpl","params","names","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr$1","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLSelectElement","HTMLSlotElement","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","defaults","valueAsNumber","selectedOptions","checked","defaultValue","getValue","styleValue","textTransform","ignore","checkValidity","fromElement2Object","fromObject2Element","objectPathExist","fromValue","writeToOject","toValue","recursive","plain","definitions","innerText","props","allProperties","getAsNum","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","CLEANUP1","whiteList","asState","isAllowed","toValidationError","isFormElement","resetSelect","typed","dispatch","isSelect","options","selected","Event","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise$1","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","objToHTML","reset","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","elements","read","submit","onSubmit","reportValidity","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","hover","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","opened","dlg","dialog","showModal","notify","monitorAction","onForm","onVisible","onEscape","onClose","onCancel","buttonOkEl","forms","afterOpen","afterClose","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","focusable","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSIcon","onMouseOver","onMouseOut","onMouseClick","sizeCss","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","srcElement","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","removeNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}