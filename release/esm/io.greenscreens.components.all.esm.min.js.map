{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\t\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n    /**\r\n     * Check if element is visible\r\n     * @param {HTMLElement} el \r\n     * @returns \r\n     */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n        const rect = el.getBoundingClientRect();\r\n        if (rect.width === 0 || rect.height === 0) return false;\r\n        return !GSDOM.isStyleValue(el, 'display', 'none') && GSUtil.asNum(GSDOM.styleValue(el, 'opacity')) > 0;\r\n    }\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (!map) return null;\r\n\t\tconst css =  (typeof map.get === 'function') ? map.get(name) :  map[name];\r\n\t\treturn css.value ? css.value : css;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if computed style is equal\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic isStyleValue(el, name, val = '') {\r\n\t\treturn GSDOM.styleValue(el, name) === val;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\t\t\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\t\t\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0 ) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\t\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\t\r\n\t static fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v !='items' && v[0]!= '#')\r\n\t\t\t.forEach(v =>  src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\n import GSLog from \"./GSLog.mjs\";\r\n import GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = GSDOM.getComputedStyledMap(element);\r\n\t\tif (!cs) return; // no Firefox support\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'ready', {});\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvent.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvent.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        return GSDOM.isStyleValue(el, 'display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvent.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = GSDOM.styleValue(me, 'text-transform');\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvent.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvent.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvent from '../base/GSEvent.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvent.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    const cfg = {clientX: x.clientX || x, clientY: x.clientY || y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      me.style.position = 'fixed';\r\n      me.style.top = '0px';\r\n      me.style.left = '0px';\r\n      me.style.transform = `translate(${cfg.clientX}px, ${cfg.clientY}px)`;\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    me.style.left = '';\r\n    me.style.top = '';\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        me.style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        me.style.top = `${top}px`;      \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSDOM.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        let end = true;\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          el.style.left = '100%';\r\n          end = true;\r\n        }\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        GSEvent.prevent(e);\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvent.prevent(e);\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\">${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\">${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\">${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    const me = this;\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    this.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n                 .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvent.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'contextmenu';\r\n    GSEvent.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static get top() {\r\n    return GSDialog.#STACK.length === 0 ? null : GSDialog.#STACK[GSDialog.#STACK.length-1];\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) {\r\n          me.#dialog.showModal();\r\n          GSDialog.#STACK.push(me);\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable || e.key !== 'Escape') return;\r\n    me.close();\r\n    GSEvent.prevent(e);\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvent.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'dropdown';\r\n    GSEvent.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        return GSDOM.isStyleValue(parent, 'display', 'flex') &&  !GSDOM.styleValue(parent, 'flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvent.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.expanded;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const val = me.isVertical ? GSDOM.styleValue(me.target,'width') : GSDOM.styleValue(me.target,'height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return el.value;\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    const toast = me.#dialogToast;\r\n    requestAnimationFrame(() => {\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","activeElement","active","shadowRoot","rect","getBoundingClientRect","width","height","isStyleValue","styleValue","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEventBus","EventTarget","listeners","Set","register","emit","registry","has","exist","bus","unbind","listener","on","off","evt","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","hasAttribute","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","entries","kv","hk","registerFilter","expr","lastIndex","hv","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","dir","idxToDir","focus","MouseEvent","view","altKey","isVisible","onKeyDown","start","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","c","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","autoselect","maskType","maxLength","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","title","onNumberInput","onTextInput","substring","updateText","vld","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","end","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","attachMenuItems","attachSubMenu","updatePos","closable","popup","clientX","clientY","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","overflowH","overflowV","handleGroup","option","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","getAttrs","fromJSON","is","isSub","childElementCount","renderSub","fromDOM","renderChild","header","attrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","Event","createMenu","targets","onPopup","capitalizeAttr","onError","GSDialog","STACK","dialog","showModal","focusable","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","confirm","prompt","buttonCancelEl","buttonOkEl","align","footer","findSlotOrEl","large","extra","buttonOk","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","validateAllowed","labelEl","inputEl","isNull","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","some","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","reduce","emptyRow","cols","hdr","genRow","toType","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast"],"mappings":"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"}