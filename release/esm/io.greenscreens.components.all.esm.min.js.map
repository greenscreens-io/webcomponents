{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new CSSStyleSheet();\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn Array.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.filter(v => v.selectorText === `.${id}`).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\r\n\t\tif (!(id && style)) return;\r\n\t\t\r\n\t\tlet rule = GSCacheStyles.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tGSCacheStyles.dynamic.insertRule(`.${id} {}`);\r\n\t\t\treturn GSCacheStyles.setRule(id, style, sync);\r\n\t\t}\r\n\r\n\t\tlet data = [];\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tdata = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n\t\t} else {\r\n\t\t\tdata = Object.entries(style);\r\n\t\t}\r\n\t\t\r\n\t\tif (sync) {\r\n\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t} else {\r\n\t\t\trequestAnimationFrame(()=> {\r\n\t\t\t\tdata.forEach(kv => GSCacheStyles.#updateRule(rule, kv[0], kv[1]));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn rule;\r\n\t}\r\n\r\n\tstatic #updateRule(rule, prop = '', style = '') {\r\n\t\tstyle = style || '';\r\n\t\tconst isImportant = style.includes('!important');\r\n\t\tstyle = style.replace('!important', '');\r\n\t\tprop = prop.trim();\r\n\t\trule.style.setProperty(prop, style,  isImportant ? 'important' : '');\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tArray.from(GSCacheStyles.dynamic.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v>-1)\r\n\t\t\t.forEach(v => GSCacheStyles.dynamic.deleteRule(v));\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner ||null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                requestAnimationFrame(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\tlet o = obj;\r\n\t\tname.split('.').forEach((v, i, a) => {\r\n            if (o === null) return;\r\n\t\t\tconst last = i === a.length - 1;\r\n\t\t\tif (!o.hasOwnProperty(v)) return o = null;\r\n\t\t\to = o[v];\r\n\t\t});\r\n\t\treturn o;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist withing object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n\t\tlet o = obj || null;\r\n\t\tname.split('.').forEach(v => {\r\n            if (o == null) return;\r\n\t\t\to = o.hasOwnProperty(v) ? o = o[v] : null;\r\n\t\t});\r\n\t\treturn o ? true : false;        \r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [].concat(el);\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\t\t\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load', timeout, prevent); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = timeout == 0 ? undefined : AbortSignal.timeout(timeout); \r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tGSEvents.once(own, null, name, (e) => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tr(prevent ? e.detail : e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = Object.assign({}, headers);\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tif (me.unstyled) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn GSEvents.wait(me, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t}, true);\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#applyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return Object.assign({}, this.#headers);\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = Object.assign({}, val);\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].includes(focused.tagName);\r\n        if (editable && !e.altKey) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        transform : `translate(${cfg.clientX}px, ${cfg.clientY}px)`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        GSUtil.isStringEmpty(me.company)\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (me.visible) {\r\n        if (dlg && !dlg.open) {\r\n          dlg.showModal();\r\n          GSDialog.#STACK.push(me);\r\n          me.emit('change');\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      me.emit('visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #onChange() {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) {\r\n        GSEvents.prevent(e);\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    me.#buttonOkEl.disabled = true;\r\n    me.forms.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    me.#buttonOkEl.disabled = false;\r\n    me.forms.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                transform : `translate(${x}px, ${y}px)`\r\n            };\r\n            /*\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n            */\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        //if (!me.visible) me.style.transform = 'unset';\r\n        /*\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n        */\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', css = '') {\r\n\r\n        const me = this;\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = pid ? `${pid}.${idx}` : idx;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                const cl = cid.split('\\.').length;\r\n                if (pl + 1 != cl && sts) break;\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parent(el) {\r\n        el = el || this.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = s.substr(0, s.length - 2);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li'));\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isFolder && !isOpen) return;\r\n        let el = isOpen ? me.#selected.querySelector('li') : me.#selected.nextElementSibling;\r\n        if (!el) el = me.#selected.nextElementSibling;\r\n        // if rotatable \r\n        // if (!el) el = me.rootEl.firstElementChild;\r\n        me.#update(el);\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        let el = me.#selected.previousElementSibling;\r\n        if (!el) el = me.#selected.parentElement?.previousElementSibling;\r\n        // if rotatable \r\n        // if (!el) el = me.rootEl.lastElementChild;\r\n        me.#update(el);\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     */\r\n    open() {\r\n        this.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     */\r\n    close() {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || (isFolder && !isOpen)) me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #filter = [];\r\n    #sort = [];\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        me.#filter = [];\r\n        me.#sort = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_CHART == false ? false : globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);\r\n        GSChart.#init();        \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSChart.#init();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.reset();\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.render();\r\n    }\r\n\r\n    update(val) {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.update(val);\r\n    }\r\n\r\n    stop() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.stop();\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        if (me.#chart) me.#chart.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        const me = this;\r\n        if (me.#chart) return me.#chart.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        GSHighlight.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSHighlight.URL_LIB === false) return;\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_HLJS == false ? false : globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) me.#code.remove(`language-${oldValue}`);\r\n        if (newValue) me.#code.add(`language-${newValue}`);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        URL.revokeObjectURL(e.data.url);\r\n        const me = this;\r\n        const html = e.data.data;\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}$/languages/{v.trim}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        GSMonaco.#init();\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MONACO == false ? false : globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static #init() {\r\n        if (GSMonaco.URL_LIB == false) return;\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n        GSMonaco.#initLib();\r\n        GSMonaco.#initEnv();\r\n        GSMonaco.#initMonaco();\r\n    }\r\n\r\n    static #initLib() {\r\n        const script = document.createElement('script');\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco(own) {\r\n        if (globalThis.GS_URL_MONACO === false) return;\r\n        if (GSMonaco.#initialized) {\r\n            if (own) GSEvents.send(own, 'monaco-ready');\r\n            return;\r\n        }\r\n        const id = setInterval(() => {\r\n            if (typeof globalThis.require !== 'function') return;\r\n            require.config({ paths: { 'vs': `${GSMonaco.URL_LIB}/vs` } });\r\n            require(['vs/editor/editor.main'], () => {\r\n                clearInterval(id);\r\n                GSMonaco.#initialized = true;\r\n                GSMonaco.#initMonaco(own);\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor ? me.#editor.getValue() : '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.once('monaco-ready', me.#onMonacoReady.bind(this));\r\n        GSMonaco.#initMonaco(this);\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (monaco && language) {\r\n            const models = monaco.editor.getModels();\r\n            monaco.editor.setModelLanguage(models[0], language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (monaco && theme) monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true\r\n        };\r\n\r\n        me.#editor = monaco.editor.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n\r\n        super.onReady();\r\n\r\n        if (me.url) return me.#onURL(me.url);\r\n        if (me.target) return me.#onTarget(me.target);\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        if (GSMarkdown.URL_LIB == false) return;\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_EXTERNAL == false || globalThis.GS_URL_MARKDOWN == false ? false : globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#initLib();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    #onScriptReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);\r\n        requestAnimationFrame(() => {\r\n            me.#toCache(me.url);\r\n            me.#onURL(me.url)\r\n        });\r\n    }\r\n   \r\n    #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return me.#onScriptReady();\r\n        const script = document.createElement('script');\r\n        GSEvents.attach(me, script, 'load', me.#onScriptReady.bind(this));\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles$1","GSCacheStyles","Map","sheet","CSSStyleSheet","store","set","style","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","Array","from","cssRules","filter","selectorText","pop","sync","rule","getRule","insertRule","setRule","data","replaceAll","split","map","trim","entries","kv","updateRule","prop","isImportant","setProperty","deleteRule","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","tracing","forced","logging","tmp","nodeName","fn","console","log","Error","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","own","contextualize","accept","GSAttr","isHTMLElement","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","containsAny","GSData","Set","first","second","index","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","push","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","host","__proto__","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","Proxy","receiver","Reflect","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggle","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","chained","susspended","opt","removeEventListener","unlisten","once","r","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","offline","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise$1","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","disconnect","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","getOwnPropertyDescriptor","onStyles","unstyled","listenStyles","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","assign","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","GSElement","ready","removed","content","proxied","opts","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","hide","show","waitEvent","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","waitAnimationFrame","onReady","onBeforeReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","elements","storage","fromObject","reportValidity","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","metaKey","title","onNumberInput","onTextInput","substring","updateText","every","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","getAttrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","company","isCompany","isYear","GSDialog","STACK","isConnected","updateStack","dlg","dialog","showModal","focusable","monitorAction","onForm","onEscape","onClose","onCancel","buttonOkEl","forms","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","output","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onMouseUp","onMouseMove","updateMouse","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","substr","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","Number","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","notify","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","srcElement","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_EXTERNAL","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initLib","initEnv","initMonaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","initialized","require","config","paths","vs","disabledFeatures","onMonacoReady","monaco","models","getModels","setModelLanguage","setTheme","container","automaticLayout","GSMarkdown","converter","GS_URL_MARKDOWN","maxHeight","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick","onScriptReady","showdown","Converter","tasklists","tables"],"mappings":"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"}