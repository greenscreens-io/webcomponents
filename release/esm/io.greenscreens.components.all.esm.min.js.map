{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/base/GSLog.mjs","../../modules/head/GSBase.mjs","../../modules/head/GSDynamicStyle.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSAbortController.mjs","../../modules/base/GSPromise.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSVersion.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/controllers/OrientationController.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/base/GSGesture.mjs","../../modules/base/GSReadWriteRegistry.mjs","../../modules/base/GSAbstractReadWrite.mjs","../../modules/base/GSReadWrite.mjs","../../modules/controllers/StyleController.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSDataHandler.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSCopyright.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSOverlay.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/GSTree.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs","../../modules/components/steps/GSStep.mjs","../../modules/components/steps/GSStepStyle.mjs","../../modules/components/steps/GSSteps.mjs","../../modules/extra/GSChart.mjs","../../modules/extra/GSHighlight.mjs","../../modules/extra/GSMonaco.mjs","../../modules/extra/GSMarkdown.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.includes('.js')) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.includes('.css')) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.hasAttribute('async');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.hasAttribute('defer');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.hasAttribute('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.hasAttribute('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\nexport default class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    constructor(id) {\r\n        super();\r\n        this.id = id || GSBase.nextID();\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {string} id \r\n     * @returns {CSSRule}\r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {string} id \r\n     * @param {string|object} style \r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSDynamicStyle from \"./GSDynamicStyle.mjs\";\r\n\r\n/**\r\n * Cache for dyamically loaded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\tstatic create(id) {\r\n\t\tconst sheet = new GSDynamicStyle(id);\r\n\t\tthis.#store.set(id, sheet);\r\n\t\treturn sheet;\r\n\t}\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (style && typeof style === 'string') {\r\n\t\t\tconst sheet = GSCacheStyles.create(id);\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Get list of dynamic styles\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tstatic get dynamic() {\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst id = 'gs-dynamic';\r\n\t\tlet sheet = me.get(id);\r\n\t\tif (!sheet) {\r\n\t\t\tsheet = GSCacheStyles.create(id);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t}\r\n\t\treturn sheet;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get individual rule from dynamic styles cache\r\n\t * @param {string} id \r\n\t * @returns {CSSRule}\r\n\t */\r\n\tstatic getRule(id = '') {\r\n\t\treturn GSCacheStyles.dynamic.getRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Set dynamic element rule. Accepts string or json object representation\r\n\t * @param {string} id \r\n\t * @param {string|object} style \r\n\t */\r\n\tstatic setRule(id = '', style = '', sync = false) {\r\n\t\treturn GSCacheStyles.dynamic.setRule(id,style, sync);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {string} id  \r\n\t */\r\n\tstatic deleteRule(id = '') {\r\n\t\tGSCacheStyles.dynamic.deleteRule(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Return list of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework across all shadows\r\n\t*/\r\n\tstatic adopt(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tGSCacheStyles.set(hash, css);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic get #css() {\r\n\t\treturn '.z-10k{z-index:10000 !important;}.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\tglobalThis.GSCacheStyles = GSCacheStyles;\r\n\t\tGSCacheStyles.adopt(GSCacheStyles.#css);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tclearInterval(me.#callback);\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t}\r\n\t\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tGSCacheStyles.adopt(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled', ...super.observedAttributes];\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.disabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.disabled) return;\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.adopt(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.hasAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = false) {\r\n\t\treturn val ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.hasAttribute('shadow');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn !GSUtil.isNull(val) && (Array.isArray(val) || typeof val == \"object\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn \r\n     * @param {*} context \r\n     * @returns \r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {*} fn \r\n     * @param {*} ctx \r\n     * @returns \r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\t\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj||{}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to elemtn attributes\r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj||{}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns \r\n\t */\r\n\tstatic proxify(host, opt = {}) {\r\n\t\treturn new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = val || '';\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v=> GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str)  return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();           \r\n    }\r\n    \r\n\tstatic #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\t\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n    \r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {string} selector \r\n     * @returns \r\n     */\r\n\tstatic findRule(selector) {\r\n\t\tconst me =  GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) =>  a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        data = Array.isArray(data) ? data : [];\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns \r\n     */    \r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {string} filter Value to search for\r\n     * @param {Array<string>} fields List of proerties to serach\r\n     * @returns {boolean} Retuen true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properities\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            match = flt?.value?.toString().toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} sort \r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {number} sts previous value\r\n     * @returns {number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if(GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {boolean} v1 \r\n     * @param {boolean} v2 \r\n     * @param {number} ord \r\n     * @returns \r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n\t/**\r\n\t * Write value to JSON object into structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n\t * @param {*} value \r\n\t */\r\n\tstatic writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n        \r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n        \r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n        \r\n        tree.forEach( v => {\r\n            if(!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n\t}\r\n\r\n    static #writeSingleToOject(obj, name, value) {        \r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {string} name \r\n     * @returns \r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return undefined;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\t/**\r\n\t * Read value from JSON object by structured name.\r\n\t * Name subelements are separated by dot (users.name etc.).\r\n\t * @param {Object} obj \r\n\t * @param {String} name \r\n     * @returns {*}\r\n\t */\r\n\tstatic readFromObject(obj, name) {\r\n\t\treturn name ? name.split('.').reduce((a, v) => GSData.readFromProperty(a, v), obj) : undefined;\r\n\t}\r\n\t\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n\tstatic objectPathExist(obj, name) {\r\n        return GSData.readFromObject(obj, name) !== undefined;\r\n\t}\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head , ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {*} node \r\n\t * @returns \r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\tlet index = 0;\r\n\t\twhile ((node = node.previousElementSibling)) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @param {boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, {sanitizer}) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string|number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t} \r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {object} obj Data source key/value pairs\r\n\t */\t\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el?.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({title: obj}, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent); \r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tGSLog.error(null, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\t\t\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n \t\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Optional selector within owner\r\n\t * @param {string} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal : signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal : signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger \r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {string} type \r\n\t * @param {object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt  = null;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'copy' : \r\n\t\t\tcase 'cut' : \r\n\t\t\tcase 'paste' : \r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur' : \r\n\t\t\tcase 'focus' : \r\n\t\t\tcase 'focusin' : \r\n\t\t\tcase 'focusout' : \r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input' : \r\n\t\t\tcase 'beforeinput' : \r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown' : \r\n\t\t\tcase 'keyup' : \r\n\t\t\tcase 'keypress' : \t\t\t\t\t\t\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick' : \r\n\t\t\tcase 'mousedown' : \r\n\t\t\tcase 'mouseenter' : \r\n\t\t\tcase 'mouseleave' : \r\n\t\t\tcase 'mousemove' : \r\n\t\t\tcase 'mouseout' : \r\n\t\t\tcase 'mouseover' : \r\n\t\t\tcase 'mouseup' : \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit' : \r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart' : \r\n\t\t\tcase 'touchend' : \r\n\t\t\tcase 'touchmove' : \r\n\t\t\tcase 'touchcancel' : \t\t\t\t\t\t\t\t\t\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell' : \r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover' : \r\n\t\t\tcase 'pointerenter' :\r\n\t\t\tcase 'pointerdown' :\r\n\t\t\tcase 'pointermove' :\r\n\t\t\tcase 'pointerup' :\r\n\t\t\tcase 'pointercancel' :\r\n\t\t\tcase 'pointerout' :\r\n\t\t\tcase 'pointerleave' :\r\n\t\t\tcase 'pointerrawupdate' :\r\n\t\t\tcase 'gotpointercapture' :\r\n\t\t\tcase 'lostpointercapture' :\t\t\t\t\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\t//if (el.offline) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tconst isWin = el instanceof Window;\r\n\t\tlet elid = isWin ? el.gselid : GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tif (isWin)  {\r\n\t\t\t\tel.gselid = elid; \r\n\t\t\t} else {\r\n\t\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout); \r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t} \r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\t\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} action \r\n\t * @param {string} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\t\t\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n\r\n/**\r\n * A module loading GSAbortController class\r\n * @module base/GSAbortController\r\n */\r\n\r\n/**\r\n * Extend native AbortController with timeout \r\n * @class\r\n */\r\nexport default class GSAbortController extends AbortController {\r\n\r\n    #iid = 0;\r\n\r\n    constructor(timeout = 0) {\r\n        super();\r\n        if (!GSUtil.isNumber(timeout)) throw new Error('Timeout parameter must be number');\r\n        const me = this;\r\n        if (timeout) me.#iid = setTimeout(me.abort.bind(me), timeout);\r\n        me.signal.addEventListener('abort', () => clearInterval(me.#iid));\r\n    }\r\n\r\n    wait(timeout = 0) {\r\n        return GSEvents.wait(me.signal, 'abort', timeout);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport default class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort : me.#onAbort.bind(me)\r\n        };\r\n    }\r\n    \r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch(e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSPromise from \"./GSPromise.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout); \r\n        this.addEventListener(type, listener,  { signal:signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout); \r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     * @param {number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {     \r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {string} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n   wait(type = '', signal) {\r\n       const me = this;\r\n       const callback = (resolve, reject) => {\r\n           me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }    \r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * Difference from native BroadcastChannel is :\r\n *  - support for multiple named events\r\n *  - does not work across different pages\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                GSLog.error(null, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false, target) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(target || document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        GSDOMObserver.create(document.documentElement);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        return GSFunction.isFunctionDefined(own, name, fn);\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true)\r\n                        .filter(el => el.shadowRoot && el.unstyled !== true)\r\n                        .forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 202$ Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSVersion class\r\n * @module base/GSVersion\r\n */\r\n\r\n/**\r\n * A class with library version / build\r\n * @class\r\n */\r\nexport default class GSVersion {\r\n\r\n    get version() {\r\n        return '1.9.0';\r\n    }\r\n\r\n    get build() {\r\n        return 20240525;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSVersion from \"./GSVersion.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n    static UNIQUE = GSVersion.build;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        // if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n        if (!base) {\r\n            const val = GSLoader.NO_CACHE ? Date.now() : GSLoader.UNIQUE;\r\n            uri.searchParams.append('_dc', val);\r\n        } \r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/')+'/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = {...headers};\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt  ={ method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(null, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\r\n\t\tstyle.position = 'fixed';\r\n\t\tstyle.top = '0px';\r\n\t\tstyle.left = '0px';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.padding = '0px';\r\n\t\tstyle.transform = '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!(source && target)) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst style = source.dataset.cssId ? {} : source.style;\r\n\t\tconst astyle = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tastyle.position = 'absolute';\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.margin = '0px';\r\n\t\tstyle.transform = '';\r\n\t\tstyle.inset = GSPopper.#inset(pos);\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style, true);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tstyle.transform = `translate(${obj.x}px, ${obj.y}px)`;\t\r\n\t\tastyle.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tastyle.top = arr.top ? arr.top : '';\r\n\t\tastyle.left = arr.left ? arr.left : '';\r\n\r\n\t\tGSCacheStyles.setRule(source.dataset.cssId, style);\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, astyle);\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\r\n\t\tconst style = arrow.dataset.cssId ? {} : arrow.style;\r\n\r\n\t\tstyle.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tstyle.left = '';\r\n\t\t\tstyle.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tstyle.top = '';\r\n\t\t\tstyle.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tstyle.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\tGSCacheStyles.setRule(arrow.dataset.cssId, style);\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\t// static #BOOL = ['active', 'flat', 'selectable'];\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #attrs = 'data-attr';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\t#proxy;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t\t//this.#proxy = GSAttr.proxify(this, {\"bool\":GSItem.#BOOL});\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to join all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el), GSItem.getInjectAttributesAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttributesAttr(el) {\r\n\t\tconst v = el?.dataset?.attr;\r\n\t\treturn v ? `${GSItem.#attrs}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el, dft = '') {\r\n\t\treturn GSAttr.get(el, 'icon', dft);\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tstatic getType(el) {\r\n\t\treturn GSAttr.get(el, 'type');\r\n\t}\r\n\r\n\tget proxy() {\r\n\t\treturn this.#proxy;\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn GSItem.getType(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget injectAttributesAttr() {\r\n\t\treturn GSItem.getInjectAttributesAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget injectAttributes() {\r\n\t\treturn this.dataset.attr;\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n\r\n\tasJSON(recursive = true) {\r\n\t\treturn GSDOM.toJson(this, recursive);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.owner?.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    /**\r\n     * Component created this element\r\n     * @returns {GSElement}\r\n     */\r\n    get owner() {\r\n        return GSDOM.query(document.documentElement, this.proxy);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class OrientationController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        OrientationController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        OrientationController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tconst me = this.#host;\r\n        if (!me.offline) me.isValidOrientation ? me.show(true) : me.hide(true)\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            OrientationController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, screen.orientation, 'change', OrientationController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\nimport OrientationController from \"../controllers/OrientationController.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\t#queued;\r\n    #queue = [];\r\n\r\n\t#controllers = null;\r\n\t#orientationController = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#orientationController = new OrientationController(this);\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Is proxied HTML wrapped in GS-block\r\n\t */\r\n\tget isWrap() {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Available only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\tget unstyled() {\r\n\t\treturn this.hasAttribute('unstyled');\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (me.unstyled || !me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Element dynamic style id\r\n\t */\r\n\tget styleID() {\r\n\t\treturn `${this.tagName}-${this.id}`.toLocaleLowerCase();\r\n\t}\r\n\r\n\t#createStyleClass() {\r\n\t\tconst me = this;\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tGSCacheStyles.setRule(me.styleID, me.getStyle());\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\treturn GSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\treturn GSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Send event\r\n\t * @param {*} name \r\n\t * @param {*} obj \r\n\t * @param {*} bubbles \r\n\t * @param {*} composed \r\n\t * @param {*} cancelable \r\n\t */\r\n\temit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\twaitEvent(name = '', timeout = 0) {\r\n\t\treturn GSEvents.wait(this, name, timeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tGSID.setIf(me);\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#controllers?.forEach((c) => c.hostConnected?.());\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#controllers?.forEach((c) => c.hostDisconnected?.());\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tGSCacheStyles.deleteRule(me.styleID);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t\tme.#controllers = null;\r\n\t}\r\n\r\n    addController(controller) {\r\n        const me = this;\r\n        (me.#controllers ??= new Set()).add(controller);\r\n        if (me.isConnected && me.self !== undefined) {\r\n            controller.hostConnected?.();\r\n        }\r\n    }\r\n\r\n    removeController(controller) {\r\n        this.#controllers?.delete(controller);\r\n    }\r\n\r\n\t/**\r\n\t * Rerender the whole component\r\n\t */\r\n\trepaint() {\r\n\t\tconst me = this;\r\n\t\tme.disconnectedCallback();\r\n\t\tme.#removed = false;\r\n\t\tme.#ready = false;\r\n\t\tme.connectedCallback();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\r\n        me.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n\t\t\tGSEvents.waitAnimationFrame(() => {\r\n\t\t\t\twhile (me.#queue.length > 0) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tme.#scheduledAttributes(...me.#queue.shift());\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tGSLog.error(null, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tme.#queued = false;\r\n\t\t\t});\r\n        });\r\n\t}\r\n\r\n\t#scheduledAttributes(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') GSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t//if (me.#ready) \r\n\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\tme.#controllers?.forEach((c) => c.attributeCallback?.());\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called after component is generated, with all tempaltes inplace.\r\n\t * Use in inherited classes t odo a preprocessing before notifying / register component.\r\n\t */\r\n\tasync onBeforeReady() {\r\n\t}\r\n\r\n\tasync #doReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.#ready) return;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tawait me.onBeforeReady();\r\n\t\ttry {\r\n\t\t\tme.#controllers?.forEach((c) => c.onReady?.());\r\n\t\t\tGSFunction.callFunction(me.onready, me);\r\n\t\t\tme.emit('ready');\r\n\t\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t\t} finally {\r\n\t\t\tme.onReady();\r\n\t\t}\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #applyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tme.#createStyleClass();\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = me.isWrap ? GSDOM.parseWrapped(me, src, true) : GSDOM.parse(src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(me.owner, target) || GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\tawait me.#applyTemplate();\r\n\t\tGSEvents.waitAnimationFrame(() => me.#doReady(), true);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Localization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return GSLog.error(null, `${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                GSLog.error(me, e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment, placeholder');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * Used internally, see GSQuery class.\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.wrap(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSGesture class\r\n * @module base/GSGesture\r\n */\r\nimport GSEvents from \"./GSEvents.mjs\";\r\n\r\n/**\r\n * A class for handling touch swipe and long press events.\r\n * @class\r\n */\r\nexport default class GSGesture {\r\n\r\n    #xDiff = 0;\r\n    #yDiff = 0;\r\n    #xDown = null;\r\n    #yDown = null;\r\n    #element = null;\r\n    #bindings = null;\r\n\r\n    #swipe = false;\r\n    #tap = false;\r\n    #longPress = false;\r\n\r\n    // setTimeout id for longpress\r\n    #delay = 0;\r\n\r\n    // longpress delay\r\n    static timeout = 1500;\r\n\r\n    /**\r\n     * Constrictor to attach Gesture featuer t oan HTML element\r\n     * @param {HTMLElement} element \r\n     * @param {boolean} swipe Monitor swipe gesture\r\n     * @param {boolean} tap Monitor tap gesture\r\n     * @param {boolean} longPress Monitor long press gesture\r\n     */\r\n    constructor(element, swipe, tap, longPress) {\r\n        const me = this;\r\n        me.#swipe = swipe;\r\n        me.#tap = tap;\r\n        me.#longPress = longPress;        \r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n        me.#element = typeof (element) === 'string' ? document.querySelector(element) : element;\r\n\r\n        me.#bindings = {\r\n            move : me.#handleTouchMove.bind(me),\r\n            start : me.#handleTouchStart.bind(me),\r\n            end : me.#handleTouchEnd.bind(me)\r\n        };\r\n        GSEvents.attach(me.#element, me.#element, 'touchmove', me.#bindings.move, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchstart', me.#bindings.start, false);\r\n        GSEvents.attach(me.#element, me.#element, 'touchend', me.#bindings.end, false);\r\n    }\r\n\r\n    /**\r\n     * Remove gesture events from element\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        GSEvents.remove(me.#element, me.#element, 'touchmove', me.#bindings.move);\r\n        GSEvents.remove(me.#element, me.#element, 'touchstart', me.#bindings.start);\r\n        GSEvents.remove(me.#element, me.#element, 'touchend', me.#bindings.end);\r\n    }\r\n\r\n    #handleTouchStart(evt) { \r\n        const me = this;\r\n        me.#xDown = evt.touches[0].clientX;\r\n        me.#yDown = evt.touches[0].clientY;\r\n        if (me.#longPress) setTimeout(me.#onLongPress.bind(me), GSGesture.timeout);\r\n    }\r\n\r\n    #handleTouchEnd(evt) {\r\n        clearTimeout(this.#delay);\r\n    }\r\n\r\n    #handleTouchMove(evt) {\r\n\r\n        const me = this;\r\n\r\n        if (!me.#xDown || !me.#yDown) {\r\n            return;\r\n        }\r\n\r\n        if (!me.#swipe) return;\r\n\r\n        const xUp = evt.touches[0].clientX;\r\n        const yUp = evt.touches[0].clientY;\r\n\r\n        if (me.#longPress) {\r\n            const isMoving = Math.abs(me.#xDiff) > 10 &&  Math.abs(me.#yDiff) > 10;\r\n            if (isMoving) clearTimeout(me.#delay);\r\n        }\r\n\r\n        me.#xDiff = me.#xDown - xUp;\r\n        me.#yDiff = me.#yDown - yUp;\r\n\r\n        // Most significant.\r\n        const isHorisontal = Math.abs(me.#xDiff) > Math.abs(me.#yDiff);\r\n\r\n        let name = '';\r\n        if (isHorisontal) {\r\n            name = me.#xDiff > 0 ? 'swipe-left' : 'swipe-right';\r\n        } else {\r\n            name = me.#yDiff > 0 ? 'swipe-up' : 'swipe-down';\r\n        }\r\n\r\n        GSEvents.send(me.#element, name, evt);\r\n\r\n        // Reset values.\r\n        me.#xDown = null;\r\n        me.#yDown = null;\r\n    }\r\n\r\n    #onLongPress() {\r\n        GSEvents.send(me.#element, 'long-press');\r\n    }\r\n\r\n    /**\r\n     * Return number of fingers used in touch event\r\n     * @param {Event} e \r\n     * @returns {numner}\r\n     */\r\n    static fingers(e) {\r\n\t\treturn e.detail.touches?.length;\r\n\t}\r\n\r\n    /**\r\n     * Attach swipe event to a element\r\n     * @param {HTMLElement} element \r\n     * @returns \r\n     */\r\n    static attach(element, swipe = true, tap = false, longPress = false) {\r\n        return new GSGesture(element, swipe, tap, longPress);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\n const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n export default GSReadWriteRegistry;\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSReadWriteRegistry from \"./GSReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * A module loading GSAbstractReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for data read/write for various components such as grid/form/dynaimc menu etc.\r\n * @Class\r\n */\r\nexport default class GSAbstractReadWrite extends GSEvent {\r\n\r\n    #id = null;\r\n\r\n    constructor(name, enabled = true) {\r\n        super();\r\n        const me = this;\r\n        me.#id = name || GSID.next();\r\n        if (enabled) me.enable();\r\n    }\r\n\r\n    /**\r\n     * Unique data handler name\r\n     * @returns {string} \r\n     */\r\n    get id() {\r\n        return this.#id;\r\n    }\r\n\r\n    /**\r\n     * Register into global data handler registry\r\n     */\r\n    enable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.register(me);\r\n        me.emit('enabled');\r\n    }\r\n\r\n    /**\r\n     * Unregister from global data handler registry\r\n     */\r\n    disable() {\r\n        const me = this;\r\n        GSReadWriteRegistry.unregister(me);\r\n        me.emit('disabled');\r\n    }\r\n\r\n    /**\r\n     * Check if data handler is registered in global registry\r\n     * @returns {boolean}\r\n     */\r\n    get isRegistered() {\r\n        return GSReadWriteRegistry.find(this.id) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Initiate data read from remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */\r\n    async read(owner) {\r\n        const me = this;\r\n        let data = null;\r\n        try {\r\n            data = await me.onRead(owner);\r\n            if (data) me.emit('read', {owner : owner, data: data});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'read', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Initiate data write to remote\r\n     * @param {HTMLElement} owner \r\n     * @returns {Array|Object} JSON data response\r\n     */    \r\n    async write(owner, data) {\r\n        const me = this;\r\n        let result = null;\r\n        try {\r\n            result = await me.onWrite(owner, data);\r\n            if (result) me.emit('write', {owner : owner, data: data, result : result});\r\n        } catch (e) {\r\n            me.emit('error', {type : 'write', error: e, owner : owner, data: data});\r\n            throw e;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement read logic\r\n     * @param {} owner \r\n     * @returns \r\n     */\r\n    async onRead(owner) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement read operation');\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class to implement write logic\r\n     * @param {} owner \r\n     * @param {} data\r\n     * @returns \r\n     */    \r\n    async onWrite(owner, data) {\r\n        throw new Error('Extend base GSAbstractReadWrite to implement write operation');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSAbstractReadWrite from \"./GSAbstractReadWrite.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWrite class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Generic Class for QUERY/REST data read/write for various components such as grid/form/dynamic menu etc.\r\n * Also, Green Screens Quark Engine or external functions are supported.\r\n * If mode=\"\", instance is used as local reader. \r\n * Use events to detect read/write requests or manually populate using this.setData([...]) \r\n * @Class\r\n */\r\nexport default class GSReadWrite extends GSAbstractReadWrite {\r\n\r\n    static #MODES = ['', 'rest', 'query', 'quark'];\r\n    static #METHOD = ['GET', 'PUT', 'POST', 'DELETE'];\r\n\r\n    #src = '';\r\n    #headers = {};\r\n    #reader = 'GET';\r\n    #writer = 'POST';\r\n    #action = '';\r\n    #mode = '';\r\n\r\n    #skip = 0;\r\n    #limit = 0;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n\r\n    /**\r\n     * Instance constructor\r\n     * @param {string} name Unique handler name\r\n     * @param {boolean} enabled Automatically registe in global registry. \r\n     */\r\n    constructor(name, enabled) {\r\n        super(name, enabled);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * rest, query, quark \r\n     * @returns {string} Operational mode\r\n     */\r\n    get mode() {\r\n        return GSUtil.normalize(this.#mode);\r\n    }\r\n\r\n    /**\r\n     * Handler operational mode\r\n     * Values: '', query, rest, quark\r\n     * @var {String} \r\n     */\r\n    set mode(val) {\r\n        const me = this;\r\n        val = GSUtil.normalize(val);\r\n        const isok = GSReadWrite.#MODES.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid mode, allowed: ${GSReadWrite.#MODES}`);\r\n        if (me.#mode === 'quark' && me.#mode != val) {\r\n            me.#reader = 'GET';\r\n            me.#writer = 'POST';\r\n        }\r\n        return this.#mode = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * @returns {string} Values GET,POST,PUT\r\n     */\r\n    get reader() {\r\n        return this.#reader;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for reader (query/rest)\r\n     * Values GET,POST,PUT\r\n     * @var {String} \r\n     */    \r\n    set reader(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return me.#reader = val;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * @returns {string} Values POST,PUT\r\n     */\r\n    get writer() {\r\n        return this.#writer;\r\n    }\r\n\r\n    /**\r\n     * HTTP method for writer (query/rest)\r\n     * Values POST,PUT\r\n     * @var {String} \r\n     */       \r\n    set writer(val) {\r\n        const me = this;\r\n        const isok = me.isQuark ? true : GSReadWrite.#METHOD.includes(val);\r\n        if (!isok) throw new Error(null, `Invalid method, allowed: ${GSReadWrite.#METHOD}`);\r\n        return this.#writer = val;\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headers\r\n     * @returns {Object} Json structure\r\n     */\r\n    get headers() {\r\n        return {...this.#headers};\r\n    }\r\n\r\n    /**\r\n     * Custom HTTP headersas String or Json structure\r\n     * @var {Object} \r\n     */    \r\n    set headers(val = {}) {\r\n        val = GSUtil.toJson(val);\r\n        const me = this;\r\n        me.#headers = {...val};\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @returns {string} \r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    /**\r\n     * Base URL part\r\n     * @var {String} \r\n     */    \r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @returns {Number} \r\n     */\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    /**\r\n     * Number of records to return\r\n     * @var {Number} \r\n     */    \r\n    set limit(val = 10) {\r\n        this.#limit = GSUtil.asNum(val, 10);\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @returns {Number} \r\n     */\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    /**\r\n     * Number of records to skip\r\n     * @var {Number} \r\n     */        \r\n    set skip(val = 0) {\r\n        this.#skip = GSUtil.asNum(val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     * @returns {Array<Object>} \r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n    }\r\n\r\n    /**\r\n     * Generated URL segment based on selected mode (query/rest)\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     * @returns {string} \r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return me.#action || def;\r\n    }\r\n\r\n    /**\r\n     * Set custom URL segment to be attached to based 'src'.\r\n     * Format depends on mode[query|rest]\r\n     * @var {String}\r\n     */\r\n    set action(val = '') {\r\n        const me = this;\r\n        me.#action = val;\r\n    }\r\n\r\n    /**\r\n    * Generate URL from src and mode type\r\n    */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.#src, me.#skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(src)) throw new Error('Attribute \"src\" not set!');\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    /**\r\n     * If handler is local for manual data entry\r\n     * @returns {boolean}\r\n     */\r\n    get isOffline() {\r\n        return this.mode === '';\r\n    }\r\n\r\n    /**\r\n     * If handler is for Green Screens Quark Engine or custom global function.\r\n     * @returns {boolean}\r\n     */\r\n    get isQuark() {\r\n        return this.mode === 'quark';\r\n    }\r\n\r\n    /**\r\n     * If handler is for HTTP requests (query|rest)\r\n     * @returns {boolean}\r\n     */\r\n    get isRemote() {\r\n        return ['rest' ,'query'].includes(this.mode);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @returns {Array<Object>} Json Array data loaded \r\n     */\r\n    async onRead(owner) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#reader) return super.onRead(owner);\r\n        if (me.isRemote) return await GSLoader.load(me.url, me.#reader, me.#headers, true);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Reader quark function not found!')\r\n        return fn(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Override in inherited class\r\n     * @param {} owner Calling HTMLElement\r\n     * @param {Object} data JSON object to send to the remote\r\n     * @returns {Object} Json Object with write response\r\n     */\r\n    async onWrite(owner, data) {\r\n        const me = this;\r\n        if (me.isOffline) return;\r\n        if (!me.#writer) return super.onWrite(owner);\r\n        if (!me.isRemote) return await GSLoader.load(me.url, me.#writer, me.#headers, true, data);\r\n        if (!me.isQuark) return;\r\n        const fn = GSFunction.parseFunction(me.#reader);\r\n        if (!fn) throw new Error('Writer quark function not found!')\r\n        return fn(data);\r\n    }\r\n\r\n    /**\r\n     * Register generic handler under unique name.\r\n     * @param {string} name Unique handler name\r\n     * @returns {GSReadWrite} Data handler instance\r\n     */\r\n    static register(name) {\r\n        return new GSReadWrite(name, true);\r\n    }\r\n\r\n}","import GSEvents from \"../base/GSEvents.mjs\";\r\n\r\nexport default class StyleController {\r\n\r\n    static #controllers = new Set();\r\n\r\n    #host;\r\n\r\n    constructor(host) {\r\n        const me = this;\r\n        me.#host = host;\r\n        me.#host.addController(me);\r\n    }\r\n\r\n    hostConnected() {\r\n        StyleController.#controllers.add(this);\r\n    }\r\n\r\n    hostDisconnected() {\r\n        StyleController.#controllers.delete(this);\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        if (name === 'orientation') this.handle();\r\n\t}\r\n    \r\n    handle() {\r\n\t\tthis.#host?.updateUI();\r\n    }\r\n\r\n    static #callback(e) {\r\n        requestAnimationFrame(() => {\r\n            StyleController.#controllers.forEach(c => c.handle());\r\n        });\r\n    }\r\n \r\n    static {\r\n        GSEvents.attach(window, document, 'gs-style', StyleController.#callback);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        const editable = ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(focused.tagName) > -1;\r\n        if (!(editable && e.altKey)) return;\r\n\r\n        GSEvents.prevent(e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, `name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */ \r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDataAttr.observe();\r\n    }\r\n\r\n    static observe(owner) {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult, false, owner);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true, owner);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (el.dataset.gsAttrMon === 'true') return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        GSID.setIf(el);\r\n        el.dataset.gsAttrMon = true;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => !gs.includes(el)).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        const css = GSCSSMap.getComputedStyledMap(el);\r\n\t\treturn css.matches('display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        obj.list.filter(el => el.toggle).forEach(el => el.toggle());\r\n\r\n        obj.list = obj.list.filter(el => !el.toggle);\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const attrs = GSAttr.flattenJson(GSUtil.toJson(source.dataset.attr));\r\n        const html = isComp ? `<${inject} ${attrs}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //GSLog.error(null, e);`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        if (GSUtil.isString(o)) o = {value : o};\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSLog from \"../../base/GSLog.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSReadWriteRegistry from \"../../base/GSReadWriteRegistry.mjs\";\r\n\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        if (GSUtil.asBool(el.dataset?.gsIgnore)) return false;\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        const form = document.createElement('form', { is: 'gs-ext-form' });\r\n        GSAttr.set(form, 'is', 'gs-ext-form');\r\n        Array.from(el.attributes).forEach(v => GSAttr.set(form, v.name, v.value));\r\n        Array.from(el?.childNodes || []).forEach(child => GSDOM.appendChild(form, child));\r\n        GSDOM.insertAdjacent(el, form, 'afterend');\r\n        GSDOM.removeElement(el);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSFormExt.observedAttributes);\r\n    }\r\n\r\n    /**\r\n     * List of observable element attributes\r\n     * @returns {Array<string>} Monitored attributes orientation|id\r\n     */\r\n    static get observedAttributes() {\r\n        return ['storage'];\r\n    }\r\n\r\n    #last;\r\n    #controller;\r\n    #reader;\r\n\r\n    #queued;\r\n    #queue = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this.#reader = this.#onRead.bind(this);       \r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#attachEvents(me);\r\n        GSEvents.sendSuspended(me, 'form', { type: 'init', data: me }, true, true);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        me.#controller?.abort();\r\n        me.#controller = null;\r\n        me.#last = null;\r\n        me.#reader = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n\r\n        this.#queue.push(arguments);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(() => {\r\n            while (me.#queue.length > 0) {\r\n                try {\r\n                    me.attributeCallback(...me.#queue.shift());\r\n                } catch(e) {\r\n                    GSLog.error(null, e);\r\n                }\r\n            }\r\n            me.#queued = false;\r\n        });\r\n\r\n        //requestAnimationFrame(() => me.attributeCallback(name, oldValue, newValue));\r\n    }\r\n\r\n    attributeCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (name === 'storage') return me.#onStorage(oldValue, newValue);\r\n    }\r\n\r\n    disable() {\r\n        GSDOM.disableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    enable() {\r\n        GSDOM.enableInput(this, 'input, textarea, select, .btn', false, 'gsForm');\r\n    }\r\n\r\n    reset() {\r\n        super.reset();\r\n        this.read();\r\n    }\r\n\r\n    submit() {\r\n        return this.#onSubmit();\r\n    }\r\n\r\n    onError(e) {\r\n        GSLog.error(this, e);\r\n    }\r\n\r\n    validate() {\r\n        const me = this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) me.reportValidity();\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Overide native to pickup all form elements, including ones in shadow dom\r\n     */\r\n    get elements() {\r\n        return GSDOM.queryAll(this, 'input,select,output,textarea');\r\n    }\r\n\r\n    get storage() {\r\n        return GSAttr.get(this, 'storage', '');\r\n    }\r\n\r\n    set storage(val = '') {\r\n        GSAttr.set(this, 'storage', val);\r\n    }\r\n\r\n    set asJSON(data) {\r\n        const me = this;\r\n        me.#last = data;\r\n        GSDOM.fromObject(me, data);\r\n        return me.validate();\r\n    }\r\n\r\n    get asJSON() {\r\n        return GSDOM.toObject(this);\r\n    }\r\n\r\n    // @Deprecated\r\n    set data(data) {\r\n        return this.asJSON = data;\r\n    }\r\n\r\n    // @Deprecated\r\n    get data() {\r\n        return this.asJSON;\r\n    }\r\n\r\n    get #handler() {\r\n        return GSReadWriteRegistry.find(this.storage);\r\n    }\r\n\r\n    async #onStorage(oldValue, newValue) {\r\n        if (newValue == oldValue) return;\r\n        const me = this;\r\n        me.#controller?.abort();\r\n        const old = GSReadWriteRegistry.find(oldValue);\r\n        GSEvents.remove(me, old, 'read', me.#reader);\r\n        if (!newValue) return;\r\n        me.#controller = new AbortController();\r\n        await GSReadWriteRegistry.wait(newValue, me.#controller.signal);\r\n        GSEvents.attach(me, me.#handler, 'read', me.#reader);\r\n        me.read();\r\n    }\r\n\r\n    async read() {\r\n        const me = this;\r\n        await me.#handler?.read(me);\r\n    }\r\n\r\n    async write() {\r\n        const me = this;\r\n        me.#handler?.write(me, me.asJSON);\r\n    }\r\n\r\n    #attachEvents(me) {\r\n        me.action = '#';\r\n        GSEvents.attach(me, me, 'submit', me.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'reset', me.read.bind(me));\r\n        GSEvents.attach(me, me, 'form-field', me.#onField.bind(me));\r\n    }\r\n\r\n    #onField(e) {\r\n        const me = this;\r\n        const el = e.detail;\r\n        if (el && me.#last) {\r\n            GSDOM.fromObject2Element(el, me.#last);\r\n        }\r\n    }\r\n\r\n    #onRead(e) {\r\n        if (e.detail.data) this.asJSON = e.detail.data;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {Event} e \r\n     * @returns {boolean} validity status\r\n     */\r\n    #onSubmit(e) {\r\n        GSEvents.prevent(e, true);\r\n        const me = this;\r\n        const isValid = me.validate();\r\n        if (isValid) me.write();\r\n        const data = { type: 'submit', data: me.asJSON, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n        return isValid;\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .filter(el => GSDOM.isVisible(el))\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\nimport GSDOMObserver from \"../../base/GSDOMObserver.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #wordop = ['KeyC', 'KeyV', 'KeyX', 'KeyA'];\r\n    static #copycut = ['KeyC', 'KeyX'];\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #changed = false;\r\n    #revealing = false;\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n        GSDOMObserver.registerFilter(GSInputExt.#onMonitorFilter, GSInputExt.#onMonitorResult);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return GSDOM.isFormElement(el);\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSEvents.send(el, 'form-field', el, true, true, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        if (me.autofocus) me.focus();\r\n        setTimeout(me.#onDataChange.bind(me), 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#masks = [];\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    /**\r\n     * Allow password field reveal\r\n     */\r\n    get reveal() {\r\n        return this.hasAttribute('reveal');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.includes(v)) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keyup', me.#onKeyUp.bind(me));\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el) || GSDOM.isButtonElement(el);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el.closest('form'), 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.mask && me.value === me.mask) me.value = '';\r\n        if (!me.checkValidity()) return me.reportValidity();\r\n        try {\r\n            if (me.mask && me.#changed) {\r\n                GSEvents.send(me, 'change', {}, true, true, true);\r\n            }\r\n            if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n        } finally {\r\n            me.#changed = false;\r\n        }\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #isReveal(e) {\r\n        return this.reveal && e.key === 'Shift' && e.altKey && e.shiftKey && this.type === 'password';\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        if (e.key === 'Shift' && me.#revealing) {\r\n            me.type = 'password';\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const me = this;\r\n\r\n        /* interfere with gsformext\r\n        if (e.key === 'Enter') {\r\n            GSEvents.send(me, 'action', { type: 'input', source: e }, true, false, true);\r\n            return;\r\n        }\r\n        */\r\n\r\n        if (me.#isReveal(e)) {\r\n            me.#revealing = true;\r\n            me.type = 'text';\r\n        }\r\n\r\n        \r\n        if (!me.mask) return;\r\n        \r\n        if (e.code === 'Tab') {\r\n            if (!me.checkValidity()) {\r\n                GSEvents.prevent(e);\r\n                me.reportValidity();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (e.ctrlKey) {\r\n            const wordop = GSInputExt.#wordop.includes(e.code);\r\n            const copycut = GSInputExt.#copycut.includes(e.code);\r\n            // if ctrl+[c,a,x,v] operation\r\n            if (wordop) {\r\n                // if ctrl+[c,x] operation and invalid, prevent\r\n                if (copycut && !me.checkValidity()) {\r\n                    me.reportValidity();\r\n                    return GSEvents.prevent(e);\r\n                }\r\n                return;\r\n            } \r\n        }\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.code === 'Delete') {\r\n            if(pos2 === tmp.length) return;\r\n            handle = true;\r\n            while(pos <= pos2) {\r\n                tmp[pos] = me.mask[pos];\r\n                pos++;\r\n            }\r\n            pos = pos1;\r\n        }\r\n\r\n        if (e.code === 'Backspace') {\r\n            if(pos1 === 0) return;\r\n            handle = true;\r\n            while(pos2 >= pos1) {\r\n                pos2--;\r\n                if (pos2 >=0) tmp[pos2] = me.mask[pos2];\r\n            }\r\n            pos = pos1-1;            \r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        me.#changed = true;        \r\n        //return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        if (e.ctrlKey ||e.altKey||e.shiftKey||e.metaKey||e.key.length!==1) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        const mask = me.#masks[pos1];\r\n\r\n        if (mask instanceof RegExp) {\r\n            mask.lastIndex = 0;\r\n            if (!mask.test(e.key)) {\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            }\r\n            tmp[pos1] = e.key;\r\n        } else {\r\n            tmp[pos1] = me.mask[pos1];    \r\n        }\r\n\r\n\r\n        while(pos2 > pos1) {\r\n            tmp[pos2] = me.mask[pos2];\r\n            pos2--;\r\n        }\r\n\r\n        me.value = me.formatMask(tmp.join(''))\r\n        me.setSelectionRange(pos1 + 1, pos1 + 1);       \r\n        me.#changed = true;\r\n        //GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        /*\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n        */\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        me.emit('time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSData from \"../base/GSData.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSReadWrite from \"../base/GSReadWrite.mjs\";\r\nimport GSReadWriteRegistry from \"../base/GSReadWriteRegistry.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDataHandler class\r\n * @module components/GSDataHandler\r\n */\r\n\r\n/**\r\n * GUI element for GSReadWrite for easier usage\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDataHandler extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-data-handler', GSDataHandler);\r\n        Object.seal(GSDataHandler);\r\n    }\r\n\r\n    static observeAttributes(attributes) {\r\n        return GSData.mergeArrays(attributes, GSDataHandler.observedAttributes);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['src', 'limit', 'skip', 'action', 'mode', 'reader', 'writer'];\r\n    }\r\n\r\n    #handler = null;\r\n    #reader = null;\r\n    #writer = null;\r\n    #error = null;\r\n    #lifoReadRef = null;\r\n    #requestID = null;\r\n    #external = false;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        if (!me.id) throw new Error('Element ID is required attribute!');\r\n        me.#initLIFO();\r\n        me.#reader = me.#onRead.bind(this);\r\n        me.#writer = me.#onWrite.bind(this);\r\n        me.#error = me.#onError.bind(this);\r\n        //me.#handler = new GSReadWrite(me.id, false);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSComponents.store(me);\r\n        me.#requestID = requestAnimationFrame(() => {\r\n            me.#requestID = null;\r\n            me.#initHandler();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n        if (me.#requestID) cancelAnimationFrame(me.#requestID);\r\n        if (!me.#external) me.#handler?.disable();\r\n        me.#requestID = null;\r\n        me.#handler = null;\r\n        me.#reader = null;\r\n        me.#writer = null;\r\n        me.#error = null;\r\n        me.#lifoReadRef = null;\r\n    }\r\n\r\n    /**\r\n     * Called when element attribute changed\r\n     *  \r\n     * @param {string} name  Attribute name\r\n     * @param {string} oldValue Old value before change\r\n     * @param {string} newValue New value after change\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue === newValue) return;\r\n        if (GSComponents.hasSetter(me.#handler, name)) {\r\n            let err = null;\r\n            try {\r\n                me.#handler[name] = newValue;\r\n                if (name === 'mode') {\r\n                    me.writer = me.#handler.writer;\r\n                    me.reader = me.#handler.reader;\r\n                }\r\n                if (name === 'writer') return;\r\n                if(me.isRegistered) me.#lifoReadRef();\r\n            } catch (e) {\r\n                me[name] = oldValue;\r\n                GSLog.error(this, e);\r\n            } \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * TODO - refactor for GSEvents.wait\r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(name, (evt) => resolve(evt.detail));\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    on(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    off(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.on(name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.off(name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    async #initHandler() {\r\n\r\n        const me = this;\r\n\r\n        me.#handler?.disable();\r\n        me.#unlistenHandler();\r\n\r\n        // manual store, not linked to external source\r\n        if (me.#isInternal) {\r\n            me.#handler = new GSReadWrite(me.id, !me.isOffline);\r\n        } else {\r\n            me.#handler = await GSReadWriteRegistry.wait(me.id);\r\n            me.#external = true;\r\n        }\r\n\r\n        me.#updateHandler();\r\n        me.#listenHandler();\r\n        // me.read();\r\n        GSEvents.send(me, 'ready', {}, true, true);\r\n    }\r\n\r\n    get #isInternal() {\r\n        const me = this;\r\n        return (me.src || me.mode || me.reader || me.writer);\r\n    }\r\n\r\n    #updateHandler() {\r\n        const me = this;\r\n        if (!me.#handler) return;\r\n\r\n        me.#handler.src = me.src;\r\n        me.#handler.mode = me.mode;\r\n        me.#handler.action = me.action;\r\n        me.#handler.reader = me.reader;\r\n        me.#handler.writer = me.writer;\r\n\r\n        me.#handler.limit = me.limit;\r\n        me.#handler.skip = me.skip;\r\n        me.#handler.sort = me.sort;\r\n        me.#handler.filter = me.filter;\r\n    }\r\n\r\n    #listenHandler() {\r\n        const me = this;\r\n        me.attachEvent(me.#handler, 'read', me.#reader);\r\n        me.attachEvent(me.#handler, 'write', me.#writer);\r\n        me.attachEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #unlistenHandler() {\r\n        const me = this;\r\n        me.removeEvent(me.#handler, 'read', me.#reader);\r\n        me.removeEvent(me.#handler, 'write', me.#writer);\r\n        me.removeEvent(me.#handler, 'error', me.#error);\r\n    }\r\n\r\n    #verifyHandler() {\r\n        const me = this;\r\n        if (me.isOffline || me.isRegistered) return;\r\n        throw new Error('Data handler not initialized!');\r\n    }\r\n\r\n    #onRead(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onRead(e.detail.data);\r\n    }\r\n\r\n    #onWrite(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onWrite(e.detail.data);\r\n    }\r\n\r\n    #onError(e) {\r\n        const me = this;\r\n        if (me.dataset.gsDebug) GSLog.log(me, JSON.stringify(e.detail));\r\n        if (me.isRegistered) me.onError(e.detail);\r\n    }\r\n\r\n    #initLIFO() {\r\n        const me = this;\r\n        me.#lifoReadRef = GSFunction.callOnceLifo(me.#lifoReadRefCallback, me);\r\n    }\r\n\r\n    #lifoReadRefCallback() {\r\n        const me = this;\r\n        me.#initLIFO();\r\n        return me.#lifoRead();\r\n    }\r\n\r\n    #lifoRead() {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        return me.#handler?.read(me);\r\n    }\r\n\r\n    #defaultReader(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'GET';\r\n    }\r\n\r\n    #defaultWriter(val) {\r\n        return this.mode === 'quark' ? val || '' : val || 'POST';\r\n    }    \r\n\r\n    /**\r\n     * Callback for data read result\r\n     */\r\n    onRead(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback for data write result\r\n     * @param {*} obj \r\n     */\r\n    onWrite(obj) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Callback on data red/write error\r\n     * @param {*} obj \r\n     */\r\n    onError(obj) {\r\n\r\n    }\r\n\r\n    read() {\r\n        return this.#lifoReadRef();\r\n    }\r\n\r\n    write(data) {\r\n        const me = this;\r\n        me.#verifyHandler();\r\n        me.#handler?.write(me, data);\r\n    }\r\n\r\n    load() {\r\n        return this.read();\r\n    }\r\n\r\n    save(data) {\r\n        return this.write(data);\r\n    }\r\n\r\n    get isRegistered() {\r\n        return this.#handler?.isRegistered === true;\r\n    }\r\n\r\n    get isOffline() {\r\n        return this.#handler?.isOffline;\r\n    }\r\n\r\n    /**\r\n     * Base URL for remote service\r\n     */\r\n    get src() {\r\n        return GSAttr.get(this, 'src', '');\r\n    }\r\n\r\n    set src(val = '') {\r\n        return GSAttr.set(this, 'src', val);\r\n    }\r\n\r\n    /**\r\n     * Parameterized query segment\r\n     */\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'mode', me.src ? 'query':'');\r\n    }\r\n\r\n    set mode(val) {\r\n        return GSAttr.set(this, 'mode', val || 'query');\r\n    }\r\n\r\n    /**\r\n     * HTTP Read operation\r\n     */\r\n    get reader() {\r\n        const me = this;\r\n        return GSAttr.get(this, 'reader', me.#defaultReader());\r\n    }\r\n\r\n    set reader(val) {\r\n        const me = this;\r\n        return GSAttr.set(me, 'reader', me.#defaultReader(val));\r\n    }\r\n\r\n    /**\r\n     * HTTP write operation\r\n     */\r\n    get writer() {\r\n        const me = this;      \r\n        return GSAttr.get(me, 'writer', me.#defaultWriter());\r\n    }\r\n\r\n    set writer(val) {\r\n        const me = this;      \r\n        return GSAttr.set(me, 'writer', me.#defaultWriter(val));\r\n    }\r\n\r\n    /**\r\n     * Records to retrieve\r\n     */\r\n    get limit() {\r\n        return GSAttr.getAsNum(this, 'limit', 0);\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        return GSAttr.setAsNum(this, 'limit', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Records to skip\r\n     */\r\n    get skip() {\r\n        return GSAttr.getAsNum(this, 'skip', 0);\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        return GSAttr.setAsNum(this, 'skip', val, 0);\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#handler?.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isJsonString(val) ? JSON.parse(val) : val;\r\n            me.#handler.filter = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#handler?.sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        if (me.#handler) {\r\n            val = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n            me.#handler.sort = val;\r\n        }\r\n        // me.#lifoReadRef();\r\n    }\r\n\r\n    get isExternal() {\r\n        return this.#external;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n    #pause = false;\r\n    #interval = 0;\r\n    #last = 0;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        clearInterval(this.#interval);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        me.emit('action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    #billboard() {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        if (items.length === 0) return;\r\n        if (me.message) {\r\n            me.#last = -1;\r\n        } else {\r\n            me.message = items[0].title;\r\n        }\r\n        me.#interval = setInterval(() => {\r\n            if (me.#pause) return;\r\n            me.#last++;\r\n            if (me.#last >= items.length ) me.#last = 0;\r\n            me.message = items[me.#last].title;\r\n        }, me.delay * 1000);\r\n        me.attachEvent(me.self, 'mouseover', () => me.#pause = true);\r\n        me.attachEvent(me.self, 'mouseout', () => me.#pause = false);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;        \r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        me.#billboard();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.self?.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(me.query('slot'), me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css} ${this.styleID}\" data-css-id=\"${this.styleID}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.setAsBool(this, 'dismissible', val);\r\n    }\r\n\r\n    get delay() {\r\n        return GSAttr.getAsNum(this, 'delay', 5);\r\n    }\r\n\r\n    set delay(val = 5) {\r\n        return GSAttr.setAsNumt(this, 'delay', val);\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    } \r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        me.emit('action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const opts = GSItem.getAttrs(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${opts} ${disabled} title=\"${me.comment}\" aria-label=\"${me.ariaLabel}\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        this.#date = null;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        me.#updateTarget(date);\r\n        me.emit('date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css} ${this.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n  #csscnt = 0;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    GSDOM.toggleClass(me, me.id, true);    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);    \r\n    GSCacheStyles.deleteRule(me.id);\r\n    while(me.#csscnt>-1) {\r\n      GSCacheStyles.deleteRule(`${me.id}-${me.#csscnt--}`);\r\n    }    \r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    if (GSEvents.isMouseOrPointerEvent(x)) {\r\n      const e = x;\r\n      y = e.clientY;\r\n      x = e.clientX;\r\n      let offset = GSDOM.offsetParent(me);\r\n      offset = offset ? offset.getBoundingClientRect() : null;\r\n      x = x - (offset?.left || 0);\r\n      y = y - (offset?.top || 0);\r\n    }    \r\n    const cfg = {clientX: x, clientY: y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      const style = {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        translate : `${cfg.clientX}px ${cfg.clientY}px`\r\n      };\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e, false);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    if (!me.visible) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    const style = {\r\n      left : '',\r\n      top : ''\r\n    };\r\n    GSCacheStyles.setRule(me.id, style, true);\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n    GSEvents.send(me, 'close', e);\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n    GSEvents.send(me, 'open');\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      let style = {};\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        style.top = `${top}px`;\r\n      }\r\n      GSCacheStyles.setRule(me.id, style, true);\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #attachDynamic(el) {\r\n    const me = this;\r\n    if (!el.dataset.cssId) {\r\n      el.dataset.cssId = `${me.id}-${++me.#csscnt}`;\r\n      el.classList.add(el.dataset.cssId);\r\n    }    \r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        me.#attachDynamic(el);\r\n        let end = true;\r\n        const style = {\r\n          position : 'absolute',\r\n          left : 'inherit',\r\n          right : 'inherit',\r\n          top : 'inherit'\r\n        };\r\n        if (overflowH) {\r\n          style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          style.left = '100%';\r\n          end = true;\r\n        }\r\n        GSCacheStyles.setRule(el.dataset.cssId, style, true);\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        me.close(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    const caller = me.#caller;\r\n    me.close(e);\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', action: data.action, option: e.target, caller: caller, data: data };\r\n    GSEvents.sendDelayed(1, me, 'action', opt, true, true, true); // notify self\r\n    //GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        me.#attachDynamic(sub);\r\n        const style = {top : `${sub.parentElement.offsetTop}px`};\r\n        GSCacheStyles.setRule(sub.dataset.cssId, style, true);\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      //opts.push(GSItem.getAttrs(el));\r\n      if (it.title) opts.push(` title=\"${it.title}\" `);\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n    \r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\" >`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const title = el?.title ? ` title=\"${el.title}\"`:\"\";\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\" ${title}>${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    const title = el.title ? ` title=\"${el.title}\"`:\"\";\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\" ${title}>${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-attr=\"${el.injectAttributes}\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\" ${title}>${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    //GSEvents.monitorAction(me.#menu, 'context');\r\n    me.attachEvent(me.#menu, 'action', me.#onAction.bind(me));\r\n    me.attachEvent(me.#menu, 'open', e => me.emit( 'open', e.detail));\r\n    me.attachEvent(me.#menu, 'close', e => me.emit( 'close', e.detail));\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  /*\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  get anchor() {\r\n    return GSAttr.get(this, 'anchor', 'beforeend@body');\r\n  }\r\n  */\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  get altContext() {\r\n\t\treturn this.hasAttribute('altctx');\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSAttr.toggle(this, 'altctx', GSUtil.asBool(val));\r\n\t}\r\n\r\n  close(e) {\r\n    const me = this;\r\n    if (e?.type === 'contextmenu' && e?.shiftKey && me.altContext) return;\r\n    GSEvents.prevent(e);\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    return me.disabled ? false : me.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onAction(e) {\r\n    const detail = e.detail;\r\n    detail.type = 'context';    \r\n    // TODO if proxied element, we should send event to owning component\r\n    // GSEvents.prevent(e)\r\n    // GSEvents.send(this.parent, 'action', detail, true,true,true);\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n      .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    if (e.shiftKey && me.altContext) return;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCopyright extends GSElement {\r\n\r\n    #css = 'fixed-bottom d-flex justify-content-center align-items-center mt-1 p-2 text-muted';\r\n\r\n    static {\r\n        customElements.define('gs-copyright', GSCopyright);\r\n        Object.seal(GSCopyright);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        if (!(me.isCompany && me.isYear)) return '';\r\n        const year = new Date().getFullYear();\r\n        return `\r\n        <div class=\"${me.css}\">\r\n            <small>&copy; ${me.company} ${me.year}. - ${year}.</small>\r\n        </div>`;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#css);\r\n    }\r\n\r\n    get company() {\r\n        return GSAttr.get(this, 'company', '');\r\n    }\r\n\r\n    get isCompany() {\r\n        return GSUtil.isStringNonEmpty(this.company);\r\n    }\r\n        \r\n    get isYear() {\r\n        return GSUtil.isStringNonEmpty(this.year);\r\n    }\r\n\r\n    get year() {\r\n        return GSAttr.get(this, 'year', '');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n// TODO - add CloseWatcher when API available\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static #updateStack() {\r\n    GSDialog.#STACK = GSDialog.#STACK.filter(v => v.isConnected);\r\n  }\r\n\r\n  static get top() {\r\n    GSDialog.#updateStack();\r\n    if (GSDialog.#STACK.length === 0) return null;\r\n    return GSDialog.#STACK[GSDialog.#STACK.length - 1];\r\n  }\r\n\r\n  static get opened() {\r\n    GSDialog.#updateStack();\r\n    return Array.from(GSDialog.#STACK);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    GSDialog.#updateStack();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      const dlg = me.#dialog;\r\n      if (!dlg) return;\r\n      const cfg = { type: 'dialog', ok: me.visible };\r\n      if (me.visible && !dlg.open) {\r\n        dlg.showModal();\r\n        GSDialog.#STACK.push(me);\r\n        me.emit('change');\r\n        me.#notify(cfg);\r\n      } else  if (!me.visible && dlg.open) {\r\n        dlg?.close();\r\n        GSDialog.#STACK.pop();\r\n        me.#notify(cfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'dialog');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    me.attachEvent(me, 'visible', me.#onVisible.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  async onFormInit(form, data) {\r\n    form?.reset();\r\n    if (form && data) form.data = data;\r\n  }\r\n\r\n  #notify(cfg) {\r\n    const me = this;\r\n    GSEvents.waitAnimationFrame(() =>{\r\n      me.emit('visible', cfg, true, true);\r\n    });\r\n  }\r\n\r\n  #onChange(e) {\r\n    const me = this;\r\n    me.#buttonOkEl.disabled =  me.forms.filter(form => !form.isValid).length > 0;\r\n  }\r\n\r\n  #onVisible(e) {\r\n    const me = this;\r\n    me.visible ? me.afterOpen() : me.afterClose();\r\n  }\r\n\r\n  #onForm(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail.data;\r\n    if (e.detail.type === 'init') {\r\n      return me.onFormInit(data);\r\n    }\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'dialog', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      GSEvents.prevent(e);\r\n      if (me.cancelable || me.escapable) {\r\n        me.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onDialogOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms?.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = true;\r\n    me.forms?.forEach(f => GSDOM.disableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    const btn = me.#buttonOkEl;\r\n    if (btn) btn.disabled = false;\r\n    me.forms?.forEach(f => GSDOM.enableInput(f, 'input, select, .btn', false, 'gsForm'));\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;\r\n    const o = { type: 'dialog', isOk: ok, data : e };\r\n    const ret = me.emit('beforeclose', o, true, true, true);    \r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  async afterOpen() {\r\n    \r\n  }\r\n\r\n  async afterClose() {\r\n    \r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  extra() {\r\n\r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get active() {\r\n    return GSDialog.top;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;    \r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card ${me.cssContent}\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    GSEvents.monitorAction(me, 'dropdown');\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elements stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  onError(e) {\r\n    GSLog.error(null, e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs-2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   #patterns = [];\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n   }\r\n\r\n   connectedCallback() {\r\n      const me = this;\r\n      me.#patterns = GSItem.genericItems(me)\r\n         .filter(el => el.dataset.pattern)\r\n         .map(el => new RegExp(el.dataset.pattern));\r\n      super.connectedCallback();\r\n   }\r\n\r\n   disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      const me = this;\r\n      me.#patterns = null;\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label' && me.#labelEl) me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value' && me.#inputEl) me.#inputEl.value = newValue;\r\n      if (name === 'disabled' && me.#inputEl) me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n\r\n   onReady() {\r\n      super.onReady();\r\n      const me = this;\r\n      me.attachEvent(me.#inputEl, 'blur', me.#onBlur.bind(me));\r\n      if (me.#isRange) {\r\n         me.attachEvent(me.#inputEl, 'input', me.#onRange.bind(me));\r\n         me.#onRange();\r\n      } \r\n   }\r\n\r\n   #onRange(e) {\r\n      const me = this;\r\n      const el = me.#outputEl;\r\n      if (el) el.innerHTML = me.#inputEl?.value || '';\r\n   }\r\n\r\n   async #onBlur(e) {\r\n\r\n      const me = this;\r\n      const el = me.#inputEl;\r\n      \r\n      if (el.value.length === 0 || me.#patterns.length === 0) return;\r\n\r\n      let isValid = false;\r\n      for (const r of me.#patterns) {\r\n         isValid = r.test(el.value);\r\n         if (isValid) break;\r\n     }\r\n\r\n      if (!isValid) {\r\n         el.setCustomValidity('Invalid input');\r\n         el.reportValidity();\r\n         me.#inputEl.focus();\r\n         await GSUtil.timeout(2000);\r\n         el.setCustomValidity('');\r\n      }\r\n   }\r\n\r\n\r\n   #validateAllowed() {\r\n      const me = this;\r\n      const slots = ['header', 'body', 'footer'];\r\n      let list = Array.from(me.children).filter(el => el.slot && !slots.includes(el.slot));\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"header|body|footer\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE', 'GS-ITEM'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n   }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#output}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         <slot name=\"header\"></slot>\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n         <slot name=\"footer\"></slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #outputEl() {\r\n      return this.query('input').nextElementSibling;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #isFieldset() {\r\n      const me = this;\r\n      return me.type === 'radio' && me.#value.includes(',');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      const val = me.#isFieldset ? me.value.split(',') : me.#value;\r\n\r\n      if (Array.isArray(val)) {\r\n         const wrap = me.dataset.radioLayout === 'vertical' ? 'div' : 'span';\r\n         return val.map((it, i) => {return { v:it, h:`value=\"${it}\"`, id : `id=\"${me.name}_${i}\"`}})\r\n         .map((o, i) => me.#fieldSet(me.name+i, o.v, me.#inputHTML(o.id, me.name, o.h, o.v), wrap))\r\n         .join('');\r\n      }\r\n\r\n      return me.#inputHTML(idattr, me.name, me.#value, me.value);\r\n   }\r\n\r\n   #inputHTML(id, name, value, val ) {\r\n      const me = this;\r\n      const sel = GSAttr.get(me, 'checked');\r\n      const checked = (me.#isCheckable && me.checked && val && val == sel) ? 'checked' : '';\r\n      \r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${id} name=\"${name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect} ${me.#autofocus}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${checked}\r\n               ${me.#mask} ${me.#pattern} ${value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled} ${me.#reveal}\r\n               >`;\r\n   }\r\n\r\n   #fieldSet(id, val, fld, wrap='span') {\r\n      return `<${wrap} class=\"me-3\">\r\n               ${fld}\r\n               <label for=\"${id}\" class=\"ms-1\">${val}</label>\r\n              </${wrap}>`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         //return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n         if (me.#isSwitch) return 'form-check form-switch ps-3 fs-5';\r\n         return me.#isFieldset ? '' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">${me.#input}${me.#output}</slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #output() {\r\n      const me = this;\r\n      if (!me.#isRange) return \"\";\r\n      return `<span class=\"position-absolute px-1\">${me.value}</span>`; \r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n   \r\n   get #autofocus() {\r\n      return this.autofocus ? `autofocus` : '';\r\n   }\r\n   \r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=\"${this.placeholder}\"` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=\"${me.pattern}\"` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=\"${me.mask}\"` : '';\r\n   }\r\n\r\n   get #reveal() {\r\n      return this.reveal ? `reveal` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=\"${me.accept}\"` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=\"${this.autocapitalize}\"` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=\"${this.autocomplete}\"` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=\"${this.value}\"` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=\"${this.list}\"` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs-11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get reveal() {\r\n      return this.hasAttribute('reveal');\r\n   }\r\n\r\n   set reveal(val = '') {\r\n      return GSAttr.toggle(this, 'reveal', GSUtil.asBool(val));\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n   }\r\n\r\n   get autofocus() {\r\n      return this.hasAttribute('autofocus');\r\n   }\r\n\r\n   get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSItem.genericItems(this).forEach(el  => GSCacheStyles.deleteRule(el.dataset.cssId));        \r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map((el, idx) => me.#generateHtml(el, idx));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}  ${me.styleID}\"  data-css-id=\"${me.styleID}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for a gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @param {Number} idx\r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el, idx) {\r\n        const me = this;\r\n        el.dataset.cssId = `${me.id}-${idx}`;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        GSCacheStyles.setRule(el.dataset.cssId, style);\r\n        \r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls} ${el.dataset.cssId}\" data-css-id=\"${el.dataset.cssId}\" id=\"${name || GSID.id}\">${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const size = GSAttr.getAsNum(el, 'size', 0);\r\n        /*\r\n        const style = {};        \r\n        style[`max-${sfx}`] = max > 0 ? `${max}px;` : '';\r\n        style[`min-${sfx}`] = min > 0 ? `${min}px;` : '';\r\n        return style;        \r\n        */\r\n        const ssize = size > 0 ? `${sfx}: ${size}px;` : '';\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return [ssize, smax, smin].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  #disabled = false;\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible', 'button-ok', 'button-cancel'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      me.emit('visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    GSEvents.monitorAction(me, 'modal');\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const data = e.detail.data;\r\n    const isValid = e.detail.valid;\r\n    const msg = isValid ? 'data' : 'error';\r\n    const sts = me.emit(msg, { type: 'modal', data: data, evt: e }, true, true, true);\r\n    if (isValid && sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (e.key === 'Escape') {\r\n      if (me.cancelable || me.escapable) me.close();\r\n      GSEvents.prevent(e);\r\n    }\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n    const isOk = action === 'ok';\r\n    me.emit('action', { action: action, ok: isOk, evt: e }, true, true, true);\r\n    me.emit('postaction', { action: action, ok: isOk, evt: e });\r\n  }\r\n\r\n  // monitor action events\r\n  onModalCancel() {\r\n    this.cancel();\r\n  }\r\n\r\n  // monitor action events\r\n  onModalOk() {\r\n    this.ok();\r\n  }\r\n\r\n  cancel() {\r\n    this.close(null, false);\r\n  }\r\n\r\n  ok() {\r\n    const me = this;\r\n    if (me.#disabled) return;\r\n    const forms = me.forms;\r\n    forms.length == 0 ? me.close(null, true) : forms.forEach(form => form.submit());\r\n  }\r\n\r\n  disable() {\r\n    const me = this;\r\n    me.#disabled = true;\r\n    GSDOM.disableInput(me);\r\n  }\r\n\r\n  enable() {\r\n    const me = this;\r\n    me.#disabled = false;\r\n    GSDOM.enableInput(me);\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra': return 'modal-xl';\r\n      case 'large': return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('postaction');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  reset(data, index = 0) {\r\n    const me = this;\r\n    me.forms.forEach(f => {f.reset(); GSDOM.fromObject(f, data);});\r\n    const tab = me.query('GS-TAB');\r\n    if (tab && index > -1) tab.index = GSUtil.asNum(index, 0);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  async open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeOpen();\r\n    if (!sts) return;\r\n    const o = { type: 'modal', isOk: true, data : e };\r\n    const ret = me.emit('beforeopen', o, true, true, true);    \r\n    if (ret) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  async close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = await me.beforeClose(e, ok);\r\n    if (!sts) return;    \r\n    const ret = me.emit('beforeclose', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (ret) me.visible = false;\r\n  }\r\n\r\n  async beforeOpen() {\r\n    return true;\r\n  }\r\n\r\n  async beforeClose(data, ok) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n    if (me.#buttonOkEl) me.#buttonOkEl.innerText = me.buttonOk;\r\n    if (me.#buttonCancelEl) me.#buttonCancelEl.innerText = me.buttonCancel;\r\n    const hidden = me.cancelable == false && me.closable == false;\r\n    GSDOM.toggleClass(footer, 'd-none', hidden);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  get form() {\r\n    return GSDOM.query(this, 'form');\r\n  }\r\n\r\n  get forms() {\r\n    return GSDOM.queryAll(this, 'form');\r\n  }\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    const me = this;\r\n    if (me.#disabled && val === false) return;        \r\n    GSAttr.setAsBool(me, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get escapable() {\r\n    return this.hasAttribute('escapable');\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSGesture from \"../base/GSGesture.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  #swiper = null;\r\n  #bindings = null;\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = me.css || 'border shadow-sm';\r\n    me.#bindings = {\r\n      left: me.onSwipeLeft.bind(me),\r\n      right: me.onSwipeRight.bind(me),\r\n      up: me.onSwipeUp.bind(me),\r\n      down: me.onSwipeDown.bind(me)\r\n    };\r\n  }\r\n\r\n  connectedCallback() {\r\n    const me = this;\r\n    me.#bindEvents();\r\n    super.connectedCallback();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#unbindEvents();\r\n    me.#swiper = null;\r\n    me.#bindings = null;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') me.emit('action', { type: 'offcanvas', ok: GSUtil.asBool(newValue) });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseleave', me.#onLeave.bind(me));\r\n    me.attachEvent(me.#canvasEl, 'mouseenter', me.#onEnter.bind(me));\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #onLeave() {\r\n    const me = this;\r\n    if (me.autoclose) me.close();\r\n  }\r\n\r\n  #onEnter() {\r\n    const me = this;\r\n    if (me.min > 0) me.open();\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    const open = me.expanded;\r\n\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    /*\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n    */\r\n\r\n    const obj = {\r\n      'transition-property': `${pos} !important`,\r\n      'transition-duration': `${me.transitionDuration}s  !important`,\r\n      'transition-timing-function': `${me.transitionFunction} !important`\r\n    };\r\n    if (GSUtil.isNumber(val)) {\r\n      obj[pos] = `${val}px !important`;\r\n    } else {\r\n      obj[pos] = `${val} !important`;\r\n    }\r\n    GSCacheStyles.setRule(me.styleID, obj);\r\n\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  #bindEvents() {\r\n    const me = this;\r\n    me.#swiper = GSGesture.attach(document);\r\n    if (!me.#bindings) return;\r\n    GSEvents.attach(document, document, 'swipe-left', me.#bindings.left, false);\r\n    GSEvents.attach(document, document, 'swipe-right', me.#bindings.right, false);\r\n    GSEvents.attach(document, document, 'swipe-up', me.#bindings.up, false);\r\n    GSEvents.attach(document, document, 'swipe-down', me.#bindings.down, false);\r\n  }\r\n\r\n  #unbindEvents() {\r\n    const me = this;\r\n    me.#swiper?.unbind();\r\n    me.#swiper = null;\r\n    if (!me.#bindings) return;\r\n    GSEvents.remove(document, document, 'swipe-left', me.#bindings.left);\r\n    GSEvents.remove(document, document, 'swipe-right', me.#bindings.right);\r\n    GSEvents.remove(document, document, 'swipe-up', me.#bindings.up);\r\n    GSEvents.remove(document, document, 'swipe-down', me.#bindings.down);\r\n  }\r\n\r\n  onSwipeLeft(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.close();\r\n        break;\r\n      case 'end':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeRight(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'start':\r\n        me.open();\r\n        break;\r\n        case 'end':\r\n          me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  onSwipeUp(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.close();\r\n        break;\r\n      case 'bottom':\r\n        me.open();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSwipeDown(e) {\r\n    const me = this;\r\n    if (!me.#isFingersValid(e)) return;\r\n    switch (me.placement) {\r\n      case 'top':\r\n        me.open();\r\n        break;\r\n      case 'bottom':\r\n        me.close();\r\n        break;\r\n    }    \r\n  }\r\n\r\n  #isFingersValid(e) {\r\n    const fingers = GSGesture.fingers(e);\r\n    return fingers === this.fingers;\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get fingers() {\r\n    return GSAttr.getAsNum(this, 'fingers', 2);\r\n  }\r\n\r\n  set fingers(val = 2) {\r\n    GSAttr.setAsNum(this, 'fingers', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    GSAttr.set(this, 'css-title', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.get(this, 'max', 'auto');\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', val);\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css} ${me.styleID}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOverlay class\r\n * @module components/GSOverlay\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * SVG overlay renderer around selected target.\r\n * <gs-overlay target=\"#GSId-30-nav\" autoremove></gs-overlay>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOverlay extends GSElement {\r\n\r\n    static #attrs = ['target', 'opacity', 'color', 'radius', 'padding'];\r\n\r\n    #tid = 0;\r\n    #svgid = GSID.id;\r\n\r\n    static {\r\n        customElements.define('gs-overlay', GSOverlay);\r\n        Object.seal(GSOverlay);\r\n    }\r\n\r\n    static get attributes() {\r\n        return GSOverlay.#attrs;\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return GSElement.observeAttributes(GSOverlay.#attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (GSOverlay.attributes.includes(name)) {\r\n            if (name === 'target') {\r\n                me.#updateSVG(oldValue, newValue);\r\n            } else {\r\n                me.#updateSVG('', me.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me  = this;\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.svg?.remove();\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get autoremove() {\r\n        return this.hasAttribute('autoremove');\r\n    }\r\n\r\n    set autoremove(val) {\r\n        return GSAttr.toggle(this, 'autoremove', GSUtil.asBool(val));\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target', '');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get overlayPadding() {\r\n        return GSAttr.getAsNum(this, 'padding', 1);\r\n    }\r\n\r\n    set overlayPadding(val = 1) {\r\n        return GSAttr.setAsNum(this, 'padding', val);\r\n    }\r\n\r\n    get overlayRadius() {\r\n        return GSAttr.getAsNum(this, 'radius', 6);\r\n    }\r\n\r\n    set overlayRadius(val = 6) {\r\n        return GSAttr.setAsNum(this, 'radius', val);\r\n    }\r\n\r\n    get overlayColor() {\r\n        return GSAttr.get(this, 'color', 'rgb(0,0,0)');\r\n    }\r\n\r\n    set overlayColor(val = '') {\r\n        return GSAttr.set(this, 'color', val);\r\n    }\r\n\r\n    get overlayOpacity() {\r\n        return GSAttr.getAsNum(this, 'opacity', 0.7);\r\n    }\r\n\r\n    set overlayOpacity(val = 0.7) {\r\n        return GSAttr.setAsNum(this, 'opacity', val);\r\n    }\r\n\r\n    get svg() {\r\n        return GSDOM.getByID(this.#svgid);\r\n    }\r\n\r\n    get path() {\r\n        return GSDOM.query(this.svg, 'path');\r\n    }\r\n\r\n    open() {\r\n        const me = this;\r\n        me.#updateSVG('', me.target);\r\n    }\r\n\r\n    close() {\r\n        const me = this;\r\n        const svg = me.svg;\r\n        me.removeEvent(svg, 'click');\r\n        svg?.remove();\r\n    }\r\n    \r\n    reset() {\r\n        const me = this;\r\n        if (me.autoremove) me.close();\r\n    }\r\n\r\n    #onResize() {\r\n        const me = this;\r\n        me.close();\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.open(), 200);\r\n    }\r\n\r\n    #updateSVG(oldTarget = '', newTarget = '') {\r\n        const me = this;\r\n        if (oldTarget === newTarget) return;\r\n        if (!newTarget) return me.svg?.remove();\r\n        const el = GSDOM.query(newTarget);\r\n        if (!el) return;\r\n\r\n        const svg = me.svg || me.#createSVG();\r\n        const path = me.path || me.#createSVGPath();\r\n        const pathStr = me.#createSVGPathString(el);\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        path.setAttribute(\"d\", pathStr);\r\n        if (!me.svg) {\r\n            svg.appendChild(path);\r\n            document.body.appendChild(svg);\r\n            me.attachEvent(svg, 'click', me.reset.bind(me));\r\n        }\r\n\r\n    }\r\n\r\n    get #viewBox() {\r\n        return `0 0 ${window.innerWidth} ${window.innerHeight}`;\r\n    }\r\n\r\n    #createSVG() {\r\n\r\n        const me = this;\r\n\r\n\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.id = me.#svgid;\r\n        svg.classList.add(\"gs-overlay\", \"gs-overlay-animated\");\r\n\r\n        svg.setAttribute(\"viewBox\", me.#viewBox);\r\n        svg.setAttribute(\"xmlSpace\", \"preserve\");\r\n        svg.setAttribute(\"xmlnsXlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin slice\");\r\n\r\n        svg.style.fillRule = \"evenodd\";\r\n        svg.style.clipRule = \"evenodd\";\r\n        svg.style.strokeLinejoin = \"round\";\r\n        svg.style.strokeMiterlimit = \"2\";\r\n        svg.style.zIndex = \"10000\";\r\n        svg.style.position = \"fixed\";\r\n        svg.style.top = \"0\";\r\n        svg.style.left = \"0\";\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        return svg;\r\n    }\r\n\r\n    #createSVGPath() {\r\n        \r\n        const me = this;\r\n\r\n        const pathEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        pathEl.style.fill = me.overlayColor;\r\n        pathEl.style.opacity = me.overlayOpacity;\r\n        pathEl.style.pointerEvents = \"auto\";\r\n        pathEl.style.cursor = \"auto\";\r\n        return pathEl;\r\n    }\r\n\r\n    #createSVGPathString(target) {\r\n        \r\n        const me = this;\r\n        const windowX = window.innerWidth;\r\n        const windowY = window.innerHeight;\r\n        \r\n        const rect = target.getBoundingClientRect()\r\n\r\n        const padding = me.overlayPadding;\r\n        const radius = me.overlayRadius;\r\n      \r\n        const width = rect.width + padding * 2;\r\n        const height = rect.height + padding * 2;\r\n      \r\n        // prevent glitches when stage is too small for radius\r\n        const limitedRadius = Math.min(radius, width / 2, height / 2);\r\n      \r\n        // no value below 0 allowed + round down\r\n        const normalizedRadius = Math.floor(Math.max(limitedRadius, 0));\r\n      \r\n        const highlightBoxX = rect.x - padding + normalizedRadius;\r\n        const highlightBoxY = rect.y - padding;\r\n        const highlightBoxWidth = width - normalizedRadius * 2;\r\n        const highlightBoxHeight = height - normalizedRadius * 2;\r\n      \r\n        return `M${windowX},0L0,0L0,${windowY}L${windowX},${windowY}L${windowX},0Z\r\n          M${highlightBoxX},${highlightBoxY} \r\n          h${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},${normalizedRadius} \r\n          v${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},${normalizedRadius} \r\n          h-${highlightBoxWidth} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 -${normalizedRadius},-${normalizedRadius} \r\n          v-${highlightBoxHeight} \r\n          a${normalizedRadius},${normalizedRadius} 0 0 1 ${normalizedRadius},-${normalizedRadius} z`;      \r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(async () => {\r\n            GSID.setIf(el);\r\n            const popover = document.createElement('gs-popover');\r\n            popover.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', popover);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.innerHTML = this.innerHTML.trim();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSCacheStyles.deleteRule(me.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render(me.#contentel);\r\n        me.#attachEvents();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            if (me.visible) me.#render(me.#contentel);\r\n            GSDOM.toggleClass(me.#contentel, 'show', me.visible);\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        //return true;\r\n        return super.isFlat;\r\n    }\r\n\r\n    get anchor() {\r\n        //return 'self';\r\n        return super.anchor;\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        const tpl = await super.getTemplate(def);\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css} ${this.styleID}\" data-popper-placement=\"${me.placement}\" data-css-id=\"${this.styleID}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">\r\n                <slot>${tpl || me.content}</slot>\r\n            </div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide(e) {\r\n        GSEvents.prevent(e);\r\n        this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    get #contentel() {\r\n        return this.self.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, me.target, 'click', me.toggle.bind(me));\r\n            GSEvents.attach(me, me.#contentel, 'mouseleave', me.hide.bind(me));\r\n            GSEvents.attach(me, document.body, 'click', me.hide.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        source = source || me.self.firstElementChild;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#caller = null;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state} ${me.styleID}\"  data-css-id=\"${this.styleID}\"><slot></slot></div>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onBeforeReady();        \r\n        await super.onBeforeReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get trigger() {\r\n        return GSAttr.get(this, 'trigger', 'click');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            me.emit('action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            const obj = {\r\n                top : '0px',\r\n                left : '0px',\r\n                translate : `${x}px ${y}px`\r\n            };\r\n            me.#resize(obj);\r\n        });\r\n\r\n    }\r\n\r\n    #resize(obj = {}) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (me.wMax) obj['max-width'] = `${me.wMax}px`;\r\n        if (me.wMin) obj['min-width'] = `${me.wMin}px`;\r\n        if (me.hMax) obj['max-height'] = `${me.hMax}px`;\r\n        if (me.hMin) obj['min-height'] = `${me.hMin}px`;\r\n        GSCacheStyles.setRule(panel.dataset.cssId, obj);\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            GSEvents.prevent(e);\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement))).shift();\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.trigger.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onBeforeReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = me.emit('data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'value'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `data-${name}`, newValue);\r\n        me.#updatePercentage();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#barRule);\r\n        super.disconnectedCallback();\r\n    }\r\n    \r\n    #updatePercentage() {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        const rule = GSCacheStyles.getRule(me.#barRule);\r\n        if (rule) rule.style.width = `${me.percentage}%`;   \r\n        if (me.label && bar) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { value: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    get #barRule() {\r\n        return `${this.styleID}-bar`;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { value: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n\t\tGSCacheStyles.setRule(`${me.#barRule}`, `width:${me.percentage}%`);\r\n        return `\r\n        <div class=\"progress ${this.styleID}\"  data-css-id=\"${this.styleID}\">\r\n            <div class=\"progress-bar ${me.css} ${me.#barRule}\" data-rule-id=\"${this.#barRule}\" role=\"progressbar\" data-value=\"${me.value}\" data-min=\"${me.min}\" data-max=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.#updatePercentage();\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val); // || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.setAsNum(me, 'value', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        GSCacheStyles.deleteRule(this.#ruleDynamic);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    get #ruleDynamic() {\r\n        return `${this.styleID}-dynamic`;\r\n    }\r\n\r\n    get #cssDynamic() {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            ${size}: ${me.size}px;\r\n            ${full}: 100%;\r\n            border-width: 1px;\r\n            cursor: ${cursor};\r\n            border-color: darkgray;\r\n            border-style: solid;\r\n            background-color: lightgray;\r\n        `;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        GSCacheStyles.setRule(me.#ruleDynamic, me.#cssDynamic);\r\n        return `<div class=\"splitter ${me.css} ${me.styleID} ${me.#ruleDynamic}\" data-css-id=\"${this.styleID}\" data-rule-id=\"${this.#ruleDynamic}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        me.#update(val);\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n        me.attachEvent(el, 'dblclick', me.#onDoubleClick.bind(me));\r\n    }\r\n\r\n    #onDoubleClick(e) {\r\n\r\n        const me = this;\r\n        let csize = 0;\r\n        let key = '';\r\n\r\n        if (me.isVertical) {\r\n            key = 'width';\r\n            csize = me.target.clientWidth;\r\n        } else {\r\n            key = 'height';\r\n            csize = me.target.clientHeight;\r\n        }\r\n        \r\n        let min = GSCSSMap.styleValue(me.target, `min-${key}`);\r\n        let max = GSCSSMap.styleValue(me.target, `max-${key}`);\r\n\r\n        min = GSUtil.asNum(min.value);\r\n        max = GSUtil.asNum(max.value);\r\n\r\n        if ((max - min) / 2 > csize) {\r\n            csize = max;\r\n        } else {\r\n            csize = min;\r\n        }\r\n        me.#update(csize);\r\n\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n        me.#lock(true);\r\n        GSEvents.send(globalThis, 'gs-split', {start: true});\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n        me.#lock(false);\r\n        GSEvents.send(globalThis, 'gs-split', {stop: true});\r\n    }\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#updateMouse(pos);\r\n    }\r\n\r\n    /**\r\n     * Lock IFRAME,EMBED,PORTAL elements for mouse move events\r\n     * @param {*} lock \r\n     */\r\n    #lock(lock = true) {\r\n        const me = this;\r\n        const cls = 'pe-none';\r\n        if (lock) {\r\n            me.#lockable\r\n            .filter(el => !GSDOM.hasClass(el, 'pe-none'))\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, true);\r\n                el.dataset.gsSplitter = true;\r\n            });\r\n        } else {\r\n            me.#lockable\r\n            .filter(el => el.dataset.gsSplitter)\r\n            .forEach(el =>{\r\n                GSDOM.toggleClass(el, cls, false);\r\n                delete el.dataset.gsSplitter;\r\n            });            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get elements which must be protected to allow mouse move over \r\n     */\r\n    get #lockable() {\r\n        const me = this;\r\n        const qry = 'iframe,embed,portal';\r\n        const p = GSDOM.queryAll(me.previousElementSibling, qry);\r\n        const n = GSDOM.queryAll(me.nextElementSibling, qry);\r\n        return [...p, ...n];\r\n    }\r\n    \r\n    #updateMouse(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        me.#styleDynamic.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    #update(val = 0) {\r\n        if (val <= 0) return\r\n        const me = this;\r\n        me.#cursor = val;\r\n        if (me.isVertical) {\r\n            me.#styleDynamic.width = val + \"px\";\r\n        } else {\r\n            me.#styleDynamic.height = val + \"px\";\r\n        }\r\n    }\r\n\r\n    get #styleDynamic() {\r\n        const me = this;\r\n        const target = me.target;\r\n        const rule = GSCacheStyles.getRule(target.dataset.cssId || target.id);\r\n        return rule?.style || target.style;        \r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => GSID.setIf(el));\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    let body = GSItem.getBody(el, me.isFlat);\r\n    if (!me.isFlat) {\r\n      const slot = GSDOM.parseWrapped(me, body);\r\n      GSAttr.set(slot, 'slot', el.id);\r\n      GSDOM.appendChild(me, slot);\r\n      body = `<slot name=\"${el.id}\"></slot>`;\r\n    }\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n  get tab() {\r\n    return this.query('.nav');\r\n  }\r\n\r\n  get tabs() {\r\n    return this.queryAll('.nav-item');\r\n  }\r\n\r\n  get active() {\r\n    return this.query('.nav-item > .active').closest('.nav-item');\r\n  }\r\n\r\n  get index() {\r\n    const me = this;\r\n    return Array.from(me.tab.children).indexOf(me.active);\r\n  }\r\n  \r\n  set index(val = 0) {\r\n    val = GSUtil.asNum(val, 0);\r\n    const me = this;\r\n    const tabs = me.tabs;\r\n    let tab = val < 0 ? tabs[tabs.length-1] : tabs[val >= tabs.length ? 0 : val];\r\n    tab?.querySelector('a').click();\r\n  }\r\n\r\n  next() {\r\n    this.index++;\r\n  }\r\n\r\n  previous() {\r\n    this.index--;\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static async #onMonitorResult(el) {\r\n        await GSUtil.timeout(1000);\r\n        return GSEvents.waitAnimationFrame(() => {\r\n            GSID.setIf(el);\r\n            const tooltip = document.createElement('gs-tooltip');\r\n            tooltip.ref = `#${el.id}`;\r\n            el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n        }, true);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSCacheStyles.deleteRule(this.#arrowID);\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #arrowID() {\r\n        return `${this.styleID}-arrow`;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow ${me.#arrowID}\" data-css-id=\"${me.#arrowID}\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2023 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTree class\r\n * @module components/GSTree\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-tree css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\">\r\n *         <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" title=\"\"></gs-item>\r\n *     </gs-item>\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTree extends GSElement {\r\n\r\n    #selected = null;\r\n    #events = null;\r\n\r\n    static {\r\n        customElements.define('gs-tree', GSTree);\r\n        Object.seal(GSTree);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get itemIcon() {\r\n        return GSAttr.get(this, 'item-icon', 'bi bi-file-earmark');\r\n    }\r\n\r\n    set itemIcon(val = '') {\r\n        return GSAttr.set(this, 'item-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-down'\r\n    get openIcon() {\r\n        return GSAttr.get(this, 'open-icon', 'bi bi-folder2-open');\r\n    }\r\n\r\n    set openIcon(val = '') {\r\n        return GSAttr.set(this, 'open-icon', val);\r\n    }\r\n\r\n    // 'bi bi-caret-right'\r\n    get closeIcon() {\r\n        return GSAttr.get(this, 'close-icon', 'bi bi-folder');\r\n    }\r\n\r\n    set closeIcon(val = '') {\r\n        return GSAttr.set(this, 'close-icon', val);\r\n    }\r\n\r\n    get rootEl() {\r\n        return this.query('.treeview');\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#events = {};\r\n        me.#events.click = me.#onClick.bind(me);\r\n        me.#events.keydown = me.#onKeyDown.bind(me);\r\n        me.#events.keyup = me.#onKeyUp.bind(me);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.unlisten(own, null, 'click', me.#events?.click);\r\n        GSEvents.unlisten(own, null, 'keydown', me.#events?.keydown);\r\n        GSEvents.unlisten(own, null, 'keyup', me.#events?.keyup);\r\n        me.#events = null;\r\n        me.#selected = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        const own = me.rootEl;\r\n        GSEvents.listen(own, null, 'click', me.#events.click);\r\n        GSEvents.listen(own, null, 'keydown', me.#events.keydown);\r\n        GSEvents.listen(own, null, 'keyup', me.#events.keyup);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        const html = me.#render();\r\n        return `\r\n        <style>\r\n        .treeview span.indent {\r\n             margin-left: 10px;\r\n             margin-right: 10px;\r\n         }\r\n        .treeview .list-group-item {\r\n            cursor: pointer;\r\n        }                    \r\n        </style>        \r\n        <div class=\"treeview ${me.css}\" _tabindex=\"0\">\r\n            <ul class=\"list-group\">\r\n                ${html}\r\n            </ul>\r\n        </div>`;\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        return GSItem.genericItems(me).map((el, idx) => me.#html(el, 0, idx)).join('');\r\n    }\r\n\r\n    #html(el, level = 0, idx = 0, pid = '', parent = '', css = '') {\r\n\r\n        const me = this;\r\n        const name = el.name || el.title;\r\n        const path = `${parent}/${name}`\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        if (level === 0) {\r\n            css = isFolder && !isOpen ? 'gs-hide' : '';\r\n        }\r\n\r\n        const nodeid = GSUtil.isStringEmpty(pid) ? idx : `${pid}.${idx}`;\r\n\r\n        const html = [];\r\n\r\n        html.push(`<li class=\"list-group-item ${level === 0 ? '' : css}\" `);\r\n        html.push(`data-folder=\"${isFolder}\" data-open=\"${isOpen}\" data-nodeid=\"${nodeid}\"  `);\r\n        html.push(`data-path=\"${path}\"  data-name=\"${name}\">`);\r\n        html.push(me.#uiHtml(el, level));\r\n\r\n        if (isFolder) {\r\n            Array.from(el.children).forEach((ce, idx) => html.push(me.#html(ce, level + 1, idx, nodeid, path, css)));\r\n        }\r\n\r\n        html.push('</li>');\r\n        return html.join('');\r\n    }\r\n\r\n    #uiHtml(el, level) {\r\n\r\n        const me = this;\r\n        const title = GSAttr.get(el, 'title');\r\n        const isFolder = el.childElementCount > 0;\r\n        const isOpen = GSAttr.getAsBool(el, 'open', false);\r\n\r\n        const href = GSItem.getHref(el);\r\n        const hreftgt = href && href !== '#' ? `target=\"${GSItem.getTarget(el)}\"` : '';\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        let itemIco = GSItem.getIcon(el, me.itemIcon);\r\n        if (isFolder) itemIco = isOpen ? GSAttr.get(el, 'open-icon', me.openIcon) : GSAttr.get(el, 'close-icon', me.closeIcon);\r\n\r\n        const html = [];\r\n        while (level--) {\r\n            html.push('<span class=\"indent\"></span>');\r\n        }\r\n\r\n        html.push(`<i class=\"fs-5 ${itemIco}\"></i>`);\r\n        html.push(`<a href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs} class=\"ps-1\">${title}</a>`);\r\n        return html.join('');\r\n    }\r\n\r\n    #select(el, sts = false) {\r\n        GSDOM.toggleClass(el || this.#selected, 'active', sts);\r\n    }\r\n\r\n    #update(el, e) {\r\n        if (!el) return;\r\n        const me = this;\r\n        me.#select();\r\n        me.#selected = el;\r\n        me.#select(el, true);\r\n        const a = me.#selected.querySelector('a');\r\n        a?.focus();\r\n        me.emit('select', me.#selected);\r\n        const action = a?.dataset?.action;\r\n        if (!action) return;\r\n        const data = {type: 'tree', action:action, data:el, evt: e}\r\n        GSEvents.sendDelayed(1, me, 'action', data);\r\n    }\r\n\r\n    #isFolder(el) {\r\n        return (el || this.#selected)?.dataset.folder === 'true';\r\n    }\r\n\r\n    #isOpen(el) {\r\n        return (el || this.#selected)?.dataset.open === 'true';\r\n    }\r\n\r\n    #toggleFolder(sts = false) {\r\n        const me = this;\r\n        if (!me.#isFolder()) return;\r\n        requestAnimationFrame(() => {\r\n            me.#selected.dataset.open = sts;\r\n            const nid = me.#selected.dataset.nodeid;\r\n            const pl = nid.split('\\.').length;\r\n            me.#toggleIcon(me.#selected, sts);\r\n            let el = me.#selected.nextElementSibling;\r\n            while (el) {\r\n                const cid = el.dataset.nodeid;\r\n                const isChild = cid && cid.indexOf(nid) === 0;\r\n                if (!isChild) break;\r\n                if (sts) {\r\n                    const cl = cid.split('\\.').length;\r\n                    if (cl > pl + 1) {\r\n                        el = el.nextElementSibling;\r\n                        continue;    \r\n                    }\r\n    \r\n                    if (pl + 1 != cl && sts) break;\r\n                }\r\n                GSDOM.toggleClass(el, 'gs-hide', !sts);\r\n                if (!sts) el.dataset.open = sts;\r\n                el = el.nextElementSibling;\r\n            }\r\n        });\r\n        me.emit(sts ? 'open' : 'close', me.#selected);\r\n    }\r\n\r\n    #toggleIcon(el, expand) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder(el);\r\n        if (!isFolder) return;\r\n        const iconEl = el.querySelector('i');\r\n        if (!iconEl) return;\r\n        const ico = expand ? me.openIcon : me.closeIcon;\r\n        GSAttr.set(iconEl, 'class', `fs-5 ${ico}`);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const name = 'list-group-item';\r\n        const el = GSDOM.hasClass(e.target, name) ? e.target : e.target.closest('.' + name);\r\n        me.#update(el, e);\r\n        if (e.target.tagName !== 'I') return;\r\n        const isOpen = me.#isOpen();\r\n        me.#toggleFolder(!isOpen);\r\n    }\r\n\r\n    #onKeyUp(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        switch (e.code) {\r\n            case 'ArrowUp':\r\n                me.prev();\r\n                break;\r\n            case 'ArrowDown':\r\n                me.next();\r\n                break;\r\n            case 'ArrowLeft':\r\n                me.close();\r\n                break;\r\n            case 'ArrowRight':\r\n                me.open();\r\n                break;\r\n            case 'Tab':\r\n                me.#update(e.target.closest('li'));\r\n                break;\r\n        }\r\n    }\r\n\r\n    #parentNode(nodeid) {\r\n        return nodeid.split('.').slice(0,-1).join('.');\r\n    }\r\n\r\n    #parent(el) {\r\n        const me = this;\r\n        el = el || me.#selected;\r\n        let s = el.dataset.nodeid;\r\n        s = me.#parentNode(s);\r\n        return el.parentElement.querySelector(`li[data-nodeid=\"${s}\"]`);\r\n    }\r\n\r\n    #next(el) {\r\n        el = el?.nextElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.nextElementSibling;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    #previous(el) {\r\n        el = el?.previousElementSibling;\r\n        while(el) {\r\n            if (!el.classList.contains('gs-hide')) break;\r\n            el = el.previousElementSibling;\r\n        }        \r\n        return el;\r\n    }\r\n\r\n    get level() {\r\n        return this.#selected?.dataset.nodeid.split('.').length || -1;\r\n    }\r\n\r\n    get path() {\r\n        return this.#selected?.dataset.path;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:first-of-type'));\r\n        const el = me.#next(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.next() ;\r\n    }\r\n\r\n    prev() {\r\n        const me = this;\r\n        if (!me.#selected) return me.#update(me.query('li:last-of-type'));\r\n        const el = me.#previous(me.#selected);\r\n        if (el) return me.#update(el);\r\n        me.#selected = null;\r\n        me.prev() ;\r\n    }\r\n\r\n    /**\r\n     * Open folder\r\n     * TODO - path navigation\r\n     */\r\n    open(path) {\r\n        const me = this;\r\n        const isOpen = me.#isOpen();\r\n        const isFolder = me.#isFolder();\r\n        if (isOpen && isFolder) return me.next();\r\n        me.#toggleFolder(true);\r\n    }\r\n\r\n    /**\r\n     * Close folder\r\n     * TODO - path navigation\r\n     */\r\n    close(path) {\r\n        const me = this;\r\n        const isFolder = me.#isFolder();\r\n        const isOpen = me.#isOpen();\r\n        if (!isFolder || !(isOpen && isFolder)) return me.#update(me.#parent());\r\n        me.#toggleFolder(false);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        // me.disconnectedCallback();\r\n        me.innerHTML = '';\r\n\r\n        let dom = GSDOM.fromJson(val);\r\n        dom = Array.isArray(dom) ? dom : [dom];\r\n        dom.forEach(el => GSDOM.appendChild(me, el) );\r\n\r\n        me.repaint();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    static #initStyle() {\r\n        const style = `\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }`;\r\n            GSCacheStyles.adopt(style);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).includes('Files');\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = me.emit('accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            me.emit('accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n        GSFileBox.#initStyle();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDataHandler from \"../GSDataHandler.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends GSDataHandler {\r\n\r\n    #data = [];\r\n    #page = 1;\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['cached'];\r\n        return GSDataHandler.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#data = [];\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        super.attributeChangedCallback(name, oldValue, newValue);\r\n        if (name === 'cached') {\r\n            const me = this;\r\n            if (!me.cached) {\r\n                me.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get GS-ITEM field definition by name\r\n     * @param {String} name \r\n     * @returns \r\n     */\r\n    getField(name = '') {\r\n        return this.querySelector(`gs-item[name=\"${name}\"]`);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get cached() {\r\n        return this.hasAttribute('cached');\r\n    }\r\n\r\n    set cached(val = false) {\r\n        return GSAttr.toggle(this, 'cached', GSUtil.asBool(val));\r\n    }\r\n\r\n    get isCached() {\r\n        const me = this;\r\n        return Array.isArray(me.#data) && me.#data.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    /**\r\n     * PAGINATION SEGMENT \r\n     */\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        const me = this;\r\n        val = GSUtil.asNum(val, 1);\r\n        val = Math.min(Math.max(val, 1), Number.MAX_VALUE);\r\n        val = val > me.pages ? me.pages : val;\r\n        me.#page = val;\r\n        const skip = me.limit * (val - 1);\r\n        me.#getData(skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.page;\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return super.filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        val = me.#formatFilter(val);\r\n        super.filter = val;\r\n    }\r\n\r\n    get sort() {\r\n        return super.sort;\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    set sort(val) {\r\n        const me = this;\r\n        val = me.#formatSort(val);\r\n        super.sort = val;\r\n    }\r\n\r\n    /*\r\n     * INTERNAL SEGMENT\r\n     */\r\n\r\n    /**\r\n     * Clear cache and reload from remote\r\n     */\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    /**\r\n     * Manual data set, \r\n     * @param {*} data \r\n     * @param {*} append \r\n     * @returns \r\n     */\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        return me.read();\r\n    }\r\n\r\n    /**\r\n     * Read from remote with optional caching support and local sort/filter\r\n     * @param {*} clear \r\n     * @returns \r\n     */\r\n    read(clear = false) {\r\n        const me = this;\r\n        if (clear) me.#data = [];\r\n        return me.#getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    async #getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        let data = [];\r\n\r\n        if (me.#isLocal || me.isOffline) {\r\n            data = me.#getDataLocal(skip, limit, filter, sort, me.#data);\r\n            me.#notify('data', data);\r\n        } else {\r\n            data = await super.read();\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    #getDataLocal(skip = 0, limit = 0, filter, sort, data) {\r\n        const me = this;\r\n        data = GSData.filterData(filter, data, me.#fields);\r\n        data = GSData.sortData(sort, data);\r\n        limit = limit === 0 ? data.length : limit;\r\n        data = data.slice(skip, skip + limit);\r\n        return data;\r\n    }\r\n\r\n    get #isLocal() {\r\n        const me = this;\r\n        return (me.isCached && me.cached);\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n\r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = [...me.#data, ...records];\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n\r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    /**\r\n     * Notify upper components about the finalized data\r\n     * @param {*} name \r\n     * @param {*} data \r\n     */\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    get #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n    /*\r\n     * HANDLER SEGMENT \r\n     */\r\n\r\n    /**\r\n     * Override inheriting class data listener callback\r\n     * @param {*} data \r\n     */\r\n    onRead(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        data = me.#getDataLocal(me.skip, me.limit, me.filter, me.sort, data);\r\n        me.#notify('data', data);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#map = [];\r\n        GSCacheStyles.deleteRule(me.dataset.cssId);\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `width:${me.width};` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        me.dataset.cssId = style ? GSID.id : '';\r\n        GSCacheStyles.setRule(me.dataset.cssId, style);\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" name=\"${me.name}\" ${cspan} \r\n            data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" \r\n            class=\"${clssort} ${me.cssHeader} ${me.dataset.cssId}\" \r\n            data-css-id=\"${me.dataset.cssId}\">\r\n            ${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.id;\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        let type = '';\r\n        switch (me.type) {\r\n            case 'timestamp' :\r\n                type = 'datetime-local';\r\n                break;\r\n            default :\r\n                type = me.type || '';\r\n                break;\r\n        } \r\n        if (type) type = `type=\"${type}\"`;\r\n        return `<input ${type} auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table?.query('gs-store');\r\n    }\r\n\r\n    get #header() {\r\n        return this.closest('gs-header');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        const val = GSAttr.get(me, 'css-field', def)\r\n        return GSAttr.get(me.#header, 'css-field', val);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-filter', '');\r\n        return GSAttr.get(me, 'css-filter', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        const me = this;\r\n        const val = GSAttr.get(me.#header, 'css-header', 'border-end');\r\n        return GSAttr.get(me, 'css-header', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        const me = this;\r\n        const type = GSAttr.get(me, 'type');\r\n        return type ? type : me.store?.getField(me.name)?.type;\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSStore from \"./GSStore.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    // used for auto row sizing\r\n    #dftRec = 0;\r\n    #oSize = 0;\r\n    #rSize = 0;\r\n    #tid = 0;\r\n\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.listen('ready', me.#onStoreReady.bind(me));\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n\tasync onBeforeReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get(me, 'data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        \r\n        await super.onBeforeReady();\r\n\t}\r\n    \r\n    async onReady() {\r\n        const me = this;\r\n        me.#processData();\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n        me.attachEvent(window, 'resize', () => me.resize());\r\n        super.onReady();\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get autofit() {\r\n        return GSAttr.getAsBool(this, 'autofit', true);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set autofit(val = true) {\r\n        GSAttr.setAsBool(this, 'autofit', val);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    get filters() {\r\n        return this.#filter?.filters;\r\n    }\r\n\r\n    get sorters() {\r\n        return this.#sorter?.sorters;\r\n    }\r\n\r\n    get #sorter() {\r\n        return this.query('[is=\"gs-tablesort\"]');\r\n    }\r\n\r\n    get #filter() {\r\n        return this.query('[is=\"gs-tablefilter\"]');\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.queryAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data = []) {\r\n        if (!Array.isArray(data)) throw new Error('Received data is not JSON array!');\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    resize() {\r\n        const me = this;\r\n        clearTimeout(me.#tid);\r\n        me.#tid = setTimeout(() => me.#postResize(), 250);\r\n    }\r\n\r\n    #postResize() {\r\n\r\n        const me = this;\r\n        if (!me.autofit) return;\r\n\r\n        if (me.#dftRec === 0) {\r\n            me.#dftRec = me.store.limit;\r\n            const pg = me.query('gs-pager')?.getBoundingClientRect();\r\n            const th = me.query('thead')?.getBoundingClientRect();\r\n            me.#oSize = (pg?.height || 0) + (th?.height || 0);\r\n        }\r\n\r\n        if (me.#rSize === 0) {\r\n            me.#rSize = me.query('tbody tr')?.getBoundingClientRect().height || 0;\r\n        }\r\n\r\n        if (me.#dftRec === 0) return;\r\n        if (me.#rSize === 0) return;\r\n\r\n        const r = me.getBoundingClientRect();\r\n        const h = window.innerHeight - r.top - me.#oSize - (me.#rSize * 2);\r\n        const rows = Math.floor(h / me.#rSize);\r\n        me.store.limit = rows > 1 && rows < me.#dftRec ? rows : me.#dftRec;\r\n\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //me.emit('action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        me.emit('selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.sort = e.detail.data || [];\r\n        me.emit('sort', me.store.sort);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onColumnFilter(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        me.store.filter = e.detail.data || [];\r\n        me.emit('filter', me.store.filter);\r\n        if (!e.detail.initial) me.store.read();\r\n    }\r\n\r\n    #onStoreReady(e) {\r\n        const me = this;\r\n        const isStore = e.srcElement instanceof GSStore;\r\n        if (!isStore) return;\r\n        requestAnimationFrame(() => {\r\n            me.store.filter = me.filters;\r\n            me.store.sort = me.sorters;\r\n            me.store.page = 1;\r\n        });\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n        me.#onReady();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get sorters() {\r\n        const me = this;\r\n        let sort = [];\r\n        me.#sorted\r\n            .filter(el => GSUtil.asNum(el.dataset.order, 0) !== 0)\r\n            .forEach(el => {\r\n                const ord = GSUtil.asNum(el.dataset.order);\r\n                const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n                const name = GSAttr.get(el, 'name', el.innerText);\r\n                const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n                sort.push(cfg);\r\n            });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n        return sort;\r\n    }\r\n\r\n    get #autoSortable() {\r\n        return this.#sortable.filter(el => el.dataset.order != '0');\r\n    }\r\n\r\n    get #sorted() {\r\n        return this.#sortable.filter(el => el.dataset.idx != '0');\r\n    }\r\n\r\n    get #sortable() {\r\n        return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n            me.#onChange(false);\r\n        });\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data: me.sorters,\r\n            initial: e ? false : true\r\n        };\r\n        GSEvents.send(me, 'sort', obj, true, true, true);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (el.dataset.sortable != 'true') return;\r\n        const ord = GSUtil.asNum(el.dataset.order);\r\n        el.dataset.order = ord > 0 ? -1 : 1;\r\n        me.#onColumnSort(el, e.shiftKey);\r\n        me.#onChange(true);\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        const ord = GSUtil.asNum(el.dataset.order, -1);\r\n\r\n        if (append) {\r\n            me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n            GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                el.dataset.idx = 0;\r\n                el.dataset.order = 0;\r\n                GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        el.dataset.idx = me.#sc;\r\n        el.dataset.order = ord;\r\n        GSDOM.toggleClass(el, 'table-active', true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSID.setIf(me);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.root(this);\r\n    }\r\n\r\n    get filters() {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        return filter; \r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const obj = {\r\n            data : me.filters,\r\n            initial : e ? false : true\r\n        };\r\n        GSEvents.send(me, 'filter', obj, true, true, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return GSDOM.getValue(el);\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectCallback() {\r\n    super.disconnectedCallback();\r\n    this.#list = null;\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container z-10k ${me.css} ${me.position}\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-info', closable, timeout, delay, options);\r\n  }\r\n\r\n  success(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-success', closable, timeout, delay, options);\r\n  }\r\n\r\n  warn(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-warning', closable, timeout, delay, options);\r\n  }\r\n\r\n  danger(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-danger', closable, timeout, delay, options);\r\n  }\r\n\r\n  primary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-primary', closable, timeout, delay, options);\r\n  }\r\n\r\n  secondary(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-secondary', closable, timeout, delay, options);\r\n  }\r\n\r\n  dark(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-dark', closable, timeout, delay, options);\r\n  }\r\n\r\n  light(title, message, closable, timeout, delay, options) {\r\n    return this.display(title, message, 'text-bg-light', closable, timeout, delay, options);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification  (default 2 sec)\r\n   * @param {number} delay Timeout after which to show notification (default 1 sec)\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async display(title = '', message = '', css = '', closable = false, timeout = 2, delay = 0.5, options) {\r\n    if (!message) return;\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, delay, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout, delay);\r\n  }\r\n\r\n  #showWeb(title, message, css, closable, timeout, delay) {\r\n    const me = this;\r\n    // NOT used, dialog issue delay=\"${delay}\"\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    requestAnimationFrame(async () => {\r\n      await me.#delay(delay);\r\n      const toast = me.#dialogToast;\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  async #showNative(title, message, timeout, delay, options = {}) {\r\n    const me = this;\r\n    await me.#delay(delay);\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) notification.iid = setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg && dlg.isConnected ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  async #delay(delay = 0) {\r\n    if (GSUtil.isNumber(delay) && delay > 0 ) await GSUtil.timeout(delay * 1000);\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n    if(me.notification.iid) clearTimeout(me.notification.iid);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  async onBeforeReady() {\r\n    await super.onBeforeReady();\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2, delay = 0) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.delay = delay;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      if (me.delay > 0) await GSUtil.timeout(me.delay * 1000);\r\n      GSDOM.toggleClass(me.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get delay() {\r\n    return GSAttr.getAsNum(this, 'delay', 2);\r\n  }\r\n\r\n  set delay(val = 0) {\r\n    GSAttr.set(this, 'delay', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSStep\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * GSStep a signle element\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSStep extends GSElement {\r\n\r\n    static INACTIVE = 'text-bg-light';\r\n    static SELECTED = 'text-bg-secondary';\r\n    static COMPLETED = 'text-bg-primary';\r\n\r\n    static {\r\n        customElements.define('gs-step', GSStep);\r\n        Object.seal(GSStep);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['title', 'icon', 'color'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        if (name === 'icon') {\r\n            me.#iconVal = newValue;\r\n        }\r\n        if (name === 'title') {\r\n            me.#titleVal = newValue;\r\n        }\r\n        if (name === 'color') {\r\n            me.#colorVal(oldValue || GSStep.INACTIVE, newValue);\r\n        }\r\n    }\r\n\r\n    #colorVal(oldValue = '', newValue = '') {\r\n        const el = this.query('.step-icon');\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n    set #iconVal(val = '') {\r\n        const el = this.query('i');\r\n        GSAttr.set(el, 'class', val);\r\n    }\r\n\r\n    set #titleVal(val = '') {\r\n        this.query('.step-title').innerText = val;\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get color() {\r\n        return GSAttr.get(this, 'color', GSStep.INACTIVE);\r\n    }\r\n\r\n    set color(val = '') {\r\n        return GSAttr.set(this, 'color', val || GSStep.INACTIVE);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'icon-css', 'border rounded-circle fs-1');\r\n    }\r\n\r\n    get titleCSS() {\r\n        return GSAttr.get(this, 'title-css', 'mb-0 fs-6 mt-3 fw-bold');\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `\r\n            <div class=\"step d-block w-100 text-center mb-4\">\r\n                <div class=\"step-icon-wrap d-block w-100 text-center position-relative\">\r\n                    <div class=\"step-icon position-relative d-inline-block ${me.iconCSS} ${me.color}\">\r\n                        <i class=\"${me.icon}\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"step-title ${me.titleCSS}\">${me.title}</div>\r\n            </div>`;\r\n    }\r\n\r\n    get isWrap() {\r\n        return false;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'beforeend@.steps';\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../../head/GSCacheStyles.mjs\";\r\n\r\n/**\r\n * A module loading GSStepStyle class\r\n * @module components/steps/GSStepStyle\r\n */\r\nexport default class GSStepStyle {\r\n\r\n    static {\r\n        GSCacheStyles.adopt(GSStepStyle.style);\r\n    }\r\n\r\n    static get style() {\r\n        return `\r\n        .step .step-icon-wrap {\r\n            height: 80px;\r\n        }\r\n        \r\n        .step .step-icon-wrap::before,\r\n        .step .step-icon-wrap::after {\r\n            display: block;\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 50%;\r\n            height: 3px;\r\n            margin-top: -1px;\r\n            background-color: var(--bs-gray-200);\r\n            content: '';\r\n            z-index: 1\r\n        }\r\n        \r\n        .step .step-icon-wrap::before {\r\n            left: 0\r\n        }\r\n        \r\n        .step .step-icon-wrap::after {\r\n            right: 0\r\n        }\r\n        \r\n        .step .step-icon {\r\n            width: 80px;\r\n            height: 80px;\r\n            line-height: 81px;\r\n            z-index: 5\r\n        }\r\n                \r\n        .step:first-child .step-icon-wrap::before {\r\n            display: none\r\n        }\r\n        \r\n        .step:last-child .step-icon-wrap::after {\r\n            display: none\r\n        }\r\n                \r\n        @media (max-width: 576px) {\r\n            .flex-sm-nowrap .step .step-icon-wrap::before,\r\n            .flex-sm-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 768px) {\r\n            .flex-md-nowrap .step .step-icon-wrap::before,\r\n            .flex-md-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 991px) {\r\n            .flex-lg-nowrap .step .step-icon-wrap::before,\r\n            .flex-lg-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }\r\n        \r\n        @media (max-width: 1200px) {\r\n            .flex-xl-nowrap .step .step-icon-wrap::before,\r\n            .flex-xl-nowrap .step .step-icon-wrap::after {\r\n                display: none\r\n            }\r\n        }        \r\n        `;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStep class\r\n * @module components/steps/GSSteps\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSStep from \"./GSStep.mjs\";\r\nimport GSStepStyle from \"./GSStepStyle.mjs\";\r\n\r\n/**\r\n * Steps walker prev/next track current step and update step status\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSteps extends GSElement {\r\n\r\n    #index = 0;\r\n\r\n    static {\r\n        customElements.define('gs-steps', GSSteps);\r\n        Object.seal(GSSteps);\r\n        GSStepStyle.style;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get steps() {\r\n        return this.queryAll('gs-step');\r\n    }\r\n\r\n    get items() {\r\n        return this.queryAll('gs-item');\r\n    }\r\n\r\n    get length() {\r\n        return this.items.length;\r\n    }\r\n\r\n    get index() {\r\n        return this.#index;\r\n    }\r\n\r\n    set index(val = 0) {\r\n        const me = this;\r\n        if (val < 0 || val >= me.length) return;\r\n        me.#index = val;\r\n    }\r\n\r\n    get current() {\r\n        const me  = this;\r\n        return me.steps[me.#index];\r\n    }\r\n\r\n    get isFirst() {\r\n        return this.#index === 0;\r\n    }\r\n\r\n    get isLast() {\r\n        return this.#index === this.length-1;\r\n    }\r\n\r\n    next() {\r\n        const me = this;\r\n        if (me.isLast) return false;\r\n        me.current.color = GSStep.COMPLETED;\r\n        me.index++;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    previous() {\r\n        const me = this;\r\n        if (me.isFirst) return false;\r\n        me.current.color = GSStep.INACTIVE;\r\n        me.index--;\r\n        me.current.color = GSStep.SELECTED;\r\n        return me.current;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.steps.forEach(it => it.color = GSStep.INACTIVE);\r\n        requestAnimationFrame(() => {\r\n            me.#index = 0;\r\n            me.current.color = GSStep.SELECTED;\r\n        });\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        const steps = items.map((el, idx) => me.#renderStep(el, idx)).join('');\r\n        const css = 'steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x';\r\n        return `<div class=\"${css}\"></div>${steps}`;\r\n    }\r\n\r\n    #renderStep(el, idx) {\r\n        if (idx === 0) GSAttr.set(el, 'color', GSStep.SELECTED);\r\n        return `<gs-step ${GSAttr.flatten(el)}></gs-step>`;\r\n    }\r\n  \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSChart class\r\n * @module components/GSChart\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSLoader from '../base/GSLoader.mjs';\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n\r\n/**\r\n * Code editor based on ChartJS Library\r\n * https://www.chartjs.org/docs/latest/\r\n * \r\n * <gs-chart css=\"\"></gs-chart>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSChart extends GSElement {\r\n\r\n    static #isChart = false;\r\n    static #initializing = false;\r\n    static #Chart = null;\r\n\r\n    #chart = null;\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_CHART || globalThis.location?.origin || '/webcomponents';\r\n    }\r\n\r\n    static async #init() {\r\n        if (GSChart.URL_LIB === false) return;\r\n        if (GSChart.#isChart || GSChart.#initializing) return;\r\n        GSChart.#initializing = true;\r\n        try {\r\n            const origin = GSChart.URL_LIB;\r\n            const url = `${origin}/assets/chart/chart.mjs`;\r\n            const { Chart, registerables } = await import(url);\r\n            Chart.register(...registerables);        \r\n            GSChart.#Chart = Chart;\r\n            GSChart.#isChart = true;\r\n            GSEvents.send(document, 'gs-chart');\r\n        }  catch(e) {\r\n            GSLog.error(null, e);\r\n        } finally {\r\n            GSChart.#initializing = false;\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-chart', GSChart);\r\n        Object.seal(GSChart);   \r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['width', 'height'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.resize(me.width, me.height);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSChart.#init();\r\n        if(!GSChart.#isChart) await GSEvents.wait(document, 'gs-chart', 0, false);\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        if (me.#chart) me.#chart.destroy();\r\n        me.#chart = null;\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        if (me.width && me.height) {\r\n            return `<canvas width=\"${me.width}\" height=\"${me.height}\" class=\"${me.css}\"></canvas>`;\r\n        }\r\n        return `<canvas class=\"${me.css}\"></canvas>`;\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        me.#render();\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.getAsNum(this, 'width', 0);\r\n    }\r\n\r\n    set width(val = '') {\r\n        return GSAttr.setAsNum(this, 'width', val);\r\n    }\r\n\r\n    get height() {\r\n        return GSAttr.getAsNum(this, 'height', 0);\r\n    }\r\n\r\n    set height(val = '') {\r\n        return GSAttr.setAsNum(this, 'height', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart JSON data\r\n     */\r\n    get data() {\r\n        return GSAttr.get(this, 'data');\r\n    }\r\n\r\n    set data(val = '') {\r\n        return GSAttr.get(this, 'data', val);\r\n    }\r\n\r\n    /**\r\n     * URL of chart options JSON data\r\n     */\r\n    get options() {\r\n        return GSAttr.get(this, 'options');\r\n    }\r\n\r\n    set options(val = '') {\r\n        return GSAttr.get(this, 'options', val);\r\n    }\r\n\r\n    get canvas() {\r\n        return this.query('canvas');\r\n    }\r\n\r\n    // https://www.chartjs.org/docs/latest/developers/api.html\r\n\r\n    reset() {\r\n        this.#chart?.reset();\r\n    }\r\n\r\n    render() {\r\n        this.#chart?.render();\r\n    }\r\n\r\n    update(val) {\r\n        this.#chart?.update(val);\r\n    }\r\n\r\n    stop() {\r\n        this.#chart?.stop();\r\n    }\r\n\r\n    clear() {\r\n        this.#chart?.clear();\r\n    }\r\n\r\n    resize(x, y) {\r\n        const me = this;\r\n        if (!me.#chart) return;\r\n        requestAnimationFrame(() => {\r\n            const div = me.query('div');\r\n            if (div) {\r\n                div.style.width = `${x}px`;\r\n                div.style.height = `${y}px`;\r\n            }\r\n            me.#chart.resize(x, y);\r\n        });\r\n    }\r\n\r\n    toBase64Image(type = \"image/png\", quality = 1) {\r\n        return this.#chart?.toBase64Image(type, quality);\r\n    }\r\n\r\n    // internal functions to render JSON from gs-items elements\r\n\r\n    async #render() {\r\n\r\n        const me = this;\r\n\r\n        const options = await GSLoader.loadSafe(me.options, 'GET', null, true, {});\r\n        const data = await GSLoader.loadSafe(me.data, 'GET', null, true, []);\r\n\r\n        const el = me.querySelector('gs-item[group=\"options\"]');\r\n        const opt = Object.assign(options, GSChart.toJson(el));\r\n\r\n        const sets = opt.data.datasets;\r\n        sets.forEach((o, i) => {\r\n            o.data = sets.length === 1 ? data : data[i] || [];\r\n        });\r\n\r\n        if (me.#chart) return me.update(opt);\r\n\r\n        const ctx = me.canvas.getContext('2d');\r\n        me.#chart = new GSChart.#Chart(ctx, opt);\r\n    }\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n     static toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSChart.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSChart.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSChart.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSChart.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Code highlighter based on hljs library\r\n * https://highlightjs.org/\r\n * \r\n * <gs-highlight url=\"\" target=\"\"></gs-highlight>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSHighlight extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-highlight', GSHighlight);\r\n        Object.seal(GSHighlight);\r\n    }\r\n    \r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(oldValue, newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme();\r\n                break;\r\n            case 'target':\r\n                me.#onTarget();\r\n                break;\r\n            case 'url':\r\n                me.#onURL();\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return '<pre><code><code/><pre/>';\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    async onBeforeReady() {\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n        if (me.theme) me.#onTheme();\r\n        if (me.url) return me.#onURL();\r\n        if (me.target) return me.#onTarget();\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data to highlight\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'default');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated list of additiona languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        return GSAttr.get(this, 'language', '');\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    #onLanguage(oldValue, newValue) {\r\n        const me = this;\r\n        if (oldValue) GSDOM.toggleClass(me.#code, `language-${oldValue}`, false);\r\n        if (newValue) GSDOM.toggleClass(me.#code, `language-${newValue}`, true);\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlight.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.query('code');\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const html = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + html: html);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append : append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlight.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlight.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Code editor based on MS Monaco \r\n * https://microsoft.github.io/monaco-editor/\r\n * \r\n * <gs-monaco url=\"\" target=\"\" theme=\"vs-dark\" langauage=\"html\"></gs-monaco>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMonaco extends GSElement {\r\n\r\n    static #initialized = false;\r\n    #editor = null;\r\n\r\n    static {\r\n        customElements.define('gs-monaco', GSMonaco);\r\n        Object.seal(GSMonaco);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MONACO || 'https://unpkg.com/monaco-editor@latest/min/';\r\n    }\r\n\r\n    static async #init() {\r\n        if  (GSMonaco.#initialized) return;\r\n        GSMonaco.#initEnv();\r\n        await GSMonaco.#initLib();\r\n        await GSMonaco.#initMonaco();\r\n        GSMonaco.#initialized = true;\r\n    }\r\n\r\n    static async #initLib() {\r\n        if (globalThis.monaco) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = `${GSMonaco.URL_LIB}vs/loader.js`;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\r\n    // the default worker url location (used when creating WebWorkers). The problem here is that\r\n    // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\r\n    // a web worker through a same-domain script\r\n    static #initEnv() {\r\n        window.MonacoEnvironment = {\r\n            baseUrl: `${GSMonaco.URL_LIB}`,\r\n            getWorkerUrl: (workerId, label) => {\r\n                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\r\n                globalThis.MonacoEnvironment = {baseUrl: '${GSMonaco.URL_LIB}'};\r\n                importScripts('${GSMonaco.URL_LIB}vs/base/worker/workerMain.js');`\r\n                )}`;\r\n            }\r\n        };\r\n    }\r\n\r\n    static #initMonaco() {\r\n        return new Promise((resolve, reject) =>{\r\n            // TODO  set disabled to true and manually load themes into shadow dom\r\n            require.config({ \r\n                paths: { 'vs': `${GSMonaco.URL_LIB}/vs` },\r\n                'vs/css': { disabled: false } \r\n             });\r\n            require(['vs/editor/editor.main'], resolve);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['theme', 'url', 'target', 'language'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    // prevent attaching shadow and dom internals\r\n    static get disabledFeatures() { return ['shadow', 'internals']; }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await GSMonaco.#init();\r\n        super.connectedCallback();\r\n    }\r\n    \r\n    onBeforeReady() {\r\n        super.onBeforeReady();\r\n        this.#onMonacoReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'language':\r\n                me.#onLanguage(newValue);\r\n                break;\r\n            case 'theme':\r\n                me.#onTheme(newValue);\r\n                break;\r\n            case 'target':\r\n                me.#onTarget(newValue);\r\n                break;\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return `<div class=\"${this.css}\"><div/>`;\r\n    }\r\n\r\n    get monaco() {\r\n        return window.monaco;\r\n    }\r\n\r\n    get editor() {\r\n        return this.#editor;\r\n    }\r\n\r\n    get model() {\r\n        return this.#editor.getModel();\r\n    }\r\n\r\n    /**\r\n     * Get editor code \r\n     * \r\n     * @param {string} data \r\n     */\r\n    get code() {\r\n        const me = this;\r\n        return me.#editor?.getValue() || '';\r\n    }\r\n\r\n    set code(data = '') {\r\n        const me = this;\r\n        if (me.#editor) me.#editor.setValue(data);\r\n    }\r\n\r\n    /**\r\n     * Get text selected in Monaco\r\n     */\r\n    get selection() {\r\n        const me = this;\r\n        return me.model.getValueInRange(me.editor.getSelection());\r\n    }\r\n\r\n    /**\r\n     * Must be flat, as Monaco is loading and injecting CSS on its own\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        return GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n    /**\r\n     * CSS query location from where to load innerHTML data \r\n     * \r\n     * @returns {string}\r\n     */\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * HLJS CSS theme to load into a page\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get theme() {\r\n        return GSAttr.get(this, 'theme', 'vs-dark');\r\n    }\r\n\r\n    set theme(val = '') {\r\n        return GSAttr.set(this, 'theme', val);\r\n    }\r\n\r\n    /**\r\n     * Comma separated lsit of additional languages\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get language() {\r\n        const me = this;\r\n        const ext = me.url ? me.url.split('\\.').pop(-1) : '';\r\n        return GSAttr.get(me, 'language', ext);\r\n    }\r\n\r\n    set language(val = '') {\r\n        return GSAttr.set(this, 'language', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    #onLanguage(language) {\r\n        const me = this;\r\n        if (me.monaco && language) {\r\n            me.monaco.editor.setModelLanguage(me.model, language);\r\n        }\r\n    }\r\n\r\n    async #onTheme(theme) {\r\n        const me = this;\r\n        if (me.monaco && theme) me.monaco.editor.setTheme(theme);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget(target) {\r\n        const me = this;\r\n        const el = target ? GSDOM.query(target) : null;\r\n        if (!el) return me.code = `Element with id ${target} not found!`;\r\n        me.code = el.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL(url) {\r\n        const me = this;\r\n        const data = url ? await GSLoader.load(url) : null;\r\n        if (!data) return me.code = `Code URL ${url} unreachable!`;\r\n        me.code = '';\r\n        me.#onLanguage(me.language);\r\n        me.code = data;\r\n    }\r\n\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #onMonacoReady() {\r\n\r\n        const me = this;\r\n\r\n        const opt = {\r\n            value: ``,\r\n            language: me.language,\r\n            theme: me.theme,\r\n            automaticLayout: true,\r\n            minimap: { enabled: false }\r\n        };\r\n\r\n        me.#editor = me.monaco?.editor?.create(me.#container, opt);\r\n\r\n        me.attachEvent(self, 'resize', me.#onResize.bind(me));\r\n        \r\n        try {\r\n            if (me.url) {\r\n                me.#onURL(me.url);\r\n            } else if (me.target) {\r\n                me.#onTarget(me.target);\r\n            }\r\n        } finally {\r\n            requestAnimationFrame(() => me.emit('initialized'));\r\n            me.#onResize();\r\n        }\r\n    }\r\n\r\n    #onResize(e) {\r\n        const me = this;\r\n        me.#editor.layout({ width: 0, height: 0 });\r\n\r\n        requestAnimationFrame(() => {\r\n            const rect = me.owner.getBoundingClientRect();\r\n            me.#editor.layout({ width: rect.width, height: rect.height });\r\n        })\r\n    }\r\n\r\n    get owner() {\r\n        const me = this;\r\n        const owner = super.owner;\r\n        return owner === document.body ? me.parentElement : me.owner;\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHighlight class\r\n * @module components/GSHighlight\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/*\r\n // use to create linked gs-markdown for ui menu and viewer\r\n const md = GSComponents.find('gs-markdown')\r\n md.addEventListener('link', e => {\r\n    GSEvents.prevent(e);\r\n    // take e.detail and set it to another gs-markdown element\r\n })\r\n */\r\n\r\n/**\r\n * Markdown document renderer\r\n * \r\n * <gs-markdown url=\"\"></gs-markdown>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSMarkdown extends GSElement {\r\n\r\n    #converter = null;\r\n    #last = null;\r\n    #first = null;\r\n    #root = null;\r\n    #path = null;\r\n    #cache = [];\r\n\r\n    static {\r\n        GSMarkdown.#init();\r\n    }\r\n    \r\n    static #init() {\r\n        customElements.define('gs-markdown', GSMarkdown);\r\n        Object.seal(GSMarkdown);\r\n    }\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_MARKDOWN || 'https://unpkg.com/showdown/dist/showdown.min.js';\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['url'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    async connectedCallback() {\r\n        await this.#initLib();\r\n        if (globalThis.showdown) super.connectedCallback();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        switch (name) {\r\n            case 'url':\r\n                me.#onURL(newValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const style = me.maxHeight > 0 ? `style=\"max-height: ${me.maxHeight}px;\"` : '';\r\n        return `<div class=\"overflow-auto ${me.css}\" ${style}><div/>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const opt = {tasklists:true, tables : true};\r\n        me.#converter = new globalThis.showdown.Converter(opt);        \r\n        me.#toCache(me.url);\r\n        me.#onURL(me.url)\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get root() {\r\n        return this.#root || '';\r\n    }\r\n\r\n    /**\r\n     * URL location from where to load data\r\n     * \r\n     * @returns {string}\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url');\r\n    }\r\n\r\n    set url(val = '') {\r\n        const me = this;\r\n        me.#toCache(val);\r\n        return GSAttr.set(me, 'url', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get history() {\r\n        return GSAttr.getAsNum(this, 'history', 10);\r\n    }\r\n\r\n    set history(val = '') {\r\n        const me = this;\r\n        return GSAttr.setAsNum(me, 'history', val, 10);\r\n    }\r\n\r\n    get maxHeight() {\r\n        return GSAttr.getAsNum(this, 'max', 0);\r\n    }\r\n\r\n    set maxHeight(val = '') {\r\n        return GSAttr.setAsNumt(this, 'max', val);\r\n    }\r\n\r\n    back() {\r\n        const me = this;\r\n        const url = me.#fromCache();\r\n        if (url) me.#onURL(url);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to rendering\r\n     */\r\n    async #onURL(url = '') {\r\n        const me = this;\r\n\r\n        url = me.#normalize(url);\r\n        if (!url) return;\r\n\r\n        let data = await GSLoader.load(url);\r\n        if (!data) return;\r\n        \r\n        me.#path = me.#parent(url);\r\n        if (!me.#root) me.#root = me.#path;\r\n\r\n        // MD library error fix\r\n        data = data.replace(/^[-_\\*]{3}$/gm, '<hr>');\r\n        \r\n        me.#container.innerHTML = me.#makeHtml(data);\r\n\r\n        GSEvents.send(me, 'data', url);\r\n        requestAnimationFrame(() => {\r\n            me.#handleLinks();\r\n            me.#handleTables();\r\n            me.#handleCode();\r\n        });        \r\n    }\r\n\r\n    #normalize(url = '') {\r\n        const me = this;\r\n        if (!url || url.startsWith('http')) return url;\r\n        return me.#path ? new URL(url, me.#path).toString() :\r\n        GSLoader.normalizeURL(url, true);\r\n    }\r\n\r\n    #parent(url = '') {\r\n        return url.endsWith('/') ? url : GSLoader.parentPath(url);\r\n    }\r\n\r\n    #handleCode() {\r\n        this.#handleStyles('pre:has(code)', 'text-white bg-dark p-1');\r\n    }\r\n    \r\n    #handleTables() {\r\n        const me = this;\r\n        const clss = \"table table-light table-hover table-striped table-bordered w-auto shadow-sm\";\r\n        me.#handleStyles('table', clss);\r\n    }\r\n\r\n    #handleStyles(qry, css) {\r\n        const me = this;\r\n        const list =  GSDOM.queryAll(me.#container, qry);\r\n        list.forEach(el => {\r\n            GSDOM.toggleClass(el, css);\r\n        });\r\n    }\r\n    \r\n    #handleLinks() {\r\n        const me = this;\r\n        const links =  GSDOM.queryAll(me.#container, 'a').filter(el => !GSAttr.get(el, 'href').startsWith('#'));\r\n\r\n        links\r\n        .filter(el => !(GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/')) )\r\n        .forEach(el => el.target = \"_blank\");\r\n\r\n        links\r\n        .filter(el => GSAttr.get(el, 'href').endsWith('.md') || GSAttr.get(el, 'href').endsWith('/') )\r\n        .forEach(el => {\r\n            GSEvents.attach(el, el, 'click', me.#onLinkClick.bind(me));\r\n        });\r\n\r\n    }\r\n\r\n    #onLinkClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const href = GSAttr.get(el, 'href');\r\n        if (href.startsWith('#')) return;\r\n        GSEvents.prevent(e);\r\n        el.href = me.#normalize(href);\r\n\r\n        const success = GSEvents.send(me, 'link', el.href, false, false, true);\r\n        if (!success) return;\r\n\r\n        me.#toCache(el.href);\r\n        me.#onURL(el.href);\r\n        return false;\r\n    }\r\n\r\n    #fromCache() {\r\n        const me = this;\r\n        const url = me.#cache.length > 0 ? me.#cache.pop() : me.#first;\r\n        return url && url === me.#last ? me.#fromCache() : url;\r\n    }\r\n\r\n    #toCache(url) {\r\n        const me = this;\r\n        if(me.#cache.length >= me.history) me.#cache = me.#cache.slice(1);\r\n        if (me.#last == url) return;\r\n        me.#cache.push(url);\r\n        me.#last = url;\r\n        if (!me.#first) me.#first = url;\r\n    }\r\n\r\n    #makeHtml(data) {\r\n        return this.#converter.makeHtml(data);\r\n    }\r\n\r\n    async #initLib() {\r\n        const me = this;\r\n        if (globalThis.showdown) return;\r\n        const script = document.createElement('script');\r\n        const promise = GSEvents.wait(script, 'load', 0, false);\r\n        script.type = \"text/javascript\";\r\n        script.src = GSMarkdown.URL_LIB;\r\n        GSDOM.appendChild(document.head, script);\r\n        await promise;\r\n    }\r\n\r\n    /**\r\n     * Return injection point for rendered markdown\r\n     */\r\n    get #container() {\r\n        return this.query('div');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSBase","HTMLElement","refid","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","render","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","error","async","hasAttribute","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","globalThis","GS_NO_CACHE","localStorage","getItem","GSDynamicStyle","CSSStyleSheet","constructor","super","deleteRule","Array","from","cssRules","map","selectorText","filter","getRule","pop","setRule","style","sync","rule","insertRule","data","replaceAll","split","trim","entries","kv","updateRule","prop","isImportant","setProperty","GSCacheStyles$1","GSCacheStyles","Map","sheet","store","set","create","replaceSync","get","delete","dynamic","adoptedStyleSheets","styles","sort","a","b","String","localeCompare","values","css","freeze","adopt","GSLinkExt","HTMLLinkElement","callback","order","isCSS","setInterval","onLoad","bind","clearInterval","sendSuspendedEvent","asText","proxy","o","cssText","join","styleSheets","sh","ownerNode","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","disabled","notheme","theme","activeTheme","res","fetch","ok","text","removeAttribute","URLSearchParams","slice","querySelectorAll","window","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSID","prefx","next","GSUtil$1","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","dft","isNumber","str","x","g","word","toUpperCase","capitalize","endsWith","pattern","charset","Math","floor","random","locale","language","languages","isNull","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","resolve","reject","iid","setTimeout","clearTimeout","blob","Blob","createObjectURL","download","click","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction$1","GSFunction","isFunction","own","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","contextualize","accept","queueMicrotask","GSAttr","isHTMLElement","isInstance","attr","asBool","asNum","toJson","NaN","stringify","attributes","sep","host","opt","Proxy","attribute","toggle","Number","setAsNum","multi","toStringArray","GSCSSMap$1","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","on","selText","ors","some","selector","logicalORs","reduce","all","concat","containsAny","GSData","Set","every","index","toSorted","compareArrays","first","second","arr","indexOf","fields","rec","filterRecord","filterSimple","filterComplex","key","found","flt","toLocaleLowerCase","sortPair","ord","idx","col","v1","v2","compare","compareNum","compareString","isBool","compareBool","s1","s2","ignoreNull","seg","writeSingleToOject","tree","hasOwnProperty","push","r","readFromProperty","readFromObject","GSDOM$1","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","forceWrap","nodes","fromNode","children","wrap","link","slot","isText","tagName","FORMEL","HTMLButtonElement","hasClass","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","parentAll","childAll","child","list","parentElement","offset","offsetParent","c","ShadowRoot","HTMLBodyElement","previousElementSibling","getByID","documentElement","walk","qry","query","queryAll","receiver","sanitize","sanitizer","setHTML","innerHTML","Document","textContent","toggleClass","contains","root","unwrap","valueAsNumber","selectedOptions","checked","getValue","styleValue","textTransform","ignore","checkValidity","writeToOject","toValue","fromObject2Element","objectPathExist","fromValue","recursive","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","d","setValue","group","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","GSEvents","altContext","protect","listen","onContext","onKeyDown","shiftKey","prevent","code","ctrlKey","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","isWin","gselid","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","GSAbortController","AbortController","abort","GSPromise$1","GSPromise","callbacks","promise","onAbort","await","aborted","onResolve","onReject","GSEvent","EventTarget","listeners","listener","abortable","controller","off","emit","delayed","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","isFunctions","getFilter","exec","GSComponents$1","GSComponents","els","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","isFunctionDefined","onStyles","unstyled","listenStyles","GSVersion","version","build","GSLoader","GS_TEMPLATE_URL","TEMPLATE_URL","hasKey","NO_CACHE","setItem","path","isFile","isExt","UNIQUE","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","json","isJson","func","isFunc","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","cssId","position","margin","transform","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","astyle","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getInjectAttributesAttr","getDismiss","dismiss","getTarget","getToggle","getAction","getInject","inject","attrs","getSelectable","selectable","getAsBool","dismissAttr","targetAttr","toggleAttr","getType","actionAttr","injectAttr","injectAttributesAttr","injectAttributes","getName","getCSS","getActive","template","getBody","getHref","getGroup","selected","getSelected","GSBlock","setIf","OrientationController","addController","hostConnected","controllers","hostDisconnected","handle","offline","isValidOrientation","show","hide","attach","GSElement","ready","removed","content","proxied","opts","queued","queue","orientationController","mergeArrays","isWrap","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","styleID","createStyleClass","waitEvent","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","disconnect","deattachListeners","removeFlat","removeController","repaint","waitAnimationFrame","scheduledAttributes","onReady","onBeforeReady","pe","attachShadow","mode","useTemplate","useTpl","outerHTML","parseWrapped","insertAdjacent","applyTemplate","doReady","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","GSQuery","instance","GSGesture","xDiff","yDiff","xDown","yDown","bindings","swipe","tap","longPress","delay","move","handleTouchMove","start","handleTouchStart","end","handleTouchEnd","touches","clientX","clientY","onLongPress","xUp","yUp","GSReadWriteRegistryImpl","INTERNAL","verify","unregister","rw","GSReadWriteRegistry","GSAbstractReadWrite","enabled","enable","disable","isRegistered","onRead","onWrite","GSReadWrite","reader","writer","skip","limit","MODES","isQuark","METHOD","toURL","encodeURIComponent","fromLiteral","isOffline","isRemote","StyleController","GSCacheTemplate","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","altKey","dir","idxToDir","focus","view","isVisible","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","gsAttrMon","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","allComps","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","flattenJson","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","gsIgnore","form","is","removeElement","attachEvents","onStorage","disableInput","enableInput","reset","read","submit","onSubmit","reportValidity","elements","storage","fromObject","toObject","handler","old","write","onField","valid","GSInputExt","HTMLInputElement","_","changed","revealing","masks","isFormElement","placeholder","mask","toPattern","autofocus","onDataChange","strict","optimized","chars","special","autocopy","autoselect","reveal","maskType","maxLength","onKeyUp","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isButtonElement","isInList","clean","p","dataGroup","clipboard","writeText","select","clipboardData","getData","formatMask","isReveal","wordop","copycut","pos1","selectionStart","pos2","selectionEnd","setSelectionRange","metaKey","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSDataHandler","lifoReadRef","requestID","external","initLIFO","initHandler","cancelAnimationFrame","hasSetter","unlistenHandler","isInternal","updateHandler","listenHandler","verifyHandler","gsDebug","callOnceLifo","lifoReadRefCallback","lifoRead","defaultReader","defaultWriter","save","isExternal","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","pause","billboard","btn","activeCSS","dismissible","setAsNumt","GSButton","button","blur","icon","getAttrs","comment","ariaLabel","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","GSMenu","caller","csscnt","attachMenuItems","attachSubMenu","updatePos","closable","popup","isMouseOrPointerEvent","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","attachDynamic","overflowH","overflowV","handleGroup","option","sendDelayed","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","fromJSON","isSub","childElementCount","renderSub","fromDOM","renderChild","header","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","createMenu","targets","onPopup","GSCopyright","isCompany","isYear","company","GSDialog","STACK","updateStack","opened","dlg","dialog","showModal","notify","monitorAction","onForm","onVisible","onEscape","onClose","onCancel","buttonOkEl","forms","afterOpen","afterClose","onFormInit","escapable","isAcceptedAction","isOk","onDialogCancel","cancel","onDialogOk","f","actions","info","confirm","prompt","tab","beforeOpen","beforeClose","focusable","QUERY_INPUT","buttonCancelEl","align","footer","buttonOk","buttonCancel","findSlotOrEl","large","extra","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","patterns","validateAllowed","labelEl","inputEl","isRange","onRange","outputEl","setCustomValidity","slots","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","output","label","labelWrap","field","isFieldset","idattr","autoid","radioLayout","fieldSet","inputHTML","sel","isCheckable","cssField","autocomplete","autocapitalize","multiple","step","min","max","minlength","maxlength","description","readonly","required","fld","cssLabel","cellLabel","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","onModalCancel","onModalOk","setSize","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","swiper","onSwipeLeft","onSwipeRight","up","onSwipeUp","down","onSwipeDown","bindEvents","unbindEvents","backdropEl","canvasEl","onLeave","onEnter","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionDuration","transitionFunction","isFingersValid","fingers","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSOverlay","tid","svgid","updateSVG","svg","autoremove","overlayPadding","overlayRadius","overlayColor","overlayOpacity","oldTarget","newTarget","createSVG","createSVGPath","pathStr","createSVGPathString","viewBox","createElementNS","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","zIndex","pathEl","fill","pointerEvents","cursor","windowX","windowY","radius","limitedRadius","normalizedRadius","highlightBoxWidth","highlightBoxHeight","GSPopover","isPopover","hasPopover","popover","arrowID","contentel","bsContent","bsTrigger","isFocusTrigger","isHoverTrigger","arrowEl","popupAbsolute","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","Event","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","updatePercentage","barRule","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","autostore","ruleDynamic","cssDynamic","isPreceeding","isStyleValue","onMouseDown","onDoubleClick","csize","onMouseUp","onMouseMove","lock","updateMouse","lockable","gsSplitter","updateX","updateY","dx","styleDynamic","GSTab","tabs","renderTab","panes","renderPane","renderPanel","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","activePaneCSS","cssPane","previous","GSTooltip","isTooltip","GSTree","events","itemIcon","openIcon","closeIcon","rootEl","keydown","keyup","pid","isFolder","isOpen","nodeid","uiHtml","ce","itemIco","folder","toggleFolder","nid","pl","toggleIcon","cid","expand","iconEl","ico","prev","dom","fromJson","GSAttachment","file","directory","transfer","transferredFiles","files","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","entry","createReader","readEntries","results","getEntries","getFile","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","initStyle","GSStore","page","total","getField","table","isCached","MAX_VALUE","pages","nextPage","prevPage","lastPage","firstPage","formatFilter","formatSort","setData","isLocal","getDataLocal","filterData","sortData","records","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","emptyRow","cols","hdr","genRow","toType","fmt","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","dftRec","oSize","rSize","setCSS","onStoreReady","dataID","waitFor","contextMenu","processData","onColumnSort","onColumnFilter","onContextMenu","onData","autofit","isFilterable","sorters","sorter","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","ctx","postResize","pg","th","initial","srcElement","GSTableSort","HTMLTableRowElement","sc","sorted","cellIndex","autoSortable","GSTableFilter","attachChangeListener","attachDataListener","listID","GSPagination","firstlast","nextprev","getHtml","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","disconnectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","GSStep","iconVal","titleVal","colorVal","INACTIVE","color","iconCSS","titleCSS","GSStepStyle","GSSteps","steps","isFirst","isLast","COMPLETED","SELECTED","renderStep","flatten","GSChart","chart","URL_LIB","GS_URL_CHART","isChart","initializing","Chart","registerables","destroy","canvas","div","toBase64Image","quality","assign","sets","datasets","getContext","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSHighlight","GS_URL_HLJS","onLanguage","onTarget","onURL","highlight","onHighlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs","GSMonaco","editor","GS_URL_MONACO","initialized","initEnv","initLib","initMonaco","monaco","script","MonacoEnvironment","baseUrl","getWorkerUrl","workerId","require","config","paths","vs","disabledFeatures","onMonacoReady","model","getModel","selection","getValueInRange","getSelection","setModelLanguage","setTheme","container","automaticLayout","minimap","GSMarkdown","converter","GS_URL_MARKDOWN","showdown","maxHeight","Converter","tasklists","tables","toCache","history","back","fromCache","makeHtml","handleLinks","handleTables","handleCode","parentPath","handleStyles","links","onLinkClick"],"mappings":"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"}