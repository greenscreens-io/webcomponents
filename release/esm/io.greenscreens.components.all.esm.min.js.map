{"version":3,"file":"io.greenscreens.components.all.esm.min.js","sources":["../../modules/head/GSBase.mjs","../../modules/head/GSCacheStyles.mjs","../../modules/head/GSLinkExt.mjs","../../modules/head/GSStyleExt.mjs","../../modules/head/GSCSS.mjs","../../modules/head/GSScript.mjs","../../modules/head/GSLink.mjs","../../modules/base/GSLog.mjs","../../modules/base/GSID.mjs","../../modules/base/GSUtil.mjs","../../modules/base/GSFunction.mjs","../../modules/base/GSAttr.mjs","../../modules/base/GSCSSMap.mjs","../../modules/base/GSDOM.mjs","../../modules/base/GSEvents.mjs","../../modules/base/GSEvent.mjs","../../modules/base/GSEventBus.mjs","../../modules/base/GSEnvironment.mjs","../../modules/base/GSDOMObserver.mjs","../../modules/base/GSComponents.mjs","../../modules/base/GSLoader.mjs","../../modules/base/GSData.mjs","../../modules/base/GSDate.mjs","../../modules/base/GSPopper.mjs","../../modules/base/GSItem.mjs","../../modules/base/GSBlock.mjs","../../modules/base/GSElement.mjs","../../modules/base/GSi18n.mjs","../../modules/base/GSQueryCSS.mjs","../../modules/base/GSQuery.mjs","../../modules/templating/GSCacheTemplate.mjs","../../modules/templating/GSTemplate.mjs","../../modules/components/ext/GSAccessibility.mjs","../../modules/components/ext/GSComboExt.mjs","../../modules/components/ext/GSDataAttr.mjs","../../modules/components/ext/GSDataListExt.mjs","../../modules/components/ext/GSFormExt.mjs","../../modules/components/ext/GSInputExt.mjs","../../modules/components/ext/GSNavLinkExt.mjs","../../modules/components/ext/GSUListExt.mjs","../../modules/components/intl/GSTimeFormat.mjs","../../modules/components/intl/GSDateFormat.mjs","../../modules/components/intl/GSYearFormat.mjs","../../modules/components/intl/GSCurrencyFormat.mjs","../../modules/components/GSAccordion.mjs","../../modules/components/GSAlert.mjs","../../modules/components/GSButton.mjs","../../modules/components/GSCalendar.mjs","../../modules/components/GSCenter.mjs","../../modules/components/GSMenu.mjs","../../modules/components/GSContext.mjs","../../modules/components/GSDialog.mjs","../../modules/components/GSDropdown.mjs","../../modules/components/GSFormGroup.mjs","../../modules/components/GSLayout.mjs","../../modules/components/GSList.mjs","../../modules/components/GSModal.mjs","../../modules/components/GSNav.mjs","../../modules/components/GSOffcanvas.mjs","../../modules/components/GSPopover.mjs","../../modules/components/GSPopup.mjs","../../modules/components/GSProgress.mjs","../../modules/components/GSSplitter.mjs","../../modules/components/GSTab.mjs","../../modules/components/GSTooltip.mjs","../../modules/components/filebox/GSAttachment.mjs","../../modules/components/filebox/GSFileBox.mjs","../../modules/components/table/GSStore.mjs","../../modules/components/table/GSColumn.mjs","../../modules/components/table/GSHeader.mjs","../../modules/components/table/GSTBody.mjs","../../modules/components/table/GSTable.mjs","../../modules/components/table/GSTableSort.mjs","../../modules/components/table/GSTableFilter.mjs","../../modules/components/table/GSPagination.mjs","../../modules/components/toast/GSNotification.mjs","../../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().indexOf('native code') > 0;\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner, native = true) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport default class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n\t\treturn  GSCSSMap.#modern ? me.#map.get(name) :  me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic #getMap(el) {\r\n\t\tif (GSCSSMap.#modern) return el.computedStyleMap();\r\n\t\tif (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n     static styleValue(el, name) {\r\n\t\treturn GSCSSMap.getComputedStyledMap(el).get(name);\r\n\t}\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static {\r\n\t\tObject.seal(GSCSSMap);\r\n\t\tglobalThis.GSCSSMap = GSCSSMap;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.query(el);\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\tel.style[kv[0]] = kv[1];\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.query(el);\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {object} obj Data source key/value pairs\r\n\t * @param {string} qry Element type selector,defaults to form elements \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement} own \r\n\t * @param {boolean} recursive \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(own, recursive = true) {\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tobj['#tagName'] = own.tagName.toLowerCase();\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children);\r\n\t\t\tif (children.length > 0) {\r\n\t\t\t\tobj.items = [];\r\n\t\t\t\tchildren.forEach(el => obj.items.push(GSDOM.toJson(el)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {object} obj \r\n\t * @param {boolean} asString As string or HTMLElement Tree \r\n\t * @param {string} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsDOM(o));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {*} obj \r\n\t * @param {*} tag \r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvents {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', e =>  GSEvents.prevent(e));\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvents.#loaded) await GSEvents.wait(globalThis.window, 'load'); // DOMContentLoaded\r\n\t\tGSEvents.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n \r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {string} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport default class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        return this.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event \r\n     * @param {string} type Event name to be listened\r\n     * @returns {Event}\r\n     */\r\n    wait(type = '') {\r\n        if (!type) return e('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(type, (e) => r(e));\r\n        });\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\nimport GSEvent from './GSEvent.mjs';\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus  {\r\n\r\n    static #registry = new Map();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEvent());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus?.unbind) bus.unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEventBus);\r\n        globalThis.GSEventBus = GSEventBus;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvents.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvents.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvents.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSCSSMap from \"./GSCSSMap.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst me = this;\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(element);\r\n\t\t\r\n\t\tobj.left = css.asNum('padding-left');\r\n\t\tobj.right = css.asNum('padding-right');\r\n\t\tobj.top = css.asNum('padding-top');\r\n\t\tobj.bottom = css.asNum('padding-bottom');\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getGroup(el) {\r\n\t\treturn GSAttr.get(el, 'group');\r\n\t}\r\n\r\n\tstatic getSelected(el) {\r\n\t\treturn el.hasAttribute('selected');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(this);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSItem.getHref(this);\r\n\t}\r\n\r\n\tget group() {\r\n\t\treturn GSItem.getGroup(this);\r\n\t}\r\n\r\n\tget selected() {\r\n\t\treturn GSItem.getSelected(this);\r\n\t}\r\n\r\n\tget html() {\r\n\t\tconst me = this;\t\t\r\n\t\tif  (GSUtil.isStringEmpty(me.group)) return me.name;\r\n\t\tconst id = GSID.id;\r\n\t\tconst c = me.selected ? 'checked' : '';\r\n\t\treturn `<input id=\"${id}\" ${c} type=\"radio\" name=\"${me.group}\"><label class=\"ms-2\" for=\"${id}\">${me.name}</label>`;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * Do not use it directly. Used internaly when GSElement marked as flat.\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvents from \"./GSEvents.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id', 'visible'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy');\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\t/*\r\n\t\tif (me.isProxy) return me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t\treturn me.querySelector('[slot]:not(template),:not(gs-item)') ? me : me.#content;\r\n\t\t*/\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Check element visibility\r\n\t */\r\n\tget visible() {\r\n\t\treturn this.hasAttribute('visible');\r\n\t}\r\n\r\n\t/**\r\n\t * Set element visibility\r\n\t */\r\n\tset visible(val = true) {\r\n\t\tGSAttr.setAsBool(this, 'visible', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvents.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, false, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', shadow = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, false, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, false, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\tif (def) return GSLoader.getTemplate(def);\r\n\t\tconst el = this.query('template');\r\n\t\treturn el ? el.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tme.#observer?.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvents.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (name === 'visible') {\r\n\t\t\tGSDOM.toggleClass(me, 'gs-hide', newValue === 'false');\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvents.send(me, 'ready', {});\r\n\t\tGSEvents.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvents.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\ttry {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tif (!me.#useTemplate) return;\r\n\t\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\t} finally {\r\n\t\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic safe component define\r\n\t * @param {*} name \r\n\t * @param {*} clazz \r\n\t * @param {*} opt \r\n\t * @returns \r\n\t */\r\n\t static define(name, clazz, opt) {\r\n\t\tif (customElements.get(name)) return;\r\n\t\tif (customElements.GSDefine) return customElements.GSDefine(name, clazz, opt);\r\n\t\treturn customElements.define(name, clazz, opt);\r\n\t}\r\n\t\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t\tif (!customElements.GSDefine) {\r\n\t\t\tcustomElements.GSDefine = customElements.define;\r\n\t\t\tcustomElements.define = GSElement.define;\r\n\t\t\tObject.freeze(customElements);\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Proxy class to handle chained css.\r\n * See GSQuery class\r\n */\r\nexport default class GSQueryCSS {\r\n\r\n    #map = null;\r\n\r\n    constructor(element) {\r\n        if (!GSDOM.isHTMLElement(element)) throw new Error('Only HTMLElement type allowed!');\r\n        this.#map = new GSCSSMap(element);\r\n    }\r\n\r\n    #isFunc(property) {\r\n        return GSFunction.hasFunction(this.#map, property);\r\n    }\r\n\r\n    get(object, property, receiver) {\r\n        return (value, dft) => {\r\n            const me = this;\r\n            if (GSUtil.isNull(value)) return me.#map.get(property);\r\n            if (me.#isFunc(property)) return me.#map[property](value, dft);\r\n            object[property] = value;\r\n            return receiver;\r\n        }\r\n    }\r\n\r\n    static wrap(element) {        \r\n        return new Proxy(element.style, new GSQueryCSS(element));\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSQueryCSS from \"./GSQueryCSS.mjs\";\r\n\r\n/**\r\n * Proxy class for wrapping HTMLElement, allowing to use GS query across shadow dom\r\n * and css operations for easier property get /set\r\n * \r\n * const el = GSQuery.wrap(document.body);\r\n * el.query('div') // query across shadow dom\r\n * el.css = {width:'100px'} // easier way to set css\r\n * \r\n * // chained css property setup\r\n * el.css.width('100px').background('red')\r\n * \r\n * // retrieve calculated value\r\n * console.log(el.css.background)\r\n * console.log(el.css.asNum('width'))\r\n */\r\nexport default class GSQuery {\r\n\r\n    #css = null;\r\n\r\n    constructor(element) {\r\n        if (!Array.isArray(element)) this.#css = GSQueryCSS.wrap(element);\r\n    }\r\n\r\n    get(object, property) {\r\n        if (property === 'css') return this.#css;\r\n        if (property === 'query') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.query(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }\r\n        if (property === 'queryAll') {\r\n            return (value, all, shadow) => {\r\n                const el = GSDOM.queryAll(object, value, all, shadow);\r\n                return GSQuery.wrap(el);\r\n            }\r\n        }        \r\n        return object[property];\r\n    }\r\n\r\n    set(object, property, value) {\r\n        switch (property) {\r\n            case 'css':\r\n                if (Array.isArray(object)) {\r\n                    object.forEach(element => element[property] = value); \r\n                } else {\r\n                    GSDOM.css(object, value);\r\n                }\r\n                break;\r\n            default:\r\n                object[property] = value;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static instance(node) {\r\n        return new Proxy(node, new GSQuery(node));\r\n    }\r\n\r\n    static wrap(node) {\r\n        if (GSDOM.isHTMLElement(node)) return GSQuery.instance(node);\r\n        if (!Array.isArray(node)) return node;\r\n        node = node.map(element => GSQuery.instance(element));\r\n        return GSQuery.instance(node);\r\n    }\r\n    \r\n    static all(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.queryAll(own, qry, all, shadow));\r\n    }\r\n\r\n    static first(own, qry, all, shadow) {\r\n        return GSQuery.wrap(GSDOM.query(own, qry, all, shadow));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSQuery);\r\n        globalThis.GSQuery = GSQuery;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvents.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvents.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvents.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccessibility class\r\n * @module components/ext/GSAccessibility\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\nexport default class GSAccessibility {\r\n\r\n    static KEYS = ['Space', 'Enter', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\r\n\r\n    static #active = false;\r\n\r\n    static #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n\r\n        const focused = GSDOM.activeElement;\r\n        if (!focused.matches(GSDOM.QUERY_FOCUSABLE)) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(focused, e);\r\n\r\n        // prev (-1); next (1)\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n\r\n        const next = GSAccessibility.#next(focused, dir);\r\n        next?.focus();\r\n\r\n    }\r\n\r\n    static idxToDir(idx) {\r\n        return idx === 2 || idx === 4 ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Send click event to a focusable element\r\n     * @param {*} focused \r\n     * @param {*} evt \r\n     */\r\n    static click(focused, evt) {\r\n        if (focused?.tagName === 'BUTTON') return;\r\n        const event = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n            shiftKey: evt.shiftKey,\r\n            altKey: evt.altKey,\r\n            ctrlKey: evt.ctrlKey\r\n        });\r\n        return focused.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Get next focusable element\r\n     * @param {*} focused \r\n     * @param {*} idx \r\n     * @returns \r\n     */\r\n    static #next(focused, dir) {\r\n        const list = GSDOM.queryAll(GSDOM.QUERY_FOCUSABLE).filter(el => GSDOM.isVisible(el));\r\n        let i = list.indexOf(focused) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    static start() {\r\n        if (GSAccessibility.#active) return;\r\n        GSEvents.listen(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = true;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static stop() {\r\n        if (!GSAccessibility.#active) return;\r\n        GSEvents.unlisten(document.body, null, 'keydown', GSAccessibility.#onKeyDown);\r\n        GSAccessibility.#active = false;\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static get active() {\r\n        return GSAccessibility.#active;\r\n    }\r\n\r\n    static set active(val) {\r\n        return GSUtil.asBool(val) ? GSAccessibility.start() : GSAccessibility.stop();\r\n    }\r\n\r\n    static {\r\n        GSAccessibility.start();\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvents.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css).filter(el => !(el instanceof HTMLTemplateElement));\r\n        gs = GSData.mergeArrays(allComps.filter(el => el instanceof GSElement), gs);\r\n        \r\n\r\n        // all not descendants of component\r\n        const all = allComps.filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        if (el.matches('.hide,.fade,.collapse') && !el.matches('.show')) return true;\r\n        return GSDOM.isStyleValue(el, 'display', 'none');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.matches('.collapse') && !el.matches('.accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.matches('.fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvents.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvents.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvents.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvents.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvents.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvents.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSCSSMap from \"../../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvents.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvents.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvents.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvents.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvents.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvents.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvents.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvents.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvents.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvents.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvents.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvents.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        if (!me.mask) return value;\r\n        \r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const map = GSCSSMap.styleValue(this, 'text-transform');\r\n        if (map) value = GSUtil.textTransform(map.value, value);\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvents.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvents.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n        GSEvents.attach(own, own, 'keydown', GSNavLinkExt.#onKeyDown.bind(own));\r\n    }\r\n\r\n    static #onKeyDown(e, own) {\r\n        switch (e.code) {\r\n            case 'Space':\r\n            case 'Enter':\r\n                GSNavLinkExt.#onClick(e, this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvents.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUListExt class\r\n * @module components/ext/GSUListExt\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAccessibility from \"./GSAccessibility.mjs\";\r\n\r\nexport default class GSUListExt extends HTMLUListElement {\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        GSEvents.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSEvents.deattachListeners(this);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n\r\n        const idx = GSAccessibility.KEYS.indexOf(e.code);\r\n        if (idx < 0) return;\r\n        GSEvents.prevent(e);\r\n\r\n        const me = this;\r\n\r\n        let el = me.#item;\r\n        if (!el) return;\r\n\r\n        if (idx < 2) return GSAccessibility.click(me.#target(el), e);\r\n\r\n        if (me.#onSubmenu(el, idx)) return;\r\n        \r\n\r\n        el = me.#next(el, idx);\r\n        me.#target(el)?.focus();\r\n\r\n    }\r\n\r\n    #target(el) {\r\n        return el?.querySelector(GSDOM.QUERY_FOCUSABLE);\r\n    }\r\n\r\n    #next(el, idx) {\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        const list = Array.from(this.children).filter(el => el.matches('li:not([data-inert=\"true\"])'));\r\n        let i = list.indexOf(el) + dir;\r\n        i = i >= list.length ? 0 : i;\r\n        i = i < 0 ? list.length - 1 : i;\r\n        return list[i];\r\n    }\r\n\r\n    get #item() {\r\n        const el = GSDOM.activeElement;\r\n        return (el.tagName === 'LI') ? el : el.closest('li');\r\n    }\r\n\r\n    get isSubmenu() {\r\n        return this.matches('.submenu');\r\n    }\r\n\r\n    #onSubmenu(el, idx) {\r\n        if (idx < 4) return false;\r\n        const dir = GSAccessibility.idxToDir(idx);\r\n        let submenu = el.querySelector('.submenu') || this;\r\n        if (!submenu.matches('.submenu')) return false;\r\n        const start = GSUtil.asBool(submenu.dataset.start);\r\n        const end = GSUtil.asBool(submenu.dataset.end);\r\n        const open = (start && dir < 0) || (end && dir > 0);\r\n        GSDOM.toggleClass(submenu, 'show', open);\r\n        submenu = open ? submenu : submenu.parentElement;\r\n        submenu.querySelector(GSDOM.QUERY_FOCUSABLE)?.focus();\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-ext-ul', GSUListExt, { extends: 'ul' });\r\n        Object.seal(GSUListExt);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvents.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value', new Date()));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvents.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvents.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCalendar class\r\n * @module components/GSCalendar\r\n */\r\n\r\nimport GSAttr from '../base/GSAttr.mjs';\r\nimport GSDate from '../base/GSDate.mjs';\r\nimport GSDOM from '../base/GSDOM.mjs';\r\nimport GSElement from '../base/GSElement.mjs'\r\nimport GSEvents from '../base/GSEvents.mjs';\r\nimport GSUtil from '../base/GSUtil.mjs';\r\n\r\n/**\r\n * Generator for month selector panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCalendar extends GSElement {\r\n\r\n    #date = null;\r\n\r\n    static {\r\n        customElements.define('gs-calendar', GSCalendar);\r\n        Object.seal(GSCalendar);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['format', 'locale', 'date'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#date = new GSDate();\r\n        this.#date.locale = this.locale;\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        if (name === 'locale') {\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'date') {\r\n            me.#date = new GSDate(newVal);\r\n            me.#date.locale = me.locale;\r\n        }\r\n        if (name === 'format') {\r\n            me.#date.format = newVal;\r\n        }\r\n        me.#update();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#update();\r\n        me.attachEvent(me.query('.header'), 'click', me.#onArrow.bind(me));\r\n        me.attachEvent(me.query('div'), 'click', me.#onDay.bind(me));\r\n        me.attachEvent(me.query, 'change', me.#onYear.bind(me));\r\n        me.attachEvent(me.monthEl, 'change', me.#onMonth.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        return this.#toHTML();\r\n    }\r\n\r\n    get date() {\r\n        return GSAttr.get(this, 'date', this.#date.toISOString());\r\n    }\r\n\r\n    set date(val = '') {\r\n        GSAttr.set(this, 'date', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header');\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    get cssMonth() {\r\n        return GSAttr.get(this, 'css-month', 'form-control fs-3 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssMonth(val = '') {\r\n        GSAttr.set(this, 'css-month', val);\r\n    }\r\n\r\n    get cssYear() {\r\n        return GSAttr.get(this, 'css-year', 'form-control fs-5 fw-bold border-0 text-center m-1 p-0');\r\n    }\r\n\r\n    set cssYear(val = '') {\r\n        GSAttr.set(this, 'css-year', val);\r\n    }\r\n\r\n    get cssNav() {\r\n        return GSAttr.get(this, 'css-nav', 'btn-light');\r\n    }\r\n\r\n    set cssNav(val = '') {\r\n        GSAttr.set(this, 'css-nav', val);\r\n    }\r\n\r\n    get cssWeeks() {\r\n        return GSAttr.get(this, 'css-weeks', 'fw-bold text-bg-dark');\r\n    }\r\n\r\n    set cssWeeks(val = '') {\r\n        GSAttr.set(this, 'css-weeks', val);\r\n    }\r\n\r\n    get cssDays() {\r\n        return GSAttr.get(this, 'css-days');\r\n    }\r\n\r\n    set cssDays(val = '') {\r\n        GSAttr.set(this, 'css-days', val);\r\n    }\r\n\r\n    get cssSelected() {\r\n        return GSAttr.get(this, 'css-selected', 'btn-primary');\r\n    }\r\n\r\n    set cssSelected(val = '') {\r\n        GSAttr.set(this, 'css-selected', val);\r\n    }\r\n\r\n    get cssToday() {\r\n        return GSAttr.get(this, 'css-today', 'btn-secondary');\r\n    }\r\n\r\n    set cssToday(val = '') {\r\n        GSAttr.set(this, 'css-today', val);\r\n    }\r\n\r\n    get monthEl() {\r\n        return this.query('.month');\r\n    }\r\n\r\n    get yearEl() {\r\n        return this.query('.year');\r\n    }\r\n\r\n    get prevEl() {\r\n        return this.query('.prev');\r\n    }\r\n\r\n    get nextEl() {\r\n        return this.query('.next');\r\n    }\r\n\r\n    get arrowsEl() {\r\n        return this.query('.arrow');\r\n    }\r\n\r\n    get arrowNext() {\r\n        return GSAttr.get(this, 'arrow-next', '&#10095;');\r\n    }\r\n\r\n    set arrowNext(val) {\r\n        return GSAttr.set(this, 'arrow-next', val);\r\n    }\r\n\r\n    get arrowPrev() {\r\n        return GSAttr.get(this, 'arrow-prev', '&#10094;');\r\n    }\r\n\r\n    set arrowPrev(val) {\r\n        return GSAttr.set(this, 'arrow-prev', val);\r\n    }\r\n\r\n    get minYear() {\r\n        return GSAttr.getAsNum(this, 'year-min', '1900');\r\n    }\r\n\r\n    set minYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-min', val);\r\n    }\r\n\r\n    get maxYear() {\r\n        return GSAttr.getAsNum(this, 'year-max', '2100');\r\n    }\r\n\r\n    set maxYear(val) {\r\n        return GSAttr.setAsNum(this, 'year-max', val);\r\n    }\r\n\r\n    formatted(date) {\r\n        const me = this;\r\n        return (date || me.#date).format(me.format, me.locale);\r\n    }\r\n\r\n    #onYear(e) {\r\n        const me = this;\r\n        me.#date.year = me.yearEl.value;\r\n        me.#update();\r\n    }\r\n\r\n    #onMonth(e) {\r\n        const me = this;\r\n        me.#date.month = me.monthEl.selectedIndex;\r\n        me.#update();\r\n    }\r\n\r\n    #onDay(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'day')) return;\r\n        const day = GSUtil.asNum(btn.innerText.trim());\r\n        requestAnimationFrame(() => {\r\n            me.queryAll('.day').forEach(el => GSDOM.toggleClass(el, me.cssSelected, false));\r\n            GSDOM.toggleClass(btn, me.cssSelected, true);\r\n        });\r\n        const date = new GSDate(me.#date);\r\n        date.day = day;\r\n        GSEvents.send(me, 'date', { type: 'calendar', date: date, val: me.formatted(date) }, true, true);\r\n        me.#updateTarget(date);\r\n    }\r\n\r\n    #onArrow(e) {\r\n        const me = this;\r\n        const btn = e.composedPath().shift();\r\n        if (!GSDOM.hasClass(btn, 'arrow')) return;\r\n        btn.blur();\r\n        const isPrev = GSDOM.hasClass(btn, 'prev');\r\n        isPrev ? me.#date.month-- : me.#date.month++;\r\n        me.#update();\r\n    }\r\n\r\n    #updateTarget(date) {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        const tgt = GSDOM.query(document.documentElement, me.target);\r\n        if (!tgt) return;\r\n\r\n        if (tgt instanceof HTMLInputElement) {\r\n            if (tgt.type === 'date') return tgt.valueAsDate = date;\r\n            return tgt.value = me.formatted(date);\r\n        }\r\n        GSDOM.setHTML(tgt, me.formatted(date));\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        me.queryAll('.days').forEach(el => el.remove());\r\n        me.query('.weeks').insertAdjacentHTML('afterend', me.#daysHTML());\r\n        me.monthEl.selectedIndex = me.#date.month;\r\n        me.yearEl.value = me.#date.getFullYear();\r\n    }\r\n\r\n    #isToday(v, date) {\r\n        const me = this;\r\n        return v && GSUtil.asNum(v) === me.#date.day && date.month === me.#date.month && me.#date.year === date.year;\r\n    }\r\n\r\n    #daysHTML() {\r\n        const me = this;\r\n        const today = new GSDate();\r\n        today.locale = me.locale;\r\n        const list = me.#date.build(me.locale);\r\n        const html = list\r\n            .map(v => {\r\n                const d = v ? `<a href=\"#\" class=\"btn ${me.#isToday(v, today) ? me.cssToday : ''} day\">${v}</a>` : ''\r\n                return `<div class=\"col p-0\">${d}</div>`;\r\n            })\r\n            .map((v, i) => {\r\n                if (i === 0) return `<div class=\"row days\">${v}`;\r\n                const isBreak = i % 7 == 0;\r\n                return isBreak ? `</div><div class=\"row days\">${v}` : v;\r\n            });\r\n        html.push('</div>');\r\n        return html.join('');\r\n    }\r\n\r\n\r\n    #monthsHTML() {\r\n        const me = this;\r\n        const current = me.#date.monthName;\r\n        const list = GSDate.monthList(false, me.locale).map((v, i) => {\r\n            const sel = current == v ? 'selected' : '';\r\n            return `<option value=\"${i}\" ${sel}>${v}</option>`;\r\n        }).join('\\n');\r\n        return `<select class=\"month ${me.cssMonth}\" value=\"${current}\">\r\n                    ${list}\r\n                </select>`;\r\n    }\r\n\r\n    #yearHTML() {\r\n        const me = this;\r\n        return `<input class=\"year ${me.cssYear}\" value=\"${me.#date.getFullYear()}\" type=\"number\" min=\"${me.minYear}\" max=\"${me.maxYear}\">`;\r\n    }\r\n\r\n    #toHTML() {\r\n        const me = this;\r\n        const week = GSDate.dayList(true, me.locale).map(v => `<div class=\"col\">${v}</div>`).join('');\r\n        const months = me.#monthsHTML();\r\n        const year = me.#yearHTML();\r\n\r\n        return `<style>\r\n                .year::-webkit-outer-spin-button,\r\n                .year::-webkit-inner-spin-button {\r\n                  -webkit-appearance: none;\r\n                  margin: 0;\r\n                }                \r\n                .year {\r\n                  -moz-appearance: textfield;\r\n                }                \r\n                </style>\r\n                <div class=\"container-fluid text-center ${me.css}\">\r\n                <div class=\"row align-items-center ${me.cssHeader} header\">\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow prev\">${me.arrowPrev}</a>\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        ${months}\r\n                        ${year}\r\n                    </div>\r\n                    <div class=\"col\"></div>\r\n                    <div class=\"col-auto\">\r\n                        <a href=\"#\" class=\"btn ${me.cssNav} arrow next\">${me.arrowNext}</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row weeks ${me.cssWeeks}\">${week}</div>                \r\n            </div>`.replace(/\\n/g, '');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSMenu class\r\n * @module components/GSMenu\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSUListExt from \"./ext/GSUListExt.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {HTMLUListElement}\r\n */\r\nexport default class GSMenu extends GSUListExt {\r\n\r\n  #caller = null;\r\n\r\n  static {\r\n    customElements.define('gs-menu', GSMenu, { extends: 'ul' });\r\n    Object.seal(GSMenu);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    GSDOM.validate(me, me.tagName, 'LI');\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;    \r\n    me.#attachMenuItems();\r\n    me.#attachSubMenu();\r\n    me.#updatePos();\r\n    me.attachEvent(document, 'keydown', me.#onKeyDown.bind(me));\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvents.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvents.remove(this, el, name, fn);\r\n\t}\r\n\r\n  /**\r\n   * Check if menu visible \r\n   */\r\n  get visible() {\r\n    return this.matches('.show');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is submenu\r\n   */\r\n  get isSubmenu() {\r\n    return this.matches('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Check if menu is closable \r\n   */\r\n  get closable() {\r\n    const me = this;\r\n    return GSUtil.asBool(me.dataset.closable) || me.isSubmenu;\r\n  }\r\n  \r\n  /**\r\n   * Show at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @param {HTMLElement} caller\r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    const me = this;\r\n    const cfg = {clientX: x.clientX || x, clientY: x.clientY || y, target: x.target || caller };\r\n    requestAnimationFrame(() => {\r\n      me.style.position = 'fixed';\r\n      me.style.top = '0px';\r\n      me.style.left = '0px';\r\n      me.style.transform = `translate(${cfg.clientX}px, ${cfg.clientY}px)`;\r\n      me.open(cfg);\r\n    });\r\n\r\n  }\r\n\r\n  close(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    if (!me.closable) return false;\r\n    me.#closeSubmenus();\r\n    GSDOM.toggleClass(me, 'show', false);\r\n    me.style.left = '';\r\n    me.style.top = '';\r\n    me.#caller?.focus();\r\n    me.#caller = null;\r\n  }\r\n\r\n  open(e) {\r\n    const me = this;\r\n    me.#caller = e?.target;\r\n    GSDOM.toggleClass(me, 'show', true);\r\n    me.#updatePos();\r\n    me.#updateSubmenus(e);\r\n    GSDOM.query(me, 'a,input,[tabindex=\"0\"]')?.focus();\r\n  }\r\n\r\n  toggle(e) {\r\n    const me = this;\r\n    me.visible ? me.close(e) : me.open(e);\r\n  }\r\n\r\n  get #items() {\r\n    return GSDOM.queryAll(this, '.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return GSDOM.queryAll(this, '.submenu');\r\n  }\r\n\r\n  #closeSubmenus() {\r\n    this.#submenus.forEach(el => GSDOM.toggleClass(el, 'show', false));\r\n  }\r\n\r\n  #updatePos() {\r\n    const me = this;\r\n    const rect = me.getBoundingClientRect();\r\n    if (!rect) return;\r\n    const w = rect.width;\r\n    const l = rect.left;\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = rect.top;\r\n    const h = rect.height;\r\n    const wh = parseInt(window.innerHeight, 10);\r\n    const tt = me.#transform;\r\n    requestAnimationFrame(() => {\r\n      if (l + w > ww) {\r\n        let left = l - ((l + w) - ww);\r\n        if (tt) left = left - tt.x.value;\r\n        me.style.left = `${left}px`;\r\n      }\r\n      if (t + h > wh) {\r\n        let top = t - ((t + h) - wh);\r\n        if (tt) top = top - tt.y.value;\r\n        me.style.top = `${top}px`;      \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  get #transform() {\r\n    if (!globalThis.CSSTranslate) return null;\r\n    return Array.from(GSCSSMap.styleValue(this, 'transform')).filter(v => v instanceof CSSTranslate).pop();\r\n  }\r\n\r\n  #updateSubmenus(e) {\r\n    const me = this;\r\n\r\n    requestAnimationFrame(() => {\r\n      const rect = me.getBoundingClientRect();\r\n      if (!rect) return;\r\n      let x = e?.clientX || rect.left, y = e?.clientY || rect.top;\r\n      const overflowH = x + rect.width + 5 > window.innerWidth;\r\n      const overflowV = y + rect.height + 5 > window.innerHeight;\r\n      if (overflowH) x = window.innerWidth - rect.width;\r\n      if (overflowV) y = window.innerHeight - rect.height;\r\n      me.#submenus.forEach(el => {\r\n        let end = true;\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n          end = false;\r\n        } else {\r\n          el.style.left = '100%';\r\n          end = true;\r\n        }\r\n        el.dataset.end = end;\r\n        el.dataset.start = !end;\r\n        GSDOM.toggleClass(me, 'dropstart', !end);\r\n        GSDOM.toggleClass(me, 'dropend', end);\r\n      });\r\n    });\r\n  }\r\n\r\n  #attachMenuItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #attachSubMenu() {\r\n    const me = this;\r\n    if (me.isSubmenu) return;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n    me.attachEvent(me, 'mouseleave', me.close.bind(me));\r\n  }\r\n\r\n  #onKeyDown(e) {\r\n    const me = this;\r\n    switch (e.key) {\r\n      //case 'ContextMenu' : return me.#onPopup(e);\r\n      case 'Escape' : \r\n        GSEvents.prevent(e);\r\n        me.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  async #onClick(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    me.close();\r\n    me.#closeSubmenus();\r\n    me.#handleGroup(e);\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'menu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvents.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  #handleGroup(e) {\r\n    const eli = e?.target?.previousSibling;\r\n    if (!(eli instanceof HTMLInputElement)) return;\r\n    const me = this;\r\n    GSDOM.queryAll(me, `input[name=\"${eli.name}\"]`).forEach(el => el.checked = false);\r\n    eli.checked = true;\r\n  }\r\n\r\n  /**\r\n   * Show submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {   \r\n    GSEvents.prevent(e);\r\n    const li = GSDOM.closest(e.target, 'li');\r\n    const ul = GSDOM.closest(li, 'ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu').forEach(el => GSDOM.toggleClass(el,'show', false));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        GSDOM.toggleClass(sub, 'show', true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate menu items from JSON array\r\n   * @param {*} items \r\n   * @param {*} css \r\n   * @returns \r\n   */\r\n  static fromJSON(items = [], css) {\r\n    const me = GSMenu;\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      opts.push('>');\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = GSMenu.fromJSON(it.menu, css);\r\n        opts.push(`<ul is=\"gs-ext-ul\" class=\"submenu dropdown-menu ${css}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }  \r\n\r\n  static fromDOM(children, level = 0, css = '', closable = false) {\r\n    \r\n    const me = GSMenu;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'dropend position-fixed' : 'submenu';\r\n    const is = level === 0 ? 'gs-menu' : 'gs-ext-ul';\r\n    list.push(`<ul is=\"${is}\" data-closable=\"${closable}\" class=\"${sub} dropdown-menu ${css}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.fromDOM(el.children, ++level, css, closable) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  static #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item dropdown-toggle\" href=\"#\"><div class=\"d-inline-block w-100\">${name}</div></a>`;\r\n  }\r\n\r\n  static #renderChild(el) {\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li data-inert=\"true\"><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!el.name) return `<li data-inert=\"true\"><hr class=\"dropdown-divider\"/></li>`;\r\n    if (el.action) return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${el.action}\">${el.html}</a></li>`;\r\n    if (el.toggle) return `<li><a class=\"dropdown-item\" href=\"#\" data-bs-toggle=\"${el.toggle}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.inject) return `<li><a class=\"dropdown-item\" href=\"#\" data-inject=\"${el.inject}\" data-bs-target=\"${el.target}\">${el.name}</a></li>`;\r\n    if (el.href) return `<li><a class=\"dropdown-item\" href=\"${el.href}\" target=\"${el.target}\">${el.name}</a></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${el.name}</a></li>` : '';\r\n  }\r\n\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    //me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set disabled(val) {\r\n    return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    const me = this;\r\n    me.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    me.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0, caller) {\r\n    this.#menu?.popup(x, y, caller);\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  #renderMenuDOM() {\r\n    const me = this;\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    return GSMenu.fromDOM(me.children, 0, css, true);\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #match(e) {\r\n    const me = this;\r\n    return e.composedPath().filter(el => el.matches)\r\n                 .filter(el => el.matches(me.target));\r\n  }\r\n\r\n  async #onPopup(e) {\r\n    const me = this;\r\n    const list = me.#match(e);\r\n    if (list.length === 0) return;\r\n    GSEvents.prevent(e);\r\n    me.popup(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => {\r\n      me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me));\r\n    });\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.#ready = false;\r\n    me.#attached = false;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'contextmenu';\r\n    GSEvents.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static #STACK = [];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  static get top() {\r\n    return GSDialog.#STACK.length === 0 ? null : GSDialog.#STACK[GSDialog.#STACK.length-1];\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) {\r\n          me.#dialog.showModal();\r\n          GSDialog.#STACK.push(me);\r\n        }\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n        GSDialog.#STACK.pop();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    me.attachEvent(me.#dialog, 'close', me.#onClose.bind(me));\r\n    me.attachEvent(me.#dialog, 'cancel', me.#onCancel.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable || e.key !== 'Escape') return;\r\n    me.close();\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  #onClose(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onCancel(e) {\r\n    const me = this;\r\n    me.visible = false;\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    //return this.query('.card-title');\r\n    return this.query('slot[name=\"title\"]');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"dialog p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        <slot name=\"extra\"></slot>\r\n        <div class=\"toast-container position-fixed\"></slot></div>        \r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSMenu from \"./GSMenu.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'visible') {\r\n      if (!me.visible) me.close();\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'action', me.#onClick.bind(me));\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.#menu?.close();\r\n  }\r\n\r\n  open() {\r\n    this.#menu?.open();\r\n  }\r\n\r\n  toggle() {\r\n    this.#menu?.toggle();\r\n  }\r\n\r\n  /**\r\n   * Create menu items from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = GSMenu.fromJSON(items, dark);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    return true;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  #renderMenuDOM(children) {\r\n\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    if (me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    const css = me.dark ? 'dropdown-menu-dark' : ''\r\n    const html = GSMenu.fromDOM(children, 0, css, true);\r\n    list.push(html)\r\n\r\n    if (me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    GSEvents.deattachListeners(me);\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n  async #onClick(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const data = e.detail;\r\n    const sts = await me.#onAction(data.action);\r\n    if (sts) return;\r\n    data.type = 'dropdown';\r\n    GSEvents.send(me, 'action', data, true, true, true); // notify self\r\n  }\r\n\r\n  async #onAction(action) {\r\n    let sts = false;\r\n    if (!action) return sts;\r\n    const me = this;\r\n    try {\r\n      action = GSUtil.capitalizeAttr(action);\r\n      const fn = me[action];\r\n      sts = GSFunction.isFunction(fn);\r\n      sts = sts && !GSFunction.isFunctionNative(fn);\r\n      if (sts) {\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n          await me[action]();\r\n        } else {\r\n          me[action]();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      me.onError(e);\r\n    }\r\n    return sts;\r\n  }\r\n\r\n  onError(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['value', 'label', 'disabled'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'label') me.#labelEl.innerHTML = newValue;\r\n      if (name === 'value') me.#inputEl.value = newValue;\r\n      if (name === 'disabled') me.#inputEl.disabled = !GSUtil.isNull(newValue);\r\n   }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #inputEl() {\r\n      return this.query('input');\r\n   }\r\n\r\n   get #labelEl() {\r\n      return this.query('label');\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      const idattr = me.autoid ? `id=\"${me.name}\"` : '';\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               ${idattr} name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n\r\n   get autoid() {\r\n      return this.hasAttribute('autoid');\r\n   }   \r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const css = GSCSSMap.getComputedStyledMap(parent);\r\n        return css.matches('display', 'flex') && !css.matches('flexGrow', '0');\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.disconnectedCallback();\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvents.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvents.prevent(e);\r\n    const sts = GSEvents.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvents.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvents.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvents.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvents.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvents.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvents.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    const form = me.queryAll(GSDOM.QUERY_INPUT, true).filter(el => GSDOM.isVisible(el)).shift();\r\n    if (form) return form;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul is=\"gs-ext-ul\" class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a tabindex=\"0\" type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        GSEvents.deattachListeners(me);\r\n        const src = GSDOM.fromJsonAsString(data);\r\n        GSDOM.setHTML(me, src);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'expanded', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'expanded') GSEvents.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.expanded);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.expanded;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.expanded) return GSDOM.toggleClass(me.#canvasEl, 'show', me.expanded);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.expanded : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.expanded));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.expanded = true;\r\n  }\r\n\r\n  close() {\r\n    this.expanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get expanded() {\r\n    return GSAttr.getAsBool(this, 'expanded', false);\r\n  }\r\n\r\n  set expanded(val = false) {\r\n    GSAttr.setAsBool(this, 'expanded', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.expanded ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvents.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvents.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvents.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvents.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvents.prevent(e);\r\n        sts = GSEvents.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSCSSMap from \"../base/GSCSSMap.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            // no firefox support\r\n            el = Array.from(el.children).filter(o => !GSDOM.isStyleValue(o, 'display' ,'none')).pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const css = GSCSSMap.getComputedStyledMap(me.target);\r\n        const val = me.isVertical ? css.get('width') : css.get('height');\r\n        if (!val) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        GSEvents.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvents from \"../base/GSEvents.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul is=\"gs-ext-ul\" class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              tabindex=\"0\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSDOM.fromJsonAsString(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvents.deattachListeners(me);\r\n    me.disconnectedCallback();\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        this.fileEl.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvents.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvents.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvents.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvents.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvents.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvents.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th tabindex=\"0\" scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvents.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr tabindex=\"0\" class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvents.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvents.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvents.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvents.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvents.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvents from \"../../base/GSEvents.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvents.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvents.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvents.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvents from \"../../base/GSEvents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvents.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvents.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvents.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvents.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        if (!listID) return el.value;\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    const val = GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n    return val.indexOf('_') > 0 && GSNotification[val] ? GSNotification[val] : val;\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const me = this;\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    const toast = me.#dialogToast;\r\n    requestAnimationFrame(() => {\r\n      if (toast !== me) GSAttr.set(toast, 'class', `toast-container ${me.css} ${me.position}`);\r\n      toast.appendChild(el);\r\n    });\r\n    return el;\r\n  }\r\n\r\n  get #dialogToast() {\r\n    const dlg = customElements.get('gs-dialog')?.top;\r\n    return dlg ? (GSDOM.query(dlg, '.toast-container') || this) : this;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","refid","observedAttributes","id","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","callback","constructor","super","order","isCSS","setInterval","onLoad","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","onTheme","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSID","prefx","next","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","params","names","keys","vals","Function","isString","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","animating","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","import","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","native","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSCSSMap","body","computedStyleMap","element","getMap","modern","capitalizeAttr","to","matches","getComputedStyle","getComputedStyledMap","GSDOM","activeElement","active","shadowRoot","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","fromNode","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","parent","removeChild","node","closest","all","parentAll","childAll","child","list","parentElement","host","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","query","queryAll","push","innerHTML","textContent","entries","kv","isNull","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","textTransform","ignore","checkValidity","toValue","fromValue","recursive","items","toJson","tag","asString","fromJsonAsString","fromJsonAsDOM","sub","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvents","listen","prevent","onKeyDown","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","unlisten","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSEvent","EventTarget","listeners","Set","listener","on","off","emit","evt","unbind","GSEventBus","register","registry","has","exist","bus","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","documentElement","disconnect","GSComponents","els","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSPopper","sx","scrollX","sy","scrollY","top","bottom","y","centerX","centerY","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","source","arrow","pos","fromPlacement","isPlacementValid","position","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","transform","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSItem","validate","tags","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","dismiss","getTarget","getToggle","getAction","action","getInject","inject","getSelectable","selectable","getAsBool","hasAttribute","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","getActive","template","getBody","getHref","group","getGroup","selected","getSelected","GSBlock","GSElement","ready","removed","content","proxied","opts","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","visible","setAsBool","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","isConfig","injection","ref","deattachListeners","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","aplyTemplate","GSDefine","GSi18n","loading","interval","isDuplicate","onFilter","onCallback","default","translateDOM","init","toggleAuto","unregisterFilter","oldVal","newVal","attributeChanged","auto","acceptedElement","HTMLScriptElement","HTMLMetaElement","isTranslatable","onInterval","doTranslate","doTranslateText","doTranslateAttrs","doTranslateAttr","dname","dval","translate","gsi18n","lang","Pragma","getLanguage","hk","registerFilter","expr","lastIndex","hv","GSQueryCSS","property","object","receiver","Proxy","GSQuery","instance","GSCacheTemplate","_store","isTemplateElement","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","connected","HTMLHeadElement","waitWhenReady","waitEvent","asArray","GSAccessibility","KEYS","focused","QUERY_FOCUSABLE","dir","idxToDir","focus","MouseEvent","view","altKey","isVisible","start","stop","GSComboExt","HTMLSelectElement","objToHTML","GSDataAttr","onMonitorFilter","onMonitorResult","onMonitorRemove","isCollapsible","bsDismiss","bsToggle","onClick","toClicker","onToggle","onDismiss","onInject","comps","gs","c","allComps","isType","isHidden","hidden","isStyleValue","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","bsTarget","GSDataListExt","HTMLDataListElement","GSFormExt","HTMLFormElement","attachEvents","onSubmit","onAction","actions","reset","reportValidity","toObject","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","_","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","autoselect","maskType","maxLength","onKeyPress","onInput","onChange","onPaste","onBlur","onMonitor","togleEl","isMatch","isFormElement","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","setSelectionRange","canceled","title","onNumberInput","onTextInput","substring","updateText","vld","GSNavLinkExt","HTMLAnchorElement","cl","trigger","nav","panel","panelItem","item","tgtID","GSUListExt","HTMLUListElement","onSubmenu","isSubmenu","submenu","end","open","GSTimeFormat","update","toLocaleTimeString","getAsNum","setAsNum","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","icon","dissmis","comment","GSCalendar","onArrow","onDay","onYear","monthEl","onMonth","toHTML","toISOString","cssHeader","cssMonth","cssYear","cssNav","cssWeeks","cssDays","cssSelected","cssToday","yearEl","prevEl","nextEl","arrowsEl","arrowNext","arrowPrev","minYear","maxYear","formatted","selectedIndex","hasClass","innerText","updateTarget","valueAsDate","insertAdjacentHTML","daysHTML","isToday","today","monthsHTML","monthName","monthList","yearHTML","week","dayList","months","GSCenter","vel","GSMenu","caller","attachMenuItems","attachSubMenu","updatePos","closable","popup","clientX","clientY","closeSubmenus","updateSubmenus","submenus","w","ww","parseInt","innerWidth","wh","innerHeight","tt","CSSTranslate","overflowH","overflowV","handleGroup","option","eli","previousSibling","li","ul","offsetTop","hasSubmenu","menu","getAttrs","fromJSON","is","isSub","childElementCount","renderSub","fromDOM","renderChild","header","attrs","GSContext","attached","renderMenuDOM","attachTarget","onResize","reattach","dark","Event","createMenu","targets","onPopup","onError","GSDialog","STACK","dialog","showModal","focusable","onForm","onEscape","onClose","onCancel","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","confirm","prompt","QUERY_INPUT","buttonCancelEl","buttonOkEl","align","footer","findSlotOrEl","large","extra","buttonOk","cssButtonOk","cssButtonCancel","CSS","cssContent","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","GSFormGroup","validateAllowed","labelEl","inputEl","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","idattr","autoid","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","GSList","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","expanded","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","some","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","reduce","emptyRow","cols","hdr","genRow","toType","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","toast","dialogToast","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast"],"mappings":"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"}