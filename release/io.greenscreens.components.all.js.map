{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tlet no_cache = false;\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            return self.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.indexOf('<') > -1 && val.indexOf('>') > 0;\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn self.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\t static register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, {extends : ext?.toLowerCase()});\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\t\t\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tself.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\treturn el?.tagName?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (GSDOM.isHTMLElement(el)) el.innerText = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (!hidden && el.dataset.ignore === 'true') return;\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && obj.hasOwnProperty(el.name))\r\n\t\t\t.forEach(el => el.value = obj[el.name]);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tif (el) el.value = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!self.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            self.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            GSLoader.NO_CACHE = self.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n        const isExt = url.indexOf('extension://')>-1;\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        const uri = new URL(path.replaceAll('//', '/'));\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            me.innerHTML = list.join('\\n');\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSDataListExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            me.innerHTML = list.join('\\n');\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, document.body, 'action', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e, own) {\r\n        const me = own || this;\r\n        const sts = GSFormExt.#validateCaller(e, me, 'modal', 'GS-MODAL');\r\n        if (!sts) return;\r\n\r\n        if (e.detail.ok) return GSFormExt.#onSubmit(e, me);\r\n\r\n        const evt = e.detail.evt;\r\n        const isReset = evt && evt.target.className.indexOf('reset') > 0;\r\n        if (isReset) me.reset();\r\n    }\r\n\r\n    static #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == e.target || e.composedPath().indexOf(parent) > -1;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        if (e.detail) e.detail.data = data;\r\n        GSEvent.send(me, 'form', data, true, true);\r\n        return me.reportValidity();\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this,'input,select,textarea')\r\n                    .map(el => el.checkValidity())\r\n                    .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]',\r\n        9: '[0-9]', '#': '[0-9]',\r\n        x: '[a-zA-Z]', X: '[a-zA-Z]',\r\n        _: '[0-9]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.indexOf(v) > -1) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.indexOf(value) > -1;\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\";\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => hidden.indexOf(el) == -1);\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => el.innerHTML = html);\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.indexOf(val) > -1;\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        me.self.innerHTML = date.toLocaleTimeString(me.locale);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        const o = Date.parse(GSAttr.get(this, 'value'));\r\n        return o || new Date();\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', 'default');\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') el.innerHTML = me.message;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t* Retrieve gs-item template or internal content\r\n\t* NOTE: If template set, item content is overriden\r\n\t* \r\n\t* @async\r\n\t* @param {HTMLElement} el \r\n\t* @returns {Promise<string>}\r\n\t*/\r\n\tstatic async getTemplate(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cnt = tpl ? await GSLoader.getTemplate(tpl) : '';\r\n\t\tif (cnt) return cnt;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retuen content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template flat=\"${flat}\" href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-header':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, false, oldValue);\r\n        GSDOM.toggleClass(el, true, newValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n      <div class=\"accordion-item ${me.css}\">\r\n        <slot name=\"content\">\r\n            <h2 class=\"accordion-header\">\r\n              <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                ${title}\r\n              </button>\r\n            </h2>\r\n            <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n              <div class=\"accordion-body\">${message}</div>\r\n            </div>      \r\n        </slot>\r\n    </div>\r\n    `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return el.innerHTML = me.title;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }  \r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    me.#menu.innerHTML = opts.join('');\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const style = window.getComputedStyle(me.parentElement);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = me.#getCSS(el);\r\n        const href = me.#getHref(el);\r\n        const action = GSItem.getActionAttr(el);\r\n        const dissmis = GSItem.getDismissAttr(el);\r\n        const target = GSItem.getTargetAttr(el);\r\n        const toggle = GSItem.getToggleAttr(el);\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${action} ${toggle} ${target} ${dissmis}>\r\n                ${tpl || message}\r\n                </a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getCSS(el) {\r\n        return GSAttr.get(el, 'css', '');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    #getHref(el) {\r\n        return GSAttr.get(el, 'href', \"#\");\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'modal', me.#onModal.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onModal(e) {\r\n    const me = this;\r\n    const sts = me.#validateCaller(e, e.target, 'close', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    let sts = me.#validateCaller(e, e.target, 'submit', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #validateCaller(e, own, type, comp) {\r\n    if (e.detail.type !== type) return false;\r\n    const parent = GSDOM.closest(own, comp);\r\n    return parent == this;\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    let sts = true;\r\n    try {\r\n      const el = e.composedPath().shift();\r\n      const action = el?.dataset.action;\r\n      if (GSModal.#actions.indexOf(action) < 0) return sts = false;\r\n      GSEvent.prevent(e);\r\n      const isOk = action === 'ok';\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close();\r\n    }\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n  \r\n\t/**\r\n\t * Search for named slot tag or css selector \r\n\t * @param {string} name Tagged slot  name\r\n\t * @param {*} qry CSS selector\r\n\t * @returns {HTMLElement|Array<HTMLElement>}\r\n\t */\r\n\t#findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n\t\tconst el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n\t\tif (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n\t}\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl(this, 'title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    this.title.innerHTML = val;\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl(this, 'body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    this.body.innerHTML = val;\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <div class=\"modal d-none fade ${me.cssModal}\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content ${me.cssContent}\">\r\n            <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n              <div class=\"modal-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop d-none fade \"></div>    \r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = me.#getIcon(el);\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" id=\"${GSID.id}-nav\"                \r\n                ${GSItem.getDismissAttr(el)} ${GSItem.getTargetAttr(el)} \r\n                ${GSItem.getToggleAttr(el)} ${GSItem.getActionAttr(el)} \r\n                ${GSItem.getInjectAttr(el)} ${GSItem.getCSSAttr(el)}\r\n                ${GSItem.getSelectableAttr(el)} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getIcon(el) {\r\n        return GSAttr.get(el, 'icon');\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.indexOf('focus') > -1;\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.indexOf('hover') > -1;\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) bar.innerHTML = me.#fromLabel();\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(this.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // me.innerHTML = '';\r\n           me.firstChild.remove();\r\n        }, 250);\r\n        return GSDOM.toggleClass(this.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) me.#titleEl.innerHTML = me.title;\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.indexOf(mode) > -1;\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.indexOf(val) > -1;\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defiend mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        return Array.from(this.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th>${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.items.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'title', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', 'form-control');\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].indexOf(val) > -1;\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        //const idx = [...me.parentElement.children].indexOf(me);\r\n        return { name: me.name, title: me.title, width: me.width, sortable: me.sortable, idx: me.index };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = GSDOM.queryAll(me, 'gs-column[filter=true]');\r\n        const columns = GSDOM.queryAll(me, 'gs-column');\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push('<tr is=\"gs-tablefilter\">');\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push('<tr is=\"gs-tablesort\">');\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const heads = [];\r\n        const cols = GSDOM.queryAll(me, 'gs-column');\r\n        cols.forEach((el, i) => {\r\n            heads.push(el.toJSON());\r\n        });\r\n        return heads;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\">`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        me.innerHTML = rows.join('');\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        const val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        return `<td class=\"${me.cssCell}\">${val || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(el.rowIndex));\r\n        GSEvent.send(me, 'select', data, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.childNodes).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.querySelector('gs-header');\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        me.self.innerHTML = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data = []) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.forEach(i => {\r\n            const rec = me.#data[i - 1];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.length === 0;\r\n        GSEvent.send(me, 'selected', me.#selected);\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        this.store.sort = data || [];\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        this.store.filter = data || [];\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(title = '', name = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" href=\"#\" >${title}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', 'First');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', 'Last');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', 'Next');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', 'Previous');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","self","hasOwnProperty","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","setAttribute","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","filter","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","createElement","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","res","push","innerHTML","innerText","toggle","apply","contains","root","unwrap","querySelectorAll","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","hidden","queryAll","ignore","toValue","every","d","setValue","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","timeout","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","prototype","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","data","ct","json","isJson","func","parseFunction","isFunc","toJson","HTMLDataListElement","super","entries","GSComboExt","HTMLSelectElement","GSDataListExt","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","GSDOMObserver","create","disconnect","GSFormExt","HTMLFormElement","deattachListeners","attach","evt","className","reset","comp","checkValidity","source","valid","reportValidity","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","isInList","clean","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","c","allComps","allRoot","pos","neg","objsH","isComp","isBefore","itm","close","tgt","GSData","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","getTemplate","hide","show","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDateFormat","format","Intl","DateTimeFormat","GSYearFormat","current","offset","getFullYear","GSCurrencyFormat","currency","NumberFormat","GSAlert","observeAttributes","btn","message","activeCSS","dismissible","active","GSItem","validate","cnt","cls","items","generateItem","kv","getDismiss","getToggle","getAction","getInject","getCSS","getSelectable","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","getName","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","genericItems","cssHead","cssBody","itemid","title","autoclose","isVisible","loadData","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","GSModal","focusable","focus","normal","isOk","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","dataAttrs","dataToString","cssnav","cssactive","contentTpl","getCSSAttr","getSelectableAttr","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","arr","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsPlacement","bsContent","trigger","bsTrigger","toggleClass","openable","GSProgress","bar","percentage","label","fromTemplateLiteral","Math","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","popupFixed","firstChild","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsBackdrop","scroll","bsScroll","closeBtn","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","click","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","textContent","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","getData","ceil","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","abs","GSColumn","clssort","sortable","renderFilter","auto","cssFilter","isCombo","counter","toJSON","GSHeader","columns","heads","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","cols","hdr","isAppend","row","isSelected","rowIndex","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","last","CSS_ITEM","floor","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}