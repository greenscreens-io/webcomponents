{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs","webpack:///./modules/components/GSTime.mjs","webpack:///./modules/components/GSYear.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.setAttribute('data-hash', hash);\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tisMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tisSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tisAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile();\r\n\t\tconst isAsset = me.isAsset();\r\n\t\tconst isSchema = me.isSchema();\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (self.GS_DEV_MODE) {\r\n\t\t\ttry {\r\n\t\t\t\tconst base = url.startsWith('//') || url.startsWith('http') ? undefined : location.origin;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject special CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * @param {number} time \r\n\t * @returns {void}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\twindow.GSUtil = GSUtil;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert element data-* attributes into JSON object\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object}\r\n\t */\r\n\tstatic getData(el) {\r\n\t\tconst o = {}\r\n\t\tif (!GSAttr.isHTMLElement(el)) return o;\r\n\t\tArray.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => o[v.name.split('-')[1]] = v.value);\r\n\t\treturn o;\r\n\t}\r\n\r\n\t/**\r\n\t * Copy data attributes from one element to another\r\n\t * @param {HTMLElement} source \r\n\t * @param {HTMLElement} target \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic setData(source, target) {\r\n\t\tif (!GSAttr.isHTMLElement(source)) return false;\r\n\t\tif (!GSAttr.isHTMLElement(target)) return false;\r\n\t\tArray.from(source.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => GSAttr.set(target, v.name, v.value));\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc.body.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic wrap(own, tpl) {\r\n\t\treturn GSDOM.link(own, tpl || document.createElement('gs-block'));\r\n\t}\r\n\r\n\tstatic link(own, tpl) {\r\n\t\ttpl.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) tpl.setAttribute('slot', own.slot);\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\t//return el instanceof HTMLTemplateElement && el.content && el.content.firstElementChild;\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.tagName.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn (el.getAttribute('is') || '').indexOf('gs-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return [];\r\n\t\treturn Array.from(el.childNodes).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {void}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\tel.classList.add(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {booelan}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\treturn el.classList.remove(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\tconst isOk = GSDOM.isHTMLElement(el) && el.parentNode;\r\n\t\treturn isOk ? el.parentNode.removeChild(el) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\t static getByID(el, id) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry))  return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\t\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif(!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerText = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts Ture to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.classList.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = el.computedStyleMap().get('text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (!hidden && el.getAttribute('data-ignore') === 'true') return;\r\n\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (obj.hasOwnProperty(el.name)) el.value = obj[el.name];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\tif (!owner) return document;\r\n\t\t//return GSDOM.isGSElement(owner) ? owner.shadowRoot : owner;\r\n\t\treturn owner.self || owner;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic enableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(own, 'input, select, .btn').forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic disableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(el, 'input, select, .btn').forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tif (el) el.value = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {number} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = this.#cache.forEach(el => el.id == id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name);\r\n            if (!el) el = GSComponents.get(name);\r\n            if (el) return r(el);\r\n            GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.path[0];\r\n            const ok = el.id === name || el.tagName === name;\r\n            if (!ok) return;\r\n            fn(el, e);\r\n        };\r\n        let el = GSComponents.find(name);\r\n        if (!el) el = GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', nocache = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n\r\n        if (url.startsWith('http')) {\r\n            path = url;\r\n        } else if (url.startsWith('./')) {\r\n            path = `${location.origin}${location.pathname}/.${url}`;\r\n        } else if (url.startsWith('../')) {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}${url}`;\r\n        } else if (location.href.endsWith('/')) {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        const uri = new URL(path.replaceAll('//', '/'));\r\n        // to handle caching\r\n        if (nocache) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * @param {string} def\r\n     * @return {string}\r\n     */\r\n    static async getTemplate(def = '') {\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n        const isURL = GSUtil.isURL(def);\r\n        if (!isURL) return def;\r\n        def = GSLoader.getTemplateURL(def);\r\n        return  GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static getTemplateURL(url = '') {\r\n\r\n        const caching = self.GS_DEV_MODE === true;\r\n        if (url.startsWith('//')) {\r\n            return GSLoader.normalizeURL(GSLoader.templateURL + url, caching);\r\n        }\r\n\r\n        return GSLoader.normalizeURL(url, caching);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.templatePath, false);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult tempalte path\r\n     * @return {string}\r\n     */\r\n    static get templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {string}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {object|string}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val);\r\n        const res = await fetch(url, { method: method, headers : headers});\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * @param {*} url Full or partial url path\r\n     * @param {*} method http method GET|POST|PUT\r\n     * @param {*} asjson return json or string\r\n     * @param {*} dft default value\r\n     * @returns {object|string}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', asjson = false, dft) {\r\n        try {\r\n            return GSLoader.load(url, method, null, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * @param {JSON|func|url} val \r\n     */\r\n    static async loadData(val = '') {\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * <datalist is=\"gs-ext-datalist\">\r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            me.innerHTML = list.join('\\n');\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, document.body, 'action', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e, own) {\r\n        const me = own || this;\r\n        const sts = GSFormExt.#validateCaller(e, me, 'modal', 'GS-MODAL');\r\n        if (!sts) return;\r\n\r\n        if (e.detail.ok) return GSFormExt.#onSubmit(e, me);\r\n\r\n        const evt = e.detail.evt;\r\n        const isReset = evt && evt.target.className.indexOf('reset') > 0;\r\n        if (isReset) me.reset();\r\n    }\r\n\r\n    static #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == e.target || e.path.indexOf(parent) > -1;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        if (e.detail) e.detail.data = data;\r\n        GSEvent.send(me, 'form', data, true, true);\r\n        return me.reportValidity();\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]',\r\n        9: '[0-9]', '#': '[0-9]',\r\n        x: '[a-zA-Z]', X: '[a-zA-Z]',\r\n        _: '[0-9]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.indexOf(v) > -1) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.indexOf(value) > -1;\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = GSAttr.getData(opt);\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = GSAttr.getAsBool(me, 'data-selectable', true);\r\n        if (!accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const attrs = GSAttr.getData(el);\r\n        const own = GSNavLinkExt.#owner(el);\r\n        GSEvent.send(own, 'action', { type: 'active', data: attrs, source: e }, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = GSAttr.get(own, 'data-bs-target');\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #dismissCSS = 'data-bs-dismiss';\r\n    static #toggleCSS = 'data-bs-toggle';\r\n    static #targetCSS = 'data-bs-target';\r\n    static #injectCSS = 'data-inject';\r\n    static #dataCSS = 'data-css';\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\";\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.hasAttribute(GSDataAttr.#dismissCSS)\r\n            || el.hasAttribute(GSDataAttr.#toggleCSS)\r\n            || el.hasAttribute(GSDataAttr.#injectCSS);\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.hasAttribute(GSDataAttr.#toggleCSS)) return el;\r\n        if (el.hasAttribute(GSDataAttr.#dismissCSS)) return el;\r\n        if (el.hasAttribute(GSDataAttr.#injectCSS)) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = GSDataAttr.getInject(el);\r\n        const dismiss = GSDataAttr.getDismiss(el);\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = GSDataAttr.#getToggle(el);\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => hidden.indexOf(el) == -1);\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!GSDataAttr.#isInject(inject)) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = GSAttr.get(source, GSDataAttr.#dataCSS, '');\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => el.innerHTML = html);\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isInject(val) {\r\n        return val && val.length > 0;\r\n    }\r\n\r\n    static #getDismiss(el) {\r\n        return GSAttr.get(el, GSDataAttr.#dismissCSS);\r\n    }\r\n\r\n    static #getToggle(el) {\r\n        return GSAttr.get(el, GSDataAttr.#toggleCSS);\r\n    }\r\n\r\n    static #getInject(el) {\r\n        return GSAttr.get(el, GSDataAttr.#injectCSS);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = GSAttr.get(el, GSDataAttr.#targetCSS) || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        const val = GSDataAttr.#getDismiss(el);\r\n        return GSDataAttr.#isDismiss(val) ? val : '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        const val = GSDataAttr.#getToggle(el);\r\n        return GSDataAttr.#isToggle(val) ? val : '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        const val = GSDataAttr.#getInject(el);\r\n        return GSDataAttr.#isInject(val) ? val : '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return GSDataAttr.#isDismiss(GSDataAttr.#getDismiss(el));\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return GSDataAttr.#isToggle(GSDataAttr.#getToggle(el));\r\n    }\r\n\r\n    /**\r\n     * Return if element is injectable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isInject(el) {\r\n        return GSDataAttr.#isInject(GSDataAttr.#getInject(el));\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get isInitialized() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-ga-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter, fields) {\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static isDesktop() {\r\n        return !GSEnvironment.isMobile();\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop();\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile();\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSi18n from \"./GSi18n.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tif (GSi18n.isInitialized) GSi18n.isInitialized.translateDOM(me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @returns {string}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @param {string} name \r\n\t * @returns {void}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'componentready', me.id, true, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * @returns {void}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\trequestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') el.innerHTML = me.message;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t* Retrieve gs-item template or internal content\r\n\t* NOTE: If tempalte set, item content is overriden\r\n\t* @param {HTMLElement} el \r\n\t* @returns {string}\r\n\t*/\r\n\tstatic async getTemplate(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cnt = tpl ? await GSLoader.loadTemplate(tpl) : '';\r\n\t\tif (cnt) return cnt;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\tstatic getBody(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tif (tpl) return `<gs-template href=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-header':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, false, oldValue);\r\n        GSDOM.toggleClass(el, true, newValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const title = await GSLoader.getTemplate(me.#getTitle(el));\r\n    const message = await GSLoader.getTemplate(me.#getMessage(el));\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n      <div class=\"accordion-item ${me.css}\">\r\n        <slot name=\"content\">\r\n            <h2 class=\"accordion-header\">\r\n              <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                ${title}\r\n              </button>\r\n            </h2>\r\n            <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n              <div class=\"accordion-body\">${message}</div>\r\n            </div>      \r\n        </slot>\r\n    </div>\r\n    `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * @param {JSON|func|url} val \r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return el.innerHTML = me.title;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    me.#menu.innerHTML = opts.join('');\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    if (e instanceof Event) {\r\n      e.preventDefault();\r\n      //if (e.target instanceof GSContext) return;\r\n    }\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu.getBoundingClientRect();\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.hasAttribute('data-action'))\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = GSAttr.getData(e.target);\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * @param {JSON|func|url} val \r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const style = window.getComputedStyle(me.parentElement);\r\n        return style.display === 'flex' && style.flexGrow !== '0';\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    async #html(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el);\r\n\r\n        const style = me.#style(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#class(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #style(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #class(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = me.#getCSS(el);\r\n        const href = me.#getHref(el);\r\n        const action = GSItem.getActionAttr(el);\r\n        const dissmis = GSItem.getDismissAttr(el);\r\n        const target = GSItem.getTargetAttr(el);\r\n        const toggle = GSItem.getToggleAttr(el);\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${action} ${toggle} ${target} ${dissmis}>\r\n                ${tpl || message}\r\n                </a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getCSS(el) {\r\n        return GSAttr.get(el, 'css', '');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    #getHref(el) {\r\n        return GSAttr.get(el, 'href', \"#\");\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * @param {JSON|func|url} val \r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'modal', me.#onModal.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onModal(e) {\r\n    const me = this;\r\n    const sts = me.#validateCaller(e, e.target, 'close', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    let sts = me.#validateCaller(e, e.target, 'submit', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #validateCaller(e, own, type, comp) {\r\n    if (e.detail.type !== type) return false;\r\n    const parent = GSDOM.closest(own, comp);\r\n    return parent == this;\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    let sts = true;\r\n    try {\r\n      const action = GSAttr.get(e.path[0], 'data-action');\r\n      if (GSModal.#actions.indexOf(action) < 0) return sts = false;\r\n      GSEvent.prevent(e);\r\n      const isOk = action === 'ok';\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close();\r\n    }\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n  \r\n\t/**\r\n\t * Search for named slot tag or css selector \r\n\t * @param {string} name Tagged slot  name\r\n\t * @param {*} qry CSS selector\r\n\t * @returns {HTMLElement|Array<HTMLElement>}\r\n\t */\r\n\t#findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n\t\tconst el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n\t\tif (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n\t}\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl(this, 'title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    this.title.innerHTML = val;\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl(this, 'body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    this.body.innerHTML = val;\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <div class=\"modal d-none fade\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header border-0\">\r\n              <div class=\"modal-title\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer border-0 justify-content-${me.align}\">\r\n              <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop d-none fade \"></div>    \r\n    `\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = me.#getIcon(el);\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" id=\"${GSID.id}-nav\"                \r\n                ${GSItem.getDismissAttr(el)} ${GSItem.getTargetAttr(el)} \r\n                ${GSItem.getToggleAttr(el)} ${GSItem.getActionAttr(el)} \r\n                ${GSItem.getInjectAttr(el)} ${GSItem.getCSSAttr(el)}\r\n                ${GSItem.getSelectableAttr(el)} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getIcon(el) {\r\n        return GSAttr.get(el, 'icon');\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * @param {JSON|func|url} val \r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content') || GSAttr.get(me.target, 'data-bs-content', '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger') || GSAttr.get(me.target, 'data-bs-trigger', 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.indexOf('focus') > -1;\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.indexOf('hover') > -1;\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return el && (el.firstElementChild instanceof GSPopover || el.nextElementSibling instanceof GSPopover);\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el instanceof HTMLElement && el.hasAttribute('data-bs-content') && GSAttr.get(el, 'data-bs-toggle') === 'popover';\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) bar.innerHTML = me.#fromLabel();\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = 'p-4';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = el.active ? me.#activeTabCSS(el) : '';\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = el.active ? me.#activePaneCSS(el) : '';\r\n    const body = GSItem.getBody(el);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * @param {JSON|func|url} val \r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me.target, 'mouseenter', me.show.bind(me));\r\n        GSEvent.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupAbsolute(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#render();\r\n            GSDOM.toggleClass(this.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(this.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.innerHTML ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return el && (el.firstElementChild instanceof GSTooltip || el.nextElementSibling instanceof GSTooltip);\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el instanceof HTMLElement && el.hasAttribute('title') && GSAttr.get(el, 'data-bs-toggle') === 'tooltip';\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) me.#titleEl.innerHTML = me.title;\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', GSAttr.getAsBool(me.target, 'data-bs-backdrop', 'false'));\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', GSAttr.getAsBool(me.target, 'data-bs-scroll', 'false'));\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" flat=\"true\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.self; // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * @param {*} name \r\n     * @returns {void}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.indexOf(mode) > -1;\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.indexOf(val) > -1;\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defiend mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        return Array.from(this.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th>${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.items.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'title', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', 'form-control');\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].indexOf(val) > -1;\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        //const idx = [...me.parentElement.children].indexOf(me);\r\n        return { name: me.name, title: me.title, width: me.width, sortable: me.sortable, idx: me.index };\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = GSDOM.queryAll(me, 'gs-column[filter=true]');\r\n        const columns = GSDOM.queryAll(me, 'gs-column');\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push('<tr is=\"gs-tablefilter\">');\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push('<tr is=\"gs-tablesort\">');\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const heads = [];\r\n        const cols = GSDOM.queryAll(me, 'gs-column');\r\n        cols.forEach((el, i) => {\r\n            heads.push(el.toJSON());\r\n        });\r\n        return heads;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\">`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        me.innerHTML = rows.join('');\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        const val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        return `<td class=\"${me.cssCell}\">${val || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(el.rowIndex));\r\n        GSEvent.send(me, 'select', data, true);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.childNodes).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.querySelector('gs-header');\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        me.self.innerHTML = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data = []) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.forEach(i => {\r\n            const rec = me.#data[i - 1];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        GSEvent.send(me, 'selected', me.#selected);\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        this.store.sort = data || [];\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        this.store.filter = data || [];\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.path[0];\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (!me.#auto) return;\r\n        GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        if (!list) return el.value;\r\n        const opt = list.querySelector(`option[value=\"${el.value}\"]`);\r\n        if (!opt) return el.value;\r\n        return GSAttr.get(opt, 'data-value', el.value);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(title = '', name = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" href=\"#\" >${title}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', 'First');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', 'Last');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', 'Next');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', 'Previous');\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Notification|GSToast}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * @returns {boolean} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTime\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTime extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        me.innerHTML = date.toLocaleTimeString(me.locale);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = setInterval(me.#update.bind(me), me.interval * 1000);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = 60) {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time', GSTime);\r\n        Object.seal(GSTime);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYear\r\n */\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYear extends HTMLElement {\r\n\r\n    connectedCallback() {\r\n        this.innerHTML = new Date().getFullYear();\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year', GSYear);\r\n        Object.seal(GSYear);\r\n    }\r\n}"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","setAttribute","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","self","GS_DEV_MODE","base","startsWith","undefined","origin","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","bind","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","filter","source","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","createElement","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","res","push","innerHTML","innerText","toggle","apply","contains","root","unwrap","querySelectorAll","computedStyleMap","hidden","toValue","hasOwnProperty","every","d","setValue","queryAll","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","callback","timeout","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","path","flat","result","findAll","prototype","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","nocache","isFile","pathname","pop","endsWith","level","documentElement","isURL","getTemplateURL","loadSafe","caching","normalizeURL","templateURL","templatePath","TEMPLATE_URL","method","load","headers","asjson","data","ct","fetch","ok","json","text","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","customElements","define","extends","super","seg","entries","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","GSDOMObserver","create","disconnect","GSFormExt","HTMLFormElement","deattachListeners","attach","evt","className","reset","comp","checkValidity","valid","reportValidity","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","isInList","clean","getData","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","getAsBool","nav","panel","panelItem","attrs","item","tgtID","GSDataAttr","inject","getInject","dismiss","getDismiss","getTarget","comps","gs","c","allComps","allRoot","pos","neg","objsH","isComp","isBefore","itm","close","tgt","GSi18n","isInitialized","clearInterval","oldVal","newVal","has","translateDOM","auto","HTMLScriptElement","HTMLStyleElement","HTMLLinkElement","HTMLMetaElement","textContent","dname","dval","translate","gsi18n","lang","kv","hk","setInterval","arr","exec","hv","setAsBool","default","GSData","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","GSEnvironment","strAgt","toLocaleLowerCase","isEdge","isDesktop","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","getTemplate","hide","show","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSAlert","observeAttributes","btn","message","activeCSS","dismissible","active","GSItem","validate","cnt","loadTemplate","items","generateItem","getToggle","getAction","getCSS","getSelectable","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","selectable","getName","getActive","getBody","GSAccordion","genericItems","cssHead","cssBody","itemid","title","autoclose","isVisible","loadData","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSLayout","isVertical","getComputedStyle","display","flexGrow","fixed","resize","sfx","max","getAsNum","min","vpos","hpos","cls","start","previousElementSibling","end","GSList","GSModal","focusable","focus","normal","isOk","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","GSNav","btns","dataAttrs","dataToString","cssnav","cssactive","contentTpl","getCSSAttr","getSelectableAttr","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","offset","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","trigger","toggleClass","openable","GSProgress","bar","percentage","label","fromTemplateLiteral","Math","trunc","setAsNum","increase","decrease","GSSplitter","full","cursor","localStorage","getItem","setItem","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","cssTitle","scroll","closeBtn","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","click","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","ceil","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","abs","GSColumn","clssort","sortable","renderFilter","cssFilter","isCombo","counter","toJSON","GSHeader","columns","cssHeader","heads","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","cols","hdr","isAppend","row","isSelected","rowIndex","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","last","CSS_ITEM","floor","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast","GSTime","attributeChanged","stop","date","toLocaleTimeString","interval","GSYear","getFullYear"],"sourceRoot":""}
