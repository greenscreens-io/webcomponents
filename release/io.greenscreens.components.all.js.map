{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/base/GSDate.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSDropdown.mjs","webpack:///./modules/components/GSFormGroup.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSPopup.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvent.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = me.computedStyleMap().get('text-transform').value;\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, 'show', me.visible);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, 'show', me.visible);\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n          me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               id=\"${me.name}\" name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? 'font-monospace' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const style = window.getComputedStyle(parent);\r\n        return style.display === 'flex' && style.flexGrow !== '0';\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #html(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#style(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#class(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #style(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #class(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.visible);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, 'show', me.visible);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.visible));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')])\r\n        return {\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","data","blob","Blob","createObjectURL","createElement","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","filter","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","entries","GSComboExt","HTMLSelectElement","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","disconnect","GSFormExt","HTMLFormElement","registerFilter","deattachListeners","attach","action","reset","reportValidity","source","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","placeholder","mask","strict","optimized","chars","masks","cnt","autocopy","hasAttribute","autoselect","maxLength","isMatch","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","pos","setSelectionRange","canceled","title","substring","vld","lastIndex","c","toLocaleLowerCase","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","selectable","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","allComps","allRoot","hidden","neg","objsH","isComp","isBefore","itm","close","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","hide","show","evt","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","ceil","kk","W","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","message","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","parseInt","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSFormGroup","tagList","layout","cellField","cssField","description","cssLabel","label","cellLabel","hasIcon","multiple","readonly","accept","autocapitalize","autocomplete","max","min","maxlength","minlength","step","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","focusable","focus","normal","isOk","forms","form","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","comp","GSProgress","bar","percentage","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssInput","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","dropEffect","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","clssort","sortable","cspan","colspan","renderFilter","cssFilter","auto","isCombo","direction","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","noDataText","reduce","innerText","cols","hdr","fmt","Number","isAppend","row","isSelected","GSTable","store","dataID","contextMenu","selected","isFilterable","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","CSS_ITEM","GSNotification","BOTTOM_END","connectCallback","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}